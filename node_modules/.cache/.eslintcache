[{"D:\\TrackSim\\FE\\src\\index.js":"1","D:\\TrackSim\\FE\\src\\App.js":"2","D:\\TrackSim\\FE\\src\\reportWebVitals.js":"3","D:\\TrackSim\\FE\\src\\components\\button_group.js":"4","D:\\TrackSim\\FE\\src\\components\\Radar\\RadarForm.js":"5","D:\\TrackSim\\FE\\src\\components\\ownplatform\\Form.js":"6","D:\\TrackSim\\FE\\src\\components\\Radar\\RadarHome.js":"7","D:\\TrackSim\\FE\\src\\components\\OwnShip\\OwnShipHome.js":"8","D:\\TrackSim\\FE\\src\\components\\AIS\\AisForm.js":"9","D:\\TrackSim\\FE\\src\\components\\ADSB\\AdsbHome.js":"10","D:\\TrackSim\\FE\\src\\components\\OwnShip\\OwnshipForm.js":"11"},{"size":854,"mtime":1683954523818,"results":"12","hashOfConfig":"13"},{"size":936,"mtime":1685192233418,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1683954523874,"results":"15","hashOfConfig":"13"},{"size":682,"mtime":1683954523955,"results":"16","hashOfConfig":"13"},{"size":29770,"mtime":1683954524113,"results":"17","hashOfConfig":"13"},{"size":29629,"mtime":1684804932741,"results":"18","hashOfConfig":"13"},{"size":82964,"mtime":1685933346454,"results":"19","hashOfConfig":"13"},{"size":54467,"mtime":1684911731362,"results":"20","hashOfConfig":"13"},{"size":88742,"mtime":1685368612232,"results":"21","hashOfConfig":"13"},{"size":81478,"mtime":1685323533993,"results":"22","hashOfConfig":"13"},{"size":67453,"mtime":1685933296421,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1jii65j",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\TrackSim\\FE\\src\\index.js",[],[],[],"D:\\TrackSim\\FE\\src\\App.js",[],[],"D:\\TrackSim\\FE\\src\\reportWebVitals.js",[],[],"D:\\TrackSim\\FE\\src\\components\\button_group.js",["64","65"],[],"import React, { useEffect, useState } from \"react\"\n\n\n\n\n\n\nfunction Button_grup() {\n    const [view, setView] = useState([]);\n\n  return (\n\n    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\n        <button type=\"button\" class=\"btn btn-outline-primary\" onClick={() => setView(1)}>Own Platform</button>\n        <button type=\"button\" class=\"btn btn-outline-primary\" onClick={() => setView(2)}>Radar</button>\n        <button type=\"button\" class=\"btn btn-outline-primary\" onClick={() => setView(3)}>AIS</button>\n        <button type=\"button\" class=\"btn btn-outline-primary\" onClick={() => setView(4)}>ADSB</button>\n    </div>\n  );\n}\n\n\nexport default Button_grup;\n","D:\\TrackSim\\FE\\src\\components\\Radar\\RadarForm.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79"],[],"import  Axios  from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport './RadarForm.css';\n\nconst FormRadar = (props) => {\n\n    const [RadarData, setRadarData] = useState([]);\n    const [statusRadio, setStatusRadio] = useState(1);\n\n    const [id, setId] = useState(0);\n    const [status, setStatus] = useState(\"Status\");\n    const [lastSend, setLastSend] = useState(\"LastSend\");\n    const [time, setTime] = useState(\"Time\");\n\n    const [trackMode, setTrackMode] = useState(\"\");\n    const [environment, setEnvironment] = useState(\"Environment\");\n    const [course, setCourse] = useState(0);\n    const [speed, setSpeed] = useState(0);\n    const [courseRangeMin, setCourseRangeMin] = useState(0);\n    const [courseRangeMax, setCourseRangeMax] = useState(0);\n    const [courseIncrement, setCourseIncrement] = useState(0);\n    const [latitude, setLatitude] = useState(0);\n    const [bearing, setBearing] = useState(0);\n    const [mode1code, setMode1Code] = useState(0);\n    const [mode2code, setMode2Code] = useState(0);\n\n    const [trackInput, setTrackInput] = useState(\"\");\n    const [startTime, setStartTime] = useState(\"\");\n    const [speedRangeMin, setSpeedRangeMin] = useState(0);\n    const [speedRangeMax, setSpeedRangeMax] = useState(0);\n    const [speedIncrement, setSpeedIncrement] = useState(0);\n    const [longitude, setLongitude] = useState(0);\n    const [distance, setDistance] = useState(0);\n    const [mode3code, setMode3Code] = useState(0);\n    const [mode4code, setMode4Code] = useState(0);\n\n    const [count, setCount] = useState(0);\n    const [endTime, setEndTime] = useState(\"\");\n    const [altitudeRangeMin, setAltitudeMin] = useState(0);\n    const [altitudeRangeMax, setAltitudeMax] = useState(0);\n    const [altitudeIncrement, setAltitudeIncrement] = useState(0);\n    const [altitude, setAltitude] = useState(0);\n    const [mode5code, setMode5Code] = useState(0);\n\n    const [message, setMessage] = useState(\"\");\n\n      //// Handler Radio 1\n  \n  let handlerRadio1 = async (e) => {\n    setStatusRadio(1)\n  };\n\n  let hadlerDisable = async (e) => {\n    document.getElementById(\"tmr\").disabled = false;\n  };\n\n\n\n\n        //// Handler Radio 2\n  \n        let handlerRadio2 = async (e) => {\n            setStatusRadio(2)\n          };\n\n\n    //// REQUEST GET\n\n  const getRadarData = async () => {\n    try{\n      let response = await Axios.get('http://localhost:8080/radar')\n      setRadarData(response.data)\n    } catch(e){\n      console.log(e.message)\n    }\n  }\n\n\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n        getRadarData();\n    },1000)    \n  }, [])\n\n\n  function disableField(){\n\n    let get= document.getElementById(\"count\")\n    \n    get.disabled = true;\n    \n    }\n\n    \n    let handleSendOnlyPlatform = async (e) => {\n        e.preventDefault();\n        try {\n          // Send Only\n\n        \n        if(trackInput === \"multi\" && trackMode == \"Manual\"){\n            for (let step = 0; step < count; step++) {\n    \n                let resSend= await fetch(\"http://localhost:8080/radar/multimanual\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                    status: status,\n                    lastSend: lastSend,\n                    count:count,\n                    time:time,\n                    trackInput:trackInput,\n                    course:course,\n                    speed:speed,\n                    trackMode: trackMode,\n                    environment: environment,\n                    courseRangeMin:courseRangeMin,\n                    courseRangeMax:courseRangeMax,\n                    courseIncrement:courseIncrement,\n                    latitude:latitude,\n                    bearing:bearing,\n                    mode1code:mode1code,\n                    mode2code:mode2code,\n                    startTime:startTime,\n                    speedRangeMin:speedRangeMin,\n                    speedRangeMax:speedRangeMax,\n                    speedIncrement:speedIncrement,\n                    longitude:longitude,\n                    distance:distance,\n                    mode3code:mode3code,\n                    mode4code:mode4code,\n                    endTime:endTime,\n                    altitudeRangeMin:altitudeRangeMin,\n                    altitudeRangeMax:altitudeRangeMax,\n                    altitudeIncrement:altitudeIncrement,\n                    altitude:altitude,\n                    mode5code:mode5code\n\n                    }),\n                    headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                    },\n                    \n                });\n            }\n        } else if(trackInput === \"multi\" && trackMode == \"Automatic\"){\n            for (let step = 0; step < count; step++) {\n    \n                let resSend= await fetch(\"http://localhost:8080/radar/multiauto\", {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                    status: status,\n                    lastSend: lastSend,\n                    count:count,\n                    time:time,\n                    trackInput:trackInput,\n                    course:course,\n                    speed:speed,\n                    trackMode: trackMode,\n                    environment: environment,\n                    courseRangeMin:courseRangeMin,\n                    courseRangeMax:courseRangeMax,\n                    courseIncrement:courseIncrement,\n                    latitude:latitude,\n                    bearing:bearing,\n                    mode1code:mode1code,\n                    mode2code:mode2code,\n                    startTime:startTime,\n                    speedRangeMin:speedRangeMin,\n                    speedRangeMax:speedRangeMax,\n                    speedIncrement:speedIncrement,\n                    longitude:longitude,\n                    distance:distance,\n                    mode3code:mode3code,\n                    mode4code:mode4code,\n                    endTime:endTime,\n                    altitudeRangeMin:altitudeRangeMin,\n                    altitudeRangeMax:altitudeRangeMax,\n                    altitudeIncrement:altitudeIncrement,\n                    altitude:altitude,\n                    mode5code:mode5code\n\n                    }),\n                    headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                    },\n                    \n                });\n            }\n        } else if(trackInput === \"single\"){\n            let resSend= await fetch(\"http://localhost:8080/radar/single\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                status: status,\n                lastSend: lastSend,\n                count:count,\n                time:time,\n                trackInput:trackInput,\n                course:course,\n                speed:speed,\n                trackMode: trackMode,\n                environment: environment,\n                courseRangeMin:courseRangeMin,\n                courseRangeMax:courseRangeMax,\n                courseIncrement:courseIncrement,\n                latitude:latitude,\n                bearing:bearing,\n                mode1code:mode1code,\n                mode2code:mode2code,\n                startTime:startTime,\n                speedRangeMin:speedRangeMin,\n                speedRangeMax:speedRangeMax,\n                speedIncrement:speedIncrement,\n                longitude:longitude,\n                distance:distance,\n                mode3code:mode3code,\n                mode4code:mode4code,\n                endTime:endTime,\n                altitudeRangeMin:altitudeRangeMin,\n                altitudeRangeMax:altitudeRangeMax,\n                altitudeIncrement:altitudeIncrement,\n                altitude:altitude,\n                mode5code:mode5code\n\n                }),\n                headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                },\n                \n            });\n        }\n        \n    \n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n\n        \n\n    \n\nreturn (\n    <div>\n        <div id=\"radar-list-info\">\n        <h5 className=\"title\">Radar List Info</h5>\n        <form className=\"formradarlist\">\n            <table className=\"table\" border={2}>\n                <thead>\n                    <tr>\n                        <th>No</th>\n                        <th>Track Id</th>\n                        <th>Track Mode</th>\n                        <th>Environment</th>\n                        <th>Course</th>\n                        <th>Speed</th>\n                        <th>Altitude</th>\n                        <th>latitude</th>\n                        <th>longitude</th>\n                        <th>M1</th>\n                        <th>M2</th>\n                        <th>M3</th>\n                        <th>M4</th>\n                        <th>M5</th>\n                        <th>Start Time</th>\n                        <th>End Time</th>\n                        <th>Last Update</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                        <th>Select All</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                  RadarData.map((data, index) => {\n                    return (\n                      <tr key={index}>\n                      <td>{data.id}</td>\n                      <td>{data.id}</td>\n                      <td>{data.trackMode}</td>\n                      <td>{data.environment}</td>\n                      <td>{data.course}</td>\n                      <td>{data.speed}</td>\n                      <td>{data.altitude}</td>\n                      <td>{data.latitude}</td>\n                      <td>{data.longitude}</td>\n                      <td>{data.mode1code}</td>\n                      <td>{data.mode2code}</td>\n                      <td>{data.mode3code}</td>\n                      <td>{data.mode4code}</td>\n                      <td>{data.mode5code}</td>\n                      <td>{data.startTime}</td>\n                      <td>{data.endTime}</td>\n                      <td>{data.lastSend}</td>\n                      <td>{data.status}</td>\n                      <td>Action</td>\n                      <td>Sellect All</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n            </table>\n        </form>\n    </div>\n\n    <div id=\"data-setting\">\n        <h5 className=\"title\">Data Setting</h5>\n            <form className=\"formdatasetting\">\n                <table className=\"table\"  >\n                    <tr>\n                        <td></td>\n                        <td><label>Track Input</label></td>\n                        <td>             \n                            <select name=\"trak-input-radio\" id=\"er\" onChange={(e) => setTrackInput(e.target.value)} >\n                                <option value=\"-\">-- Pilih --</option>\n                                <option value=\"single\">Single</option>\n                                <option value=\"multi\">Multi</option>\n                                <option value=\"import\">Import</option>\n                            </select>\n                        </td>\n                        <td><label >Track Mode</label></td>\n                        <td>\n                            <select  name=\"track-mode-radio\" id=\"tmr\" onChange={(e) => setTrackMode(e.target.value)} disabled={((trackInput === \"-\")? true : false)}> \n                                <option value=\"-\">-- Pilih --</option>\n                                <option value=\"Manual\">Manual</option>\n                                <option value=\"Automatic\">Automatic</option>\n                            </select>\n                        </td>\n                        <td>Count</td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"count\"\n                            name=\"count\"\n                            placeholder=\"count\"\n                            onChange={(e) => setCount(e.target.value)}\n                            disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"single\") && (trackMode === \"Automatic\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><input type=\"file\" id=\"myfile\" name=\"myfile\" disabled={((trackInput !== \"import\")? true : false)}></input></td>\n                    </tr>\n\n                    <tr>\n                        <td></td>\n                        <td><label>Environment</label></td>\n                        <td>             \n                            <select name=\"environment-radio\" id=\"er\" onChange={(e) => setEnvironment(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                                <option value=\"land\">-- Pilih --</option>\n                                <option value=\"air\">Air</option>\n                                <option value=\"surface\">Surface</option>\n                                <option value=\"subsurface\">Subsurface</option>\n                                <option value=\"land\">land</option>\n                            </select>\n                        </td>\n                        <td><label >Start Time</label></td>\n                        <td>\n                            <input \n                            type=\"datetime-local\" \n                            id=\"start-time-input\" \n                            name=\"input-start\"\n                            onChange={(e) => setStartTime(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >End Time</label></td>\n                        <td>\n                            <input \n                            type=\"datetime-local\" \n                            id=\"end-time-input\" \n                            name=\"input-end\"\n                            onChange={(e) => setEndTime(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>  \n                        <td></td>\n                    </tr>\n\n\n                    <tr>\n                        <td></td>\n                        <td>Course</td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"course\"\n                            name=\"course\"\n                            placeholder=\"Course\"\n                            onChange={(e) => setCourse(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td>Speed</td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"speed\"\n                            name=\"speed\"\n                            placeholder=\"Speed\"\n                            onChange={(e) => setSpeed(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td>Altitude</td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"altitude\"\n                            name=\"altitude\"\n                            placeholder=\"Altitude\"\n                            onChange={(e) => setAltitude(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td></td>\n                    </tr>\n\n                    <tr>\n                        <td></td>\n                        <td>Course Variation</td>\n                        <td></td>\n                        <td>Speed Variation</td>\n                        <td></td>\n                        <td>Altitude  Variation</td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n         \n                    <tr>\n                        <td></td>\n                        <td><label >Course Range</label></td>\n                        <td >\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"course-range-min\" \n                            name=\"course-range-min\" \n                            placeholder=\"Min\"\n                            size={200}\n                            onChange={(e) => setCourseRangeMin(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                            &nbsp;\n                            To\n                            &nbsp;\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"course-range-max\" \n                            name=\"course-range-max\" \n                            placeholder=\"Max\"\n                            size={5}\n                            onChange={(e) => setCourseRangeMax(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td> \n                        <td><label >Speed Range</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"speed-range-min\" \n                            name=\"speed-range-min\" \n                            placeholder=\"Min\"\n                            size={5}\n                            onChange={(e) => setSpeedRangeMin(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                            &nbsp;\n                            To\n                            &nbsp;\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"speed-range-max\" \n                            name=\"speed-range-max\" \n                            placeholder=\"Max\"\n                            size={5}\n                            onChange={(e) => setSpeedRangeMax(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>  \n                        <td><label >Altitude Range</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"altitude-range-min\" \n                            name=\"altitude-range-min\" \n                            placeholder=\"Min\"\n                            size={5}\n                            onChange={(e) => setAltitudeMin(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                            &nbsp;\n                            To\n                            &nbsp;\n                            <input \n                            type=\"number\" \n                            className=\"input-range\"\n                            id=\"altitude-range-max\" \n                            name=\"altitude-range-max\"\n                            placeholder=\"Max\" \n                            size={5}\n                            onChange={(e) => setAltitudeMax(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>  \n                        <td></td>\n                    </tr>   \n\n                    <tr>\n                        <td></td>\n                        <td><label>Course Increment</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"course-increment\"\n                            name=\"course-increment\"\n                            placeholder=\"Course Increment\"\n                            onChange={(e) => setCourseIncrement(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >Speed Increment</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"speed-increment\"\n                            name=\"speed-increment\"\n                            placeholder=\"Speed Increment\"\n                            onChange={(e) => setSpeedIncrement(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><label>Altitude Increment</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"altitude-increment\"\n                            name=\"altitude-increment\"\n                            placeholder=\"Altitude Increment\"\n                            onChange={(e) => setAltitudeIncrement(e.target.value)} disabled={((trackMode === \"\") || ((trackInput === \"single\") && (trackMode === \"Manual\")) || ((trackInput === \"multi\") && (trackMode === \"Manual\")) || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td></td>\n                    </tr>\n\n                    <tr>\n                        <td><input type=\"radio\" id=\"radio1\" name=\"input1\" onClick={handlerRadio1} disabled={((trackInput === \"import\")? true : false)} /></td>\n                        <td><label>Latitude</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"latitude\"\n                            name=\"latitude\"\n                            placeholder=\"Latitude\"\n                            onChange={(e) => setLatitude(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\") || (statusRadio === 2)? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >Longitude</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"longitude\"\n                            name=\"longitude\"\n                            placeholder=\"Longitude\"\n                            onChange={(e) => setLongitude(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\") || (statusRadio === 2)? true : false)}> \n                            </input>\n                        </td>\n                        <td></td>\n                        <td>    \n                        </td>\n                        <td></td>\n                    </tr>\n\n                    <tr>\n                    <td><input type=\"radio\" id=\"radio2\" name=\"input1\"  onClick={handlerRadio2} disabled={((trackInput === \"import\")? true : false)}/></td>\n                        <td><label>Bearing</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"bearing\"\n                            name=\"bearing\"\n                            placeholder=\"Bearing\"\n                            onChange={(e) => setBearing(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\") || (statusRadio === 1)? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >Distance</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"distance\"\n                            name=\"distance\"\n                            placeholder=\"Distance\"\n                            onChange={(e) => setDistance(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\") || (statusRadio === 1)? true : false)}> \n                            </input>\n                        </td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                    </tr>\n\n                    <tr>\n                        <td></td>\n                        <td>IFF Data</td>\n                        <td colSpan={5}></td>\n                        <td></td>    \n                    </tr>\n\n                    <tr>\n                        <td></td>\n                        <td><label>Mode I Code</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"mode1\"\n                            name=\"mode1\"\n                            placeholder=\"Mode I Code\"\n                            onChange={(e) => setMode1Code(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >Mode III Code</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"mode3\"\n                            name=\"mode3\"\n                            placeholder=\"Mode III Code\"\n                            onChange={(e) => setMode3Code(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}> \n                            </input>\n                        </td>\n                        <td><label>Mode V Code</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"mode5\"\n                            name=\"mode5\"\n                            placeholder=\"Mode V Code\"\n                            onChange={(e) => setMode5Code(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td></td>                      \n                    </tr>\n\n                    <tr>\n                        <td></td>\n                        <td><label>Mode II Code</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"mode2\"\n                            name=\"mode2\"\n                            placeholder=\"Mode II Code\"\n                            onChange={(e) => setMode2Code(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}>\n                            </input>\n                        </td>\n                        <td><label >Mode IV Code</label></td>\n                        <td>\n                            <input \n                            type=\"number\" \n                            id=\"mode4\"\n                            name=\"mode4\"\n                            placeholder=\"Mode IV Code\"\n                            onChange={(e) => setMode4Code(e.target.value)} disabled={((trackMode === \"\") || (trackInput === \"import\")? true : false)}> \n                            </input>\n                        </td>\n                        <td colSpan={3}></td>\n                    </tr>\n           \n                </table>\n                    <button type=\"submit\" className=\"btn\" >GET DEFAULT</button>\n                    <button type=\"submit\" className=\"btn\" onClick={handleSendOnlyPlatform}>SAVE ONLY</button>\n                    <button type=\"submit\" className=\"btn\">SAVE & SEND</button>\n                    <button type=\"submit\" className=\"btn\">CANCEL</button>\n                    <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n            </form>\n        </div>\n\n\n\n      \n\n   </div>\n  );\n}\n\nexport default FormRadar; ","D:\\TrackSim\\FE\\src\\components\\ownplatform\\Form.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],[],"import  Axios  from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport './form.css';\n\nconst Form = (props) => {\n  \n  //Own Platform\n  const [ownplatform, setOwnplatform] = useState([]);\n  const [info, setInfo] = useState(0);\n  const [btnStartInfo, setStartInfo] = useState(0);\n  const [btnStopInfo, setStopInfo] = useState(0);\n  const [statusData, setStatusData] = useState(\"Kosong\");\n\n  const [editFormStatus, setEditFormStatus] = useState(\"False\");\n\n  const [ownplatformData, setOwnData] = useState([]);\n  const [ownplatformConfig, setConfig] = useState([]);\n  const [id, setId] = useState(0);\n  const [trackNumber, setTrackNumber] = useState(0);\n  const [status, setStatus] = useState(\"-\");\n  const [lastSend, setLastSend] = useState(\"Not Send\");\n  const [trackMode, setTrackMode] = useState(\"\");\n  const [environment, setEnvironment] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n  const [airTemperature, setAirTemperature] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [barometricPressure, setBarometricPressure] = useState(\"\");\n  const [windSpeed, setWindSpeed] = useState(\"\");\n  const [windDirection, setWindDirection] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [altitude, setAltitude] = useState(\"\");\n  const [pitch, setPitch] = useState(\"\");\n  const [accelerationX, setAccelerationX] = useState(\"\");\n  const [velocityX, setVelocityX] = useState(\"\");\n  const [speed, setSpeed] = useState(\"\");\n  const [roll, setRoll] = useState(\"\");\n  const [accelerationY, setAccelerationY] = useState(\"\");\n  const [velocityY, setVelocityY] = useState(\"\");\n  const [heading, setHeading] = useState(\"\");\n  const [yaw, setYaw] = useState(\"\");\n  const [accelerationZ, setAccelerationZ] = useState(\"\");\n  const [velocityZ, setVeloityZ] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  var selectedTmr = document.getElementById(\"tmr\");\n  var selectedEr = document.getElementById(\"er\");\n\n\n   \n\n    //// REQUEST GET CONFIG OWNPLATFORM\n\n    const getTrackMode = async () => {\n      try{\n      if(ownplatformConfig.trackMode == \"Automathic\"){\n        document.getElementById(\"send\").disabled = true;\n      } else if (ownplatformConfig.trackMode == \"Manual\"){\n        document.getElementById(\"btnstart\").disabled = true;\n        document.getElementById(\"btnstop\").disabled = true;\n      }\n    } catch(e){\n      console.log(e.message)\n    }\n    }\n\n\n  \n \n\n  \n\n\n\n    //// REQUEST GET CONFIG OWNPLATFORM\n\n    const getConfigOwnplatform = async () => {\n      try{\n        let response = await Axios.get('http://localhost:8080/ownplatform/config')\n        setConfig(response.data)\n        setStatusData(\"Ada\")\n      } catch(e){\n        console.log(e.message)\n      }\n      // document.getElementById(\"tabelseting\").style.display = \"none\";\n    }\n  \n    // useEffect(() => {\n    //   getConfigOwnplatform();\n    // }, [])\n\n\n\n\n    \n\n        //// REQUEST GET DATA OWNPLATFORM\n\n        const getDataOwnplatform = async () => {\n          try{\n            let response = await Axios.get('http://localhost:8080/ownplatform/data')\n            setOwnData(response.data)\n          } catch(e){\n            console.log(e.message)\n          }\n        }\n      \n        // useEffect(() => {\n        //   getDataOwnplatform();\n        // }, [])\n\n\n\n\n//// Save data OwnPlatform\n\n  let handleSaveOnlyOwnPlatform = async (e) => {\n    e.preventDefault();\n    try {\n      //Data\n      let resData= await fetch(\"http://localhost:8080/ownplatform/savedata\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          trackNumber: trackNumber,\n          humidity: humidity,\n          airTemperature: airTemperature,\n          barometricPressure: barometricPressure,\n          environment: selectedEr.value,\n          windSpeed: windSpeed,\n          windDirection: windDirection,\n          latitude: latitude,\n          longitude: longitude,\n          altitude: altitude,\n          pitch: pitch,\n          accelerationX: accelerationX,\n          velocityX: velocityX,\n          accelerationY: accelerationY,\n          velocityY: velocityY,\n          heading: heading,\n          yaw: yaw,\n          accelerationZ: accelerationZ,\n          velocityZ: velocityZ,\n          speed: speed,\n          roll: roll\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      //Config\n      let resConfig= await fetch(\"http://localhost:8080/ownplatform/saveconfig\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          trackNumber: trackNumber,\n          trackMode: selectedTmr.value,\n          startTime: startTime,\n          endTime: endTime,\n          status: status,\n          lastSend: lastSend\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n\n      //Disable form edit\n      setEditFormStatus(\"False\");\n\n\n      if (resData.status === 201 || resData.status === 201 || resConfig.status === 201 || resConfig.status === 200) {\n        setTrackMode(\"\");\n        setHumidity(\"\");\n        setAirTemperature(\"\");\n        setStartTime(\"\");\n        setEndTime(\"\");\n        setBarometricPressure(\"\");\n        setEnvironment(\"\");\n        setWindSpeed(\"\");\n        setWindDirection(\"\");\n        setLatitude(\"\");\n        setLongitude(\"\");\n        setAltitude(\"\");\n        setPitch(\"\");\n        setAccelerationX(\"\");\n        setVelocityX(\"\");\n        setSpeed(\"\");\n        setRoll(\"\");\n        setAccelerationY(\"\");\n        setVelocityY(\"\");\n        setHeading(\"\");\n        setYaw(\"\");\n        setAccelerationZ(\"\");\n        setVeloityZ(\"\");\n        setMessage(\"Track created successfully\");\n        \n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  \n  \n  //// Save and Send data OwnPlatform\n  \n    let handleSaveAndSendPlatform = async (e) => {\n      e.preventDefault();\n      try {\n        //Data\n        let resData= await fetch(\"http://localhost:8080/ownplatform/savedata\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            trackNumber: trackNumber,\n            humidity: humidity,\n            airTemperature: airTemperature,\n            barometricPressure: barometricPressure,\n            environment: selectedEr.value,\n            windSpeed: windSpeed,\n            windDirection: windDirection,\n            latitude: latitude,\n            longitude: longitude,\n            altitude: altitude,\n            pitch: pitch,\n            accelerationX: accelerationX,\n            velocityX: velocityX,\n            accelerationY: accelerationY,\n            velocityY: velocityY,\n            heading: heading,\n            yaw: yaw,\n            accelerationZ: accelerationZ,\n            velocityZ: velocityZ,\n            speed: speed,\n            roll: roll\n            \n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n        });\n  \n        //Config\n        let resConfig= await fetch(\"http://localhost:8080/ownplatform/saveconfig\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            trackNumber: trackNumber,\n            trackMode: selectedTmr.value,\n            startTime: startTime,\n            endTime: endTime,\n            status: status,\n            lastSend: lastSend\n            \n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n        });\n\n        let resSaveAndSend= await fetch(\"http://localhost:8080/ownplatform/saveandsend\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            trackNumber: trackNumber,\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n        });\n\n      //Disable form edit\n      setEditFormStatus(\"False\");\n  \n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n  \n\n  //// REQUEST Update OwnPlatform\n\n  let handleUpdateOwnPlatform = async (e) => {\n    e.preventDefault();\n    try {\n\n      setEditFormStatus(\"True\");\n\n      \n      const $selectTrackMode = document.getElementById('tmr');\n      $selectTrackMode.value = ownplatformConfig.trackMode;\n      const $selectEnvironment = document.getElementById('er');\n      $selectEnvironment.value = ownplatformData.environment;\n\n      setId(ownplatformConfig.id)\n      setHumidity(ownplatformData.humidity)\n      setAirTemperature(ownplatformData.airTemperature)\n      setStartTime(ownplatformConfig.startTime)\n      setEndTime(ownplatformConfig.endTime)\n      setBarometricPressure(ownplatformData.barometricPressure)\n      setWindSpeed(ownplatformData.windSpeed)\n      setWindDirection(ownplatformData.windDirection)\n      setLatitude(ownplatformData.latitude)\n      setLongitude(ownplatformData.longitude)\n      setAltitude(ownplatformData.altitude)\n      setPitch(ownplatformData.pitch)\n      setAccelerationX(ownplatformData.accelerationX)\n      setVelocityX(ownplatformData.velocityX)\n      setSpeed(ownplatformData.speed)\n      setRoll(ownplatformData.roll)\n      setAccelerationY(ownplatformData.accelerationY)\n      setVelocityY(ownplatformData.velocityY)\n      setHeading(ownplatformData.heading)\n      setYaw(ownplatformData.yaw)\n      setAccelerationZ(ownplatformData.accelerationZ)\n      setVeloityZ(ownplatformData.velocityZ)\n\n    } catch (err) {\n      console.log(err);\n    }\n\n   \n  };\n\n  //// Delete OwnPlatform\n  let handleDeleteOwnPlatform = async (e) => {\n    e.preventDefault();\n    try {\n      let res2 = await fetch(`http://localhost:9000/ownplatform/0`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      });\n      let resJson2 = await res2.json();\n      if (res2.status === 201) {\n        setMessage(\"Plot deleted successfully\");\n      } else {\n        setMessage(\"Some error occured\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n\n\n  //// Send only OwnPlatform\n  \n  let handleSendOnlyPlatform = async (e) => {\n    e.preventDefault();\n    try {\n      // Send Only\n\n      let resSend= await fetch(\"http://localhost:8080/ownplatform/sendonly\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          trackNumber: trackNumber,\n          trackMode: selectedTmr.value,\n          startTime: startTime,\n          endTime: endTime,\n          status: status,\n          lastSend:lastSend,\n\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n        \n      });\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n    //// Send Start OwnPlatform\n  \n    let handleStartOwnPlatform = async (e) => {\n      e.preventDefault();\n      try {\n        // Send Only\n       \n        let resStart= await fetch(\"http://localhost:8080/ownplatform/startstop\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            status: \"Start\",\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n          },\n          \n        });\n        \n        setStartInfo(1);\n    \n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n        //// Send Stop OwnPlatform\n        let handleStopOwnPlatform = async (e) => {\n          e.preventDefault();\n          try {\n            // Send Only\n            let resStop= await fetch(\"http://localhost:8080/ownplatform/startstop\", {\n              method: \"POST\",\n              body: JSON.stringify({\n                status: \"Stop\",\n              }),\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n              },\n              \n            });\n\n          } catch (err) {\n            console.log(err);\n          }\n        };\n  \n\n\n\n  //// Delete OwnPlatform\n  let handleDefaultOwnPlatform = async (e) => {\n    e.preventDefault();\n    try {\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      getTrackMode();\n      getConfigOwnplatform();\n      getDataOwnplatform();\n    },1000)    \n  }, [])\n\n\n\n\n\n  return (\n   \n      <>\n          <h2 className=\"title\">Own Platform</h2>     \n            <table className=\"table\" >\n              <tr>\n                <td>Track Mode</td>  \n                <td>: {ownplatformConfig.trackMode}</td>   \n                <td>Pitch</td>\n                <td>: {ownplatformData.pitch} deg</td>  \n                <td>Acceleration X</td>\n                <td>: {ownplatformData.accelerationX} m/s </td> \n                <td>Barometric Pressure</td>\n                <td>: {ownplatformData.barometricPressure} Pascal</td>\n              </tr>\n\n              <tr >\n                <td>Environment</td>\n                <td>: {ownplatformData.environment}</td> \n                <td>Roll</td>\n                <td>: {ownplatformData.roll} deg</td>\n                <td>Acceleration Y</td>\n                <td>: {ownplatformData.accelerationY} m/s</td>\n                <td>Air Temperature</td>\n                <td>: {ownplatformData.airTemperature} celcius</td>  \n              </tr>        \n\n              <tr>\n                <td>Start Time</td>\n                <td>: {ownplatformConfig.startTime}</td> \n                <td>Yaw</td>\n                <td>: {ownplatformData.yaw} deg </td>\n                <td>Acceleration Z</td>\n                <td>: {ownplatformData.accelerationZ} m/s </td>\n                <td>Humidity</td>\n                <td>: {ownplatformData.humidity} %</td>\n              </tr>\n\n              <tr>\n                <td>End Time</td>\n                <td>: {ownplatformConfig.endTime} </td>\n                <td>Latitude</td>\n                <td>: {ownplatformData.latitude} feet</td>\n                <td>Velocity X</td>\n                <td>: {ownplatformData.velocityX} m/s</td>\n                <td>Wind Speed</td>\n                <td>: {ownplatformData.windSpeed} m/s</td>\n              </tr>\n\n              <tr>\n                <td>Speed</td>\n                <td>: {ownplatformData.speed} knot</td> \n                <td>Longitude</td>\n                <td>: {ownplatformData.longitude} </td>\n                <td>Velocity Y</td>\n                <td>: {ownplatformData.velocityY} m/s</td>\n                <td>Wind Direction</td>\n                <td>: {ownplatformData.windDirection} deg</td>\n              </tr>\n    \n              <tr>\n                <td>Heading</td>\n                <td>: {ownplatformData.heading} deg</td>\n                <td>Altitude</td>\n                <td>: {ownplatformData.altitude}</td>\n                <td>Velocity Z</td>\n                <td>: {ownplatformData.velocityZ} m/s </td>\n                <td>Track Number</td>\n                <td>: {ownplatformConfig.trackNumber}</td>\n              </tr>           \n            </table>\n\n                <button type=\"submit\" className=\"btn\" onClick={handleUpdateOwnPlatform} disabled={((ownplatformConfig.trackNumber !== 0) || (ownplatformConfig.status === \"Start\")? true: false)}>EDIT</button>\n                <button type=\"delete\" className=\"btn\" onClick={handleDeleteOwnPlatform} disabled={((ownplatformConfig.trackNumber !== 0)|| (ownplatformConfig.status === \"Start\")? true: false)}>DELETE</button>\n                <button type=\"submit\" className=\"btn\" id=\"send\" onClick={handleSendOnlyPlatform} disabled={((ownplatformConfig.trackMode === \"Automatic\") || (ownplatformConfig.trackNumber !== 0)? true: false)}>SEND</button>\n                <button type=\"delete\" className=\"btn\" id=\"btnstart\" onClick={handleStartOwnPlatform} disabled={((ownplatformConfig.trackMode === \"Manual\") || (ownplatformConfig.status === \"Start\") || (ownplatformConfig.trackNumber !== 0)? true: false)}>START</button>\n                <button type=\"delete\" className=\"btn\" id=\"btnstop\" onClick={handleStopOwnPlatform} disabled={((ownplatformConfig.trackMode === \"Manual\")|| (ownplatformConfig.status !== \"Start\") || (ownplatformConfig.trackNumber !== 0)? true: false)}>STOP</button>\n                <hr></hr>\n                {/* <label className=\"info\"> Status : {ownplatformConfig.status}</label>\n                <label className=\"info\"> Last Send : {ownplatformConfig.lastSend}</label>\n                <label className=\"info\"> Status Data : {ownplatformConfig.trackNumber}</label>\n                <label className=\"info\"> Edit Form Statys : {editFormStatus}</label> */}\n          <hr/>\n\n          <div id=\"tabelseting\">\n          <h2 className=\"title\">Data Setting</h2>\n          <form className=\"formdatasetting\">\n            <table className=\"table\" id=\"cobatabel\">\n\n              <tr>\n                <td>Track Mode</td>\n                <td>\n                  <select \n                  name=\"track-mode-radio\" id=\"tmr\" onChange={(e) => setTrackMode(e.target.value)} disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                    <option value=\"land\">-- Pilih --</option>\n                    <option value=\"Manual\">Manual</option>\n                    <option value=\"Automatic\">Automatic</option>\n                  </select>\n                </td>\n                <td>Environment</td>\n                <td>             \n                  <select name=\"environment-radio\" id=\"er\"  onChange={(e) => setEnvironment(e.target.value)} disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                    <option value=\"land\">-- Pilih --</option>\n                    <option value=\"air\">Air</option>\n                    <option value=\"surface\">Surface</option>\n                    <option value=\"subsurface\">Subsurface</option>\n                    <option value=\"land\">land</option>\n                  </select>\n                </td>\n                <td><label >Start Time</label></td>\n                <td>\n                  <input \n                  type=\"datetime-local\" \n                  id=\"start-time-input\" \n                  name=\"input-start\" \n                  value={startTime} \n                  onChange={(e) => setStartTime(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>\n                <td><label >End Time</label></td>\n                <td>\n                  <input \n                  type=\"datetime-local\" \n                  id=\"end-time-input\" \n                  name=\"input-end\" \n                  value={endTime} \n                  onChange={(e) => setEndTime(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>     \n              </tr>\n\n\n              <tr>\n                <td><label>Latitude</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"latitude\"\n                  name=\"latitude\"\n                  placeholder=\"Latitude\"\n                  value={latitude}\n                  onChange={(e) => setLatitude(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>\n                <td><label >Longitude</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"longitude\"\n                  name=\"longitude\"\n                  placeholder=\"Longitude\"\n                  value={longitude}\n                  onChange={(e) => setLongitude(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                </input>\n                </td>\n                <td><label>Altitude</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"altitude\"\n                  name=\"altitude\"\n                  placeholder=\"Altitude\"\n                  value={altitude}\n                  onChange={(e) => setAltitude(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                </input>\n                </td>\n                <td></td>\n                <td></td>\n              </tr>\n\n              <tr>\n                <td><label>Speed</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"speed\"\n                  name=\"speed\"\n                  placeholder=\"Speed\"\n                  value={speed}\n                  onChange={(e) => setSpeed(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>\n                <td><label>Heading</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"heading\"\n                  name=\"heading\"\n                  placeholder=\"Heading\"\n                  value={heading}\n                  onChange={(e) => setHeading(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>\n                <td><label >Wind Speed</label></td>\n                <td>\n                  <input \n                  type=\"number\"\n                  id=\"wind-speed\" \n                  name=\"wind-speed\"\n                  placeholder=\"Wind Speed\"\n                  value={windSpeed}\n                  onChange={(e) => setWindSpeed(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Wind Direction</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"wind-direction\" \n                  name=\"wind-direction\"\n                  placeholder=\"Wind Direction\"\n                  value={windDirection}\n                  onChange={(e) => setWindDirection(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n              </tr>\n\n              <tr>\n                <td><label >Pitch</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"pitch\" \n                  name=\"pitch\"\n                  placeholder=\"Pitch\"\n                  value={pitch}\n                  onChange={(e) => setPitch(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Acceleration X</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"acceleration-x\"\n                  name=\"acceleration-x\"\n                  placeholder=\"Acceleration X\"\n                  value={accelerationX}\n                  onChange={(e) => setAccelerationX(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Velocity X</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"velocity-x\"\n                  name=\"velocity-x\"\n                  placeholder=\"Velocity X\"\n                  value={velocityX}\n                  onChange={(e) => setVelocityX(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Barometric Pressure</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"barometric-pressure\"\n                  name=\"barometric-pressure\"\n                  placeholder=\"Barometric Pressure\"\n                  value={barometricPressure}\n                  onChange={(e) => setBarometricPressure(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                </input>\n                </td>\n              </tr>\n\n\n              <tr>\n                <td><label >Roll</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"roll\"\n                  name=\"roll\"\n                  placeholder=\"Roll\"\n                  value={roll}\n                  onChange={(e) => setRoll(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Acceleration Y</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"acceleration-y\"\n                  name=\"acceleration-y\"\n                  placeholder=\"Acceleration Y\"\n                  value={accelerationY}\n                  onChange={(e) => setAccelerationY(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Velocity Y</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"velocity-y\"\n                  name=\"velocity-y\"\n                  placeholder=\"Velocity Y\"\n                  value={velocityY}\n                  onChange={(e) => setVelocityY(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Humidity</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"humidity\"\n                  name=\"humidity\" \n                  placeholder=\"Humidity\" \n                  value={humidity} \n                  onChange={(e) => setHumidity(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input>\n                </td>   \n              </tr>\n\n              <tr>\n                <td><label >Yaw</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"yaw\"\n                  name=\"yaw\"\n                  placeholder=\"Yaw\"\n                  value={yaw}\n                  onChange={(e) => setYaw(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Acceleration Z</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"acceleration-z\"\n                  name=\"acceleration-z\"\n                  placeholder=\"Acceleration Z\"\n                  value={accelerationZ}\n                  onChange={(e) => setAccelerationZ(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Velocity Z</label></td>\n                <td>\n                  <input \n                  type=\"number\" \n                  id=\"velocity-z\"\n                  name=\"velocity-z\"\n                  placeholder=\"Velocity Z\"\n                  value={velocityZ}\n                  onChange={(e) => setVeloityZ(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}> \n                  </input>\n                </td>\n                <td><label >Air Temperature</label></td>\n                <td>\n                  <input \n                  type=\"number\"\n                  id=\"air-temperature\" \n                  name=\"air-temperature\" \n                  placeholder=\"Air Temperature\" \n                  value={airTemperature} \n                  onChange={(e) => setAirTemperature(e.target.value)}\n                  disabled={((editFormStatus === \"False\") && (ownplatformConfig.status === \"-\")? true: false)}>\n                  </input> \n                </td>\n              </tr>        \n            </table>\n              <button type=\"submit\" className=\"btn\" onClick={handleDefaultOwnPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) ? true: false)}>GET DEFAULT</button>\n              <button type=\"submit\" className=\"btn\" onClick={handleSaveOnlyOwnPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) ? true: false)}>SAVE ONLY</button>\n              <button type=\"submit\" className=\"btn\" onClick={handleSaveAndSendPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) || (trackMode === \"Automatic\") ? true: false)}>SAVE & SEND</button>\n              {/* <button type=\"submit\" className=\"btn\" onClick={handleCancelOwnPlatform}>CANCEL</button> */}\n              {/* <button type=\"submit\" className=\"btn\" onClick={() => window.location.reload()} >TAMBAH</button> */}\n          </form>\n          </div>\n          </>\n  );\n}\n\nexport default Form; ","D:\\TrackSim\\FE\\src\\components\\Radar\\RadarHome.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],[],"D:\\TrackSim\\FE\\src\\components\\OwnShip\\OwnShipHome.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],[],"import  Axios  from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport './OwnShipHome.css';\r\n\r\nconst OwnShipHome = (props) => {\r\n  \r\n  //Own Platform\r\n  const [ownplatform, setOwnplatform] = useState([]);\r\n  const [info, setInfo] = useState(0);\r\n  const [btnStartInfo, setStartInfo] = useState(0);\r\n  const [btnStopInfo, setStopInfo] = useState(0);\r\n  const [statusData, setStatusData] = useState(\"Kosong\");\r\n\r\n  const [editFormStatus, setEditFormStatus] = useState(\"False\");\r\n\r\n  const [ownplatformData, setOwnData] = useState([]);\r\n  const [ownplatformConfig, setConfig] = useState([]);\r\n  const [id, setId] = useState(0);\r\n  const [trackNumber, setTrackNumber] = useState(0);\r\n  const [status, setStatus] = useState(\"-\");\r\n  const [lastSend, setLastSend] = useState(\"Not Send\");\r\n  const [trackMode, setTrackMode] = useState(\"\");\r\n  const [environment, setEnvironment] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  const [airTemperature, setAirTemperature] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"-\");\r\n  const [endTime, setEndTime] = useState(\"-\");\r\n  const [barometricPressure, setBarometricPressure] = useState(\"\");\r\n  const [windSpeed, setWindSpeed] = useState(\"\");\r\n  const [windDirection, setWindDirection] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(\"\");\r\n  const [longitude, setLongitude] = useState(\"\");\r\n  const [altitude, setAltitude] = useState(\"\");\r\n  const [pitch, setPitch] = useState(\"\");\r\n  const [accelerationX, setAccelerationX] = useState(\"\");\r\n  const [velocityX, setVelocityX] = useState(\"\");\r\n  const [roll, setRoll] = useState(\"\");\r\n  const [accelerationY, setAccelerationY] = useState(\"\");\r\n  const [velocityY, setVelocityY] = useState(\"\");\r\n  const [heading, setHeading] = useState(\"\");\r\n  const [yaw, setYaw] = useState(\"\");\r\n  const [accelerationZ, setAccelerationZ] = useState(\"\");\r\n  const [velocityZ, setVelocityZ] = useState(\"\");\r\n  var selectedTmr = document.getElementById(\"tmr\");\r\n  var selectedEr = document.getElementById(\"er\");\r\n\r\n  const [RadarData, setRadarData] = useState([]);\r\n  const [RadarDataClone, setRadarDataClone] = useState([]);\r\n  const [RadarUpdate, setRadarUpdate] = useState([]);\r\n  const [statusRadio, setStatusRadio] = useState(1);\r\n  const [time, setTime] = useState(\"Time\");\r\n\r\n  const [course, setCourse] = useState();\r\n  const [speed, setSpeed] = useState();\r\n  const [courseRangeMin, setCourseRangeMin] = useState();\r\n  const [courseRangeMax, setCourseRangeMax] = useState();\r\n  const [courseIncrement, setCourseIncrement] = useState();\r\n\r\n  const [bearing, setBearing] = useState(null);\r\n  const [mode1code, setMode1Code] = useState(null);\r\n  const [mode2code, setMode2Code] = useState(null);\r\n  const [trackInput, setTrackInput] = useState(\"\");\r\n\r\n  const [speedRangeMin, setSpeedRangeMin] = useState(null);\r\n  const [speedRangeMax, setSpeedRangeMax] = useState(null);\r\n  const [speedIncrement, setSpeedIncrement] = useState(null);\r\n\r\n  const [distance, setDistance] = useState(null);\r\n  const [mode3code, setMode3Code] = useState(null);\r\n  const [mode4code, setMode4Code] = useState(null);\r\n  const [count, setCount] = useState(null);\r\n\r\n  const [altitudeRangeMin, setAltitudeRangeMin] = useState(null);\r\n  const [altitudeRangeMax, setAltitudeRangeMax] = useState(null);\r\n  const [altitudeIncrement, setAltitudeIncrement] = useState(null);\r\n\r\n  const [mode5code, setMode5Code] = useState(null);\r\n  const checkIdSend=[];\r\n  const checkIdDelete=[];\r\n  const checkIdStop=[];\r\n  const [message, setMessage] = useState(\"\");\r\n  const [edit, setEdit] = useState(\"\");\r\n\r\n\r\n    //// REQUEST GET DATA OWNPLATFORM\r\n\r\n    const getDataOwnShip = async () => {\r\n            try{\r\n              let response = await Axios.get('http://localhost:8080/ownship')\r\n              if(response.data.length > 0){\r\n                setOwnplatform(response.data[0])\r\n              } \r\n              \r\n            } catch(e){\r\n              console.log(e.message)\r\n            }\r\n          }\r\n        \r\n    useEffect(() => {\r\n        getDataOwnShip();\r\n    }, [])\r\n\r\n\r\n    //// REQUEST GET CONFIG OWNPLATFORM\r\n\r\n    const getTrackMode = async () => {\r\n      try{\r\n      if(ownplatformConfig.trackMode == \"Automathic\"){\r\n        document.getElementById(\"send\").disabled = true;\r\n      } else if (ownplatformConfig.trackMode == \"Manual\"){\r\n        document.getElementById(\"btnstart\").disabled = true;\r\n        document.getElementById(\"btnstop\").disabled = true;\r\n      }\r\n    } catch(e){\r\n      console.log(e.message)\r\n    }\r\n    }\r\n\r\n\r\n  \r\n \r\n\r\n  \r\n\r\n\r\n\r\n    //// REQUEST GET CONFIG OWNPLATFORM\r\n\r\n    const getConfigOwnplatform = async () => {\r\n      try{\r\n        let response = await Axios.get('http://localhost:8080/ownplatform/config')\r\n        setConfig(response.data)\r\n        setStatusData(\"Ada\")\r\n      } catch(e){\r\n        console.log(e.message)\r\n      }\r\n      // document.getElementById(\"tabelseting\").style.display = \"none\";\r\n    }\r\n  \r\n    // useEffect(() => {\r\n    //   getConfigOwnplatform();\r\n    // }, [])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n        //// REQUEST GET DATA OWNPLATFORM\r\n\r\n        const getDataOwnplatform = async () => {\r\n          try{\r\n            let response = await Axios.get('http://localhost:8080/ownplatform/data')\r\n            setOwnData(response.data)\r\n          } catch(e){\r\n            console.log(e.message)\r\n          }\r\n        }\r\n      \r\n        // useEffect(() => {\r\n        //   getDataOwnplatform();\r\n        // }, [])\r\n\r\n\r\n\r\n\r\n//// Save data OwnPlatform --\r\n\r\n  let handleSaveOnlyOwnPlatform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      //Data\r\n      let resData= await fetch(\"http://localhost:8080/ownship\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            trackNumber: trackNumber,\r\n            trackMode:trackMode,\r\n            environment:environment,\r\n            startTime:startTime,\r\n            status:\"saved\",\r\n            endTime:endTime,\r\n            time:\"time\",\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n\r\n            course:course,\r\n            courseRangeMin:courseRangeMin,\r\n            courseRangeMax:courseRangeMax,\r\n            courseIncrement:courseIncrement,\r\n            heading:heading,\r\n            humidity:humidity,\r\n            windSpeed:windSpeed,\r\n            windDirection:windDirection,\r\n\r\n            speed:speed,\r\n            speedRangeMin:speedRangeMin,\r\n            speedRangeMax:speedRangeMax,\r\n            speedIncrement:speedIncrement,\r\n            pitch:pitch,\r\n            roll:roll,\r\n            yaw:yaw,\r\n            airTemperature:airTemperature,\r\n\r\n            altitude:altitude,\r\n            altitudeRangeMin:altitudeRangeMin,\r\n            altitudeRangeMax:altitudeRangeMax,\r\n            altitudeIncrement:altitudeIncrement,\r\n            accelerationX:accelerationX,\r\n            accelerationY:accelerationY,\r\n            accelerationZ:accelerationZ,\r\n            barometricPressure:barometricPressure,\r\n\r\n            velocityX:velocityX,\r\n            velocityY:velocityY,\r\n            velocityZ:velocityZ\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n\r\n\r\n\r\n      //Disable form edit\r\n      setEditFormStatus(\"False\");\r\n\r\n\r\n      if (resData.status === 201) {\r\n        setTrackMode(\"\");\r\n        setEnvironment(\"\");\r\n        setStartTime(\"-\");\r\n        setEndTime(\"-\");\r\n        setLastSend(\"\")\r\n        setLatitude(\"\");\r\n        setLongitude(\"\");\r\n        setCourse(\"\");\r\n        setCourseRangeMin(\"\");\r\n        setCourseRangeMax(\"\");\r\n        setCourseIncrement(\"\");\r\n        setSpeed(\"\");\r\n        setSpeedRangeMin(\"\");\r\n        setSpeedRangeMax(\"\");\r\n        setSpeedIncrement(\"\");\r\n        setAltitude(\"\");\r\n        setAltitudeRangeMin(\"\");\r\n        setAltitudeRangeMax(\"\");\r\n        setAltitudeIncrement(\"\");\r\n        setAirTemperature(\"\");\r\n        setHumidity(\"\");\r\n        setWindSpeed(\"\");\r\n        setWindDirection(\"\");\r\n        setHeading(\"\");\r\n        setPitch(\"\");\r\n        setYaw(\"\");\r\n        setRoll(\"\");\r\n        setAccelerationX(\"\");\r\n        setAccelerationY(\"\");\r\n        setAccelerationZ(\"\");\r\n        setBarometricPressure(\"\");\r\n        setVelocityX(\"\");\r\n        setVelocityY(\"\");\r\n        setVelocityZ(\"\");\r\n        setMessage(\"Track created successfully\");\r\n      } else {\r\n        setMessage(\"Some error occured\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  \r\n  //// Save and Send data OwnPlatform\r\n  \r\n    let handleSaveAndSendPlatform = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        //Data\r\n        let resData= await fetch(\"http://localhost:8080/ownplatform/savedata\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            trackNumber: trackNumber,\r\n            humidity: humidity,\r\n            airTemperature: airTemperature,\r\n            barometricPressure: barometricPressure,\r\n            environment: selectedEr.value,\r\n            windSpeed: windSpeed,\r\n            windDirection: windDirection,\r\n            latitude: latitude,\r\n            longitude: longitude,\r\n            altitude: altitude,\r\n            pitch: pitch,\r\n            accelerationX: accelerationX,\r\n            velocityX: velocityX,\r\n            accelerationY: accelerationY,\r\n            velocityY: velocityY,\r\n            heading: heading,\r\n            yaw: yaw,\r\n            accelerationZ: accelerationZ,\r\n            velocityZ: velocityZ,\r\n            speed: speed,\r\n            roll: roll\r\n            \r\n          }),\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n          },\r\n        });\r\n  \r\n        //Config\r\n        let resConfig= await fetch(\"http://localhost:8080/ownplatform/saveconfig\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            trackNumber: trackNumber,\r\n            trackMode: selectedTmr.value,\r\n            startTime: startTime,\r\n            endTime: endTime,\r\n            status: status,\r\n            lastSend: lastSend\r\n            \r\n          }),\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n          },\r\n        });\r\n\r\n        let resSaveAndSend= await fetch(\"http://localhost:8080/ownplatform/saveandsend\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            trackNumber: trackNumber,\r\n          }),\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n          },\r\n        });\r\n\r\n      //Disable form edit\r\n      setEditFormStatus(\"False\");\r\n  \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n  \r\n\r\n  //// REQUEST Update OwnPlatform\r\n\r\n  let handleUpdateOwnPlatform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n\r\n      setEditFormStatus(\"True\");\r\n      const $selectTrackMode = document.getElementById('tmr');\r\n      $selectTrackMode.value = ownplatform.trackMode;\r\n      const $selectEnvironment = document.getElementById('er');\r\n      $selectEnvironment.value = ownplatform.environment;\r\n      setEnvironment(ownplatform.environment)\r\n      setTrackMode(ownplatform.trackMode)\r\n      setStartTime(ownplatform.startTime)\r\n      setEndTime(ownplatform.endTime)\r\n      setCourse(ownplatform.course)\r\n      setSpeed(ownplatform.speed)\r\n      setAltitude(ownplatform.altitude)\r\n      setCourseRangeMin(ownplatform.courseRangeMin)\r\n      setCourseRangeMax(ownplatform.courseRangeMax)\r\n      setCourseIncrement(ownplatform.courseIncrement)\r\n      setSpeedRangeMin(ownplatform.speedRangeMin)\r\n      setSpeedRangeMax(ownplatform.speedRangeMax)\r\n      setSpeedIncrement(ownplatform.speedIncrement)\r\n      setAltitudeRangeMin(ownplatform.altitudeRangeMin)\r\n      setAltitudeRangeMax(ownplatform.altitudeRangeMax)\r\n      setAltitudeIncrement(ownplatform.altitudeIncrement)\r\n      setLatitude(ownplatform.latitude)\r\n      setLongitude(ownplatform.longitude)\r\n      setAirTemperature(ownplatform.airTemperature)\r\n      setHumidity(ownplatform.humidity)\r\n      setWindSpeed(ownplatform.windSpeed)\r\n      setWindDirection(ownplatform.windDirection)\r\n      setHeading(ownplatform.heading)\r\n      setPitch(ownplatform.pitch)\r\n      setYaw(ownplatform.yaw)\r\n      setRoll(ownplatform.roll)\r\n      setAccelerationX(ownplatform.accelerationX)\r\n      setAccelerationY(ownplatform.accelerationY)\r\n      setAccelerationZ(ownplatform.accelerationZ)\r\n      setBarometricPressure(ownplatform.barometricPressure)\r\n      setVelocityX(ownplatform.velocityX)\r\n      setVelocityY(ownplatform.velocityY)\r\n      setVelocityZ(ownplatform.velocityZ)\r\n      disableFormInput(ownplatform.trackMode)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n   \r\n  };\r\n\r\n  //// Delete OwnPlatform\r\n  let handleDeleteOwnPlatform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let res2 = await fetch(`http://localhost:9000/ownplatform/0`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n      let resJson2 = await res2.json();\r\n      if (res2.status === 201) {\r\n        setMessage(\"Plot deleted successfully\");\r\n      } else {\r\n        setMessage(\"Some error occured\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  //// Send only OwnPlatform TRACK --\r\n  \r\n  let handleSendOnlyPlatform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let resSend= await fetch(\"http://localhost:8080/ownship/sendtrack\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          trackNumber: trackNumber,\r\n          status: status\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n        \r\n      });\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n    //// Send Start OwnPlatform\r\n  \r\n    let handleStartOwnPlatform = async (e) => {\r\n      e.preventDefault();\r\n      try {\r\n        // Send Only\r\n       \r\n        let resStart= await fetch(\"http://localhost:8080/ownplatform/startstop\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            status: \"Start\",\r\n          }),\r\n          headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n          },\r\n          \r\n        });\r\n        \r\n        setStartInfo(1);\r\n    \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n        //// Send Stop OwnPlatform\r\n        let handleStopOwnPlatform = async (e) => {\r\n          e.preventDefault();\r\n          try {\r\n            // Send Only\r\n            let resStop= await fetch(\"http://localhost:8080/ownplatform/startstop\", {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                status: \"Stop\",\r\n              }),\r\n              headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n              },\r\n              \r\n            });\r\n\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n  \r\n\r\n\r\n\r\n  //// Delete OwnPlatform\r\n  let handleDefaultOwnPlatform = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      getConfigOwnplatform();\r\n      getDataOwnplatform();\r\n    },1000)    \r\n  }, [])\r\n\r\n    //Handler Track Mode Form --\r\n    const handleTrackMode=(event)=>{\r\n        setTrackMode(event.target.value)\r\n        var Tmode = event.target.value\r\n        var status = \"false\"\r\n        disableFormInput(Tmode, status)\r\n    }\r\n\r\n    //Fungsi disable input form --\r\n    const disableAllInput = () => {\r\n        document.getElementById(\"er\").disabled = true;\r\n        document.getElementById(\"start-time-input\").disabled = true;\r\n        document.getElementById(\"end-time-input\").disabled = true;\r\n        document.getElementById(\"course\").disabled = true;\r\n        document.getElementById(\"speed\").disabled = true;\r\n        document.getElementById(\"altitude\").disabled = true;\r\n        document.getElementById(\"course-range-min\").disabled = true;\r\n        document.getElementById(\"course-range-max\").disabled = true;\r\n        document.getElementById(\"speed-range-max\").disabled = true;\r\n        document.getElementById(\"speed-range-min\").disabled = true;\r\n        document.getElementById(\"altitude-range-max\").disabled = true;\r\n        document.getElementById(\"altitude-range-min\").disabled = true;\r\n        document.getElementById(\"course-increment\").disabled = true;\r\n        document.getElementById(\"speed-increment\").disabled = true;\r\n        document.getElementById(\"altitude-increment\").disabled = true;\r\n        document.getElementById(\"latitude\").disabled = true;\r\n        document.getElementById(\"longitude\").disabled = true;\r\n        document.getElementById(\"airTemperature\").disabled = true;\r\n        document.getElementById(\"humidity\").disabled = true;\r\n        document.getElementById(\"windSpeed\").disabled = true;\r\n        document.getElementById(\"windDirection\").disabled = true;\r\n        document.getElementById(\"heading\").disabled = true;\r\n        document.getElementById(\"pitch\").disabled = true;\r\n        document.getElementById(\"roll\").disabled = true;\r\n        document.getElementById(\"yaw\").disabled = true;\r\n        document.getElementById(\"accelerationX\").disabled = true;\r\n        document.getElementById(\"accelerationY\").disabled = true;\r\n        document.getElementById(\"accelerationZ\").disabled = true;\r\n        document.getElementById(\"barometricPressure\").disabled = true;\r\n        document.getElementById(\"velocityX\").disabled = true;\r\n        document.getElementById(\"velocityY\").disabled = true;\r\n        document.getElementById(\"velocityZ\").disabled = true;\r\n    }\r\n\r\n    const disableFormInput=(Tmode, status)=>{ \r\n        if (Tmode === \"manual\"){\r\n            disableAllInput();\r\n            document.getElementById(\"er\").disabled = false;\r\n            document.getElementById(\"course\").disabled = false;\r\n            document.getElementById(\"speed\").disabled = false;\r\n            document.getElementById(\"altitude\").disabled = false;\r\n            document.getElementById(\"latitude\").disabled = false;\r\n            document.getElementById(\"longitude\").disabled = false;\r\n            document.getElementById(\"airTemperature\").disabled = false;\r\n            document.getElementById(\"humidity\").disabled = false;\r\n            document.getElementById(\"windSpeed\").disabled = false;\r\n            document.getElementById(\"windDirection\").disabled = false;\r\n            document.getElementById(\"heading\").disabled = false;\r\n            document.getElementById(\"pitch\").disabled = false;\r\n            document.getElementById(\"roll\").disabled = false;\r\n            document.getElementById(\"yaw\").disabled = false;\r\n            document.getElementById(\"accelerationX\").disabled = false;\r\n            document.getElementById(\"accelerationY\").disabled = false;\r\n            document.getElementById(\"accelerationZ\").disabled = false;\r\n            document.getElementById(\"barometricPressure\").disabled = false;\r\n            document.getElementById(\"velocityX\").disabled = false;\r\n            document.getElementById(\"velocityY\").disabled = false;\r\n            document.getElementById(\"velocityZ\").disabled = false;    \r\n            setStartTime(\"-\")\r\n            setEndTime(\"-\")   \r\n            setCourseRangeMin(\"\")\r\n            setCourseRangeMax(\"\") \r\n            setCourseIncrement(\"\")\r\n            setSpeedRangeMin(\"\")\r\n            setSpeedRangeMax(\"\") \r\n            setSpeedIncrement(\"\") \r\n            setAltitudeRangeMin(\"\")\r\n            setAltitudeRangeMax(\"\") \r\n            setAltitudeIncrement(\"\")   \r\n        } else if (Tmode === \"automatic\") {\r\n            disableAllInput();\r\n            document.getElementById(\"er\").disabled = false;\r\n            document.getElementById(\"start-time-input\").disabled = false;\r\n            document.getElementById(\"end-time-input\").disabled = false;\r\n            document.getElementById(\"course\").disabled = false;\r\n            document.getElementById(\"speed\").disabled = false;\r\n            document.getElementById(\"altitude\").disabled = false;\r\n            document.getElementById(\"course-range-min\").disabled = false;\r\n            document.getElementById(\"course-range-max\").disabled = false;\r\n            document.getElementById(\"speed-range-max\").disabled = false;\r\n            document.getElementById(\"speed-range-min\").disabled = false;\r\n            document.getElementById(\"altitude-range-max\").disabled = false;\r\n            document.getElementById(\"altitude-range-min\").disabled = false;\r\n            document.getElementById(\"course-increment\").disabled = false;\r\n            document.getElementById(\"speed-increment\").disabled = false;\r\n            document.getElementById(\"altitude-increment\").disabled = false;\r\n            document.getElementById(\"latitude\").disabled = false;\r\n            document.getElementById(\"longitude\").disabled = false;\r\n            document.getElementById(\"airTemperature\").disabled = false;\r\n            document.getElementById(\"humidity\").disabled = false;\r\n            document.getElementById(\"windSpeed\").disabled = false;\r\n            document.getElementById(\"windDirection\").disabled = false;\r\n            document.getElementById(\"heading\").disabled = false;\r\n            document.getElementById(\"pitch\").disabled = false;\r\n            document.getElementById(\"roll\").disabled = false;\r\n            document.getElementById(\"yaw\").disabled = false;\r\n            document.getElementById(\"accelerationX\").disabled = false;\r\n            document.getElementById(\"accelerationY\").disabled = false;\r\n            document.getElementById(\"accelerationZ\").disabled = false;\r\n            document.getElementById(\"barometricPressure\").disabled = false;\r\n            document.getElementById(\"velocityX\").disabled = false;\r\n            document.getElementById(\"velocityY\").disabled = false;\r\n            document.getElementById(\"velocityZ\").disabled = false;  \r\n        } else {\r\n           \r\n        }\r\n    }\r\n\r\n//Handler Cancel -- \r\nconst handlerCancel=(event)=>{\r\n  const $selectTrackMode = document.getElementById('tmr');\r\n  $selectTrackMode.value = \"-\";\r\n  setTrackMode(\"\")\r\n  const $selectEnvironment = document.getElementById('er');\r\n  $selectEnvironment.value = \"-\";\r\n  setEnvironment(\"\")\r\n  setEditFormStatus(\"False\")\r\n  setTrackMode(\"\")\r\n  setStartTime(\"-\")\r\n  setEndTime(\"-\")\r\n  setCourse(\"\")\r\n  setSpeed(\"\")\r\n  setAltitude(\"\")\r\n  setCourseRangeMin(\"\")\r\n  setCourseRangeMax(\"\")\r\n  setCourseIncrement(\"\")\r\n  setSpeedRangeMin(\"\")\r\n  setSpeedRangeMax(\"\")\r\n  setSpeedIncrement(\"\")\r\n  setAltitudeRangeMin(\"\")\r\n  setAltitudeRangeMax(\"\")\r\n  setAltitudeIncrement(\"\")\r\n  setLongitude(\"\")\r\n  setLatitude(\"\")\r\n  setAirTemperature(\"\")\r\n  setHumidity(\"\")\r\n  setWindSpeed(\"\")\r\n  setWindDirection(\"\")\r\n  setHeading(\"\")\r\n  setPitch(\"\")\r\n  setRoll(\"\")\r\n  setYaw(\"\")\r\n  setAccelerationX(\"\")\r\n  setAccelerationY(\"\")\r\n  setAccelerationZ(\"\")\r\n  setVelocityX(\"\")\r\n  setVelocityY(\"\")\r\n  setVelocityZ(\"\")\r\n  setBarometricPressure(\"\")\r\n  disableAllInput();\r\n\r\n}\r\n\r\n\r\n  return (\r\n   \r\n      <>\r\n        <div className=\"tabel-info\">\r\n          <label className=\"label\">DATA SETTING</label>   \r\n            <table className=\"table\" >\r\n                <tr>\r\n                    <td>Track Mode</td>  \r\n                    <td>: {ownplatform.trackMode}</td>  \r\n                    <td>Course</td>  \r\n                    <td>: {ownplatform.course} deg</td> \r\n                    <td>Speed</td>  \r\n                    <td>: {ownplatform.speed} knot</td>   \r\n                    <td>Altitude</td>  \r\n                    <td>: {ownplatform.altitude} feet</td>\r\n                    <td>Heading</td>\r\n                    <td>: {ownplatform.heading} deg</td> \r\n                </tr>\r\n\r\n                <tr >\r\n                    <td>Environment</td>\r\n                    <td>: {ownplatform.environment}</td>\r\n                    <td>Course Range Min</td>  \r\n                    <td>: {ownplatform.courseRangeMin} deg</td> \r\n                    <td>Speed Range Min</td>  \r\n                    <td>: {ownplatform.speedRangeMin} knot</td> \r\n                    <td>Altitude Range Min</td>  \r\n                    <td>: {ownplatform.altitudeRangeMin} feet</td> \r\n                    <td>Humidity</td>\r\n                    <td>: {ownplatform.humidity} %</td> \r\n                </tr>        \r\n\r\n                <tr>\r\n                    <td>Start Time</td>\r\n                    <td>: {ownplatform.startTime}</td>\r\n                    <td>Course Range Max</td>  \r\n                    <td>: {ownplatform.courseRangeMax} deg</td>  \r\n                    <td>Speed Range Max</td>  \r\n                    <td>: {ownplatform.speedRangeMax} knot</td> \r\n                    <td>Altitude Range Max</td>  \r\n                    <td>: {ownplatform.altitudeRangeMax} feet</td> \r\n                    <td>Wind Speed</td>\r\n                    <td>: {ownplatform.windSpeed} m/s</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>End Time</td>\r\n                    <td>: {ownplatform.endTime} </td>\r\n                    <td>Course Increment</td>\r\n                    <td>: {ownplatform.courseIncrement} </td>\r\n                    <td>Speed Increment</td>\r\n                    <td>: {ownplatform.speedIncrement} </td>\r\n                    <td>Altitude Increment</td>\r\n                    <td>: {ownplatform.altitudeIncrement} </td>\r\n                    <td>Wind Direction</td>\r\n                    <td>: {ownplatform.windDirection} deg</td>      \r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>Last Update</td>\r\n                    <td>: {ownplatform.lastSend} </td>\r\n                    <td>Pitch</td>\r\n                    <td>: {ownplatform.pitch} deg</td>\r\n                    <td>Acceleration X</td>\r\n                    <td>: {ownplatform.accelerationX} m/s</td>\r\n                    <td>Velocity X</td>\r\n                    <td>: {ownplatform.velocityX} m/s</td>  \r\n                    <td>Air Temperature</td>\r\n                    <td>: {ownplatform.airTemperature} celcius</td>   \r\n                </tr>\r\n    \r\n                <tr>\r\n                    <td>Latitude</td>\r\n                    <td>: {ownplatform.latitude}</td>\r\n                    <td>Roll</td>\r\n                    <td>: {ownplatform.roll} deg </td>\r\n                    <td>Acceleration Y</td>\r\n                    <td>: {ownplatform.accelerationY} m/s</td>\r\n                    <td>Velocity Y</td>\r\n                    <td>: {ownplatform.velocityY} m/s</td>  \r\n                    <td>Barometric Pressure</td>\r\n                    <td>: {ownplatform.barometricPressure} pascal </td>  \r\n                </tr>  \r\n\r\n                <tr>\r\n                    <td>Longitude</td>\r\n                    <td>: {ownplatform.longitude}</td>\r\n                    <td>Yaw</td>\r\n                    <td>: {ownplatform.yaw} deg</td>\r\n                    <td>Acceleration Z</td>\r\n                    <td>: {ownplatform.accelerationZ} m/s</td>\r\n                    <td>Velocity Z</td>\r\n                    <td>: {ownplatform.velocityZ} m/s</td>  \r\n                    <td>Track Number</td>\r\n                    <td>: {ownplatform.trackNumber}</td>\r\n                </tr>          \r\n            </table>\r\n\r\n                <button type=\"submit\" className=\"btn\" onClick={handleUpdateOwnPlatform} disabled={((ownplatform.id !== 1) || (ownplatform.status === \"Start\")? true: false)}>EDIT</button>\r\n                {/* <button type=\"delete\" className=\"btn\" onClick={handleDeleteOwnPlatform} disabled={((ownplatform.id !== 1)|| (ownplatform.status === \"Start\")? true: false)}>DELETE</button> */}\r\n                <button type=\"submit\" className=\"btn\" id=\"send\" onClick={handleSendOnlyPlatform} disabled={((ownplatform.trackMode === \"automatic\") || (ownplatform.id !== 1)? true: false)}>SEND</button>\r\n                <button type=\"delete\" className=\"btn\" id=\"btnstart\" onClick={handleStartOwnPlatform} disabled={((ownplatform.trackMode === \"manual\") || (ownplatform.status === \"Start\") || (ownplatform.id !== 1)? true: false)}>START</button>\r\n                <button type=\"delete\" className=\"btn\" id=\"btnstop\" onClick={handleStopOwnPlatform} disabled={((ownplatform.trackMode === \"manual\")|| (ownplatform.status !== \"Start\") || (ownplatform.id !== 1)? true: false)}>STOP</button>\r\n                <hr></hr>\r\n                <label className=\"info\"> Status : {ownplatform.status}</label>\r\n                <label className=\"info\"> Last Send : {ownplatform.lastSend}</label>\r\n                <label className=\"info\"> Status Data : {ownplatform.trackNumber}</label>\r\n                <label className=\"info\"> Edit Form Status : {editFormStatus}</label>\r\n            <hr/>\r\n        </div>\r\n\r\n        <h5>id:{id}, radio:{statusRadio}, status:{edit}, tmode:{trackMode}</h5>\r\n        <div className=\"container-list\">\r\n            <label className=\"label\">DATA SETTING</label>\r\n            <div className=\"track-list-1\">\r\n                <div className=\"data-setting\">\r\n                    <table className=\"table-input\">\r\n                            <tr>\r\n                                <td>Track Mode</td>\r\n                                <td>             \r\n                                    <select  name=\"track-mode-radio\" class=\"form-input\" id=\"tmr\"  onChange={handleTrackMode}> \r\n                                        <option value=\"-\">-- Pilih --</option>\r\n                                        <option value=\"manual\">Manual</option>\r\n                                        <option value=\"automatic\">Automatic</option>\r\n                                    </select>\r\n                                </td>\r\n                                <td>Environment</td>\r\n                                <td>\r\n                                    <select name=\"environment-radio\" class=\"form-input\" id=\"er\" onChange={(e) => setEnvironment(e.target.value)} disabled>\r\n                                        <option value=\"-\">-- Pilih --</option>\r\n                                        <option value=\"1\">Air</option>\r\n                                        <option value=\"2\">Surface</option>\r\n                                        <option value=\"3\">Subsurface</option>\r\n                                        <option value=\"4\">land</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Start Time</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"datetime-local\" \r\n                                    id=\"start-time-input\" \r\n                                    name=\"input-start\"\r\n                                    class=\"form-input\"\r\n                                    value={startTime}\r\n                                    onChange={(e) => setStartTime(e.target.value)}\r\n                                    disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>End Time</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"datetime-local\" \r\n                                    id=\"end-time-input\" \r\n                                    name=\"input-end\"\r\n                                    class=\"form-input\"\r\n                                    value={endTime}\r\n                                    onChange={(e) => setEndTime(e.target.value)}\r\n                                    disabled>\r\n                                    </input>\r\n                                </td>  \r\n                                \r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Course</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"course\"\r\n                                    name=\"course\"\r\n                                    placeholder=\"Course\"\r\n                                    class=\"form-input\"\r\n                                    value={course}\r\n                                    onChange={(e) => setCourse(e.target.value)}\r\n                                    disabled>\r\n                                    </input> deg\r\n                                </td>\r\n                                <td>Speed</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"speed\"\r\n                                    name=\"speed\"\r\n                                    placeholder=\"Speed\"\r\n                                    class=\"form-input\"\r\n                                    value={speed}\r\n                                    onChange={(e) => setSpeed(e.target.value)}\r\n                                    disabled>\r\n                                    </input> knot\r\n                                </td>\r\n                                <td>Altitude</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"altitude\"\r\n                                    name=\"altitude\"\r\n                                    placeholder=\"Altitude\"\r\n                                    class=\"form-input\"\r\n                                    value={altitude}\r\n                                    onChange={(e) => setAltitude(e.target.value)}\r\n                                    disabled>\r\n                                    </input> feet\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Course Variation</td>\r\n                                <td></td>\r\n                                <td>Speed Variation</td>\r\n                                <td></td>\r\n                                <td>Altitude  Variation</td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                \r\n                            <tr>\r\n                                <td>Course Range</td>\r\n                                <td >\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"course-range-min\" \r\n                                    name=\"course-range-min\" \r\n                                    placeholder=\"Min\"\r\n                                    class=\"form-input-increment\"\r\n                                    value={courseRangeMin}\r\n                                    onChange={(e) => setCourseRangeMin(e.target.value)} \r\n                                    disabled>\r\n                                    </input>\r\n                                    &nbsp;\r\n                                    To\r\n                                    &nbsp;\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"course-range-max\" \r\n                                    name=\"course-range-max\" \r\n                                    placeholder=\"Max\"\r\n                                    class=\"form-input-increment\"\r\n                                    value={courseRangeMax}\r\n                                    onChange={(e) => setCourseRangeMax(e.target.value)}\r\n                                    disabled>\r\n                                    </input> deg\r\n                                </td> \r\n                                <td>Speed Range</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"speed-range-min\" \r\n                                    name=\"speed-range-min\" \r\n                                    placeholder=\"Min\"\r\n                                    class=\"form-input-increment\"\r\n                                    value={speedRangeMin}\r\n                                    onChange={(e) => setSpeedRangeMin(e.target.value)} \r\n                                    disabled>\r\n                                    </input>\r\n                                    &nbsp;\r\n                                    To\r\n                                    &nbsp;\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"speed-range-max\" \r\n                                    name=\"speed-range-max\" \r\n                                    placeholder=\"Max\"\r\n                                    class=\"form-input-increment\"\r\n                                    value={speedRangeMax}\r\n                                    onChange={(e) => setSpeedRangeMax(e.target.value)}\r\n                                    disabled>\r\n                                    </input> knot\r\n                                </td>  \r\n                                <td>Altitude Range</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"altitude-range-min\" \r\n                                    name=\"altitude-range-min\" \r\n                                    placeholder=\"Min\"\r\n                                    class=\"form-input-increment\"\r\n                                    value={altitudeRangeMin}\r\n                                    onChange={(e) => setAltitudeRangeMin(e.target.value)} \r\n                                    disabled>\r\n                                    </input>\r\n                                    &nbsp;\r\n                                    To\r\n                                    &nbsp;\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    className=\"input-range\"\r\n                                    id=\"altitude-range-max\" \r\n                                    name=\"altitude-range-max\"\r\n                                    placeholder=\"Max\" \r\n                                    class=\"form-input-increment\"\r\n                                    value={altitudeRangeMax}\r\n                                    onChange={(e) => setAltitudeRangeMax(e.target.value)}\r\n                                    disabled >\r\n                                    </input> feet\r\n                                </td>  \r\n                                <td></td>\r\n                            </tr>   \r\n\r\n                            <tr>\r\n                                <td>Course Increment</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"course-increment\"\r\n                                    name=\"course-increment\"\r\n                                    placeholder=\"Course Increment\"\r\n                                    class=\"form-input\"\r\n                                    value={courseIncrement}\r\n                                    onChange={(e) => setCourseIncrement(e.target.value)}\r\n                                    disabled >\r\n                                    </input> deg\r\n                                </td>\r\n                                <td>Speed Increment</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"speed-increment\"\r\n                                    name=\"speed-increment\"\r\n                                    placeholder=\"Speed Increment\"\r\n                                    class=\"form-input\"\r\n                                    value={speedIncrement}\r\n                                    onChange={(e) => setSpeedIncrement(e.target.value)} \r\n                                    disabled>\r\n                                    </input> knot\r\n                                </td>\r\n                                <td>Altitude Increment</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"altitude-increment\"\r\n                                    name=\"altitude-increment\"\r\n                                    placeholder=\"Altitude Increment\"\r\n                                    class=\"form-input\"\r\n                                    value={altitudeIncrement}\r\n                                    onChange={(e) => setAltitudeIncrement(e.target.value)} \r\n                                    disabled>\r\n                                    </input> feet\r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            <tr className=\"radio-box-top\">\r\n                                <td>Latitude</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"latitude\"\r\n                                    name=\"latitude\"\r\n                                    placeholder=\"Latitude\"\r\n                                    class=\"form-input\"\r\n                                    value={latitude}\r\n                                    onChange={(e) => setLatitude(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Longitude</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"longitude\"\r\n                                    name=\"longitude\"\r\n                                    placeholder=\"Longitude\"\r\n                                    class=\"form-input\"\r\n                                    value={longitude}\r\n                                    onChange={(e) => setLongitude(e.target.value)}  disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td></td>\r\n                                <td>    \r\n                                </td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n      \r\n\r\n               \r\n\r\n                            <tr>\r\n                                <td>Air Temperature</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"airTemperature\"\r\n                                    name=\"airTemperature\"\r\n                                    placeholder=\"Air Temperature\"\r\n                                    class=\"form-input\"\r\n                                    value={airTemperature}\r\n                                    onChange={(e) => setAirTemperature(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Heading</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"heading\"\r\n                                    name=\"heading\"\r\n                                    placeholder=\"Heading\"\r\n                                    class=\"form-input\"\r\n                                    value={heading}\r\n                                    onChange={(e) => setHeading(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td>Acceleration X</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"accelerationX\"\r\n                                    name=\"accelerationX\"\r\n                                    placeholder=\"Acceleration X\"\r\n                                    class=\"form-input\"\r\n                                    value={accelerationX}\r\n                                    onChange={(e) => setAccelerationX(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td>Velocity X</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"velocityX\"\r\n                                    name=\"velocityX\"\r\n                                    placeholder=\"Velocity X\"\r\n                                    class=\"form-input\"\r\n                                    value={velocityX}\r\n                                    onChange={(e) => setVelocityX(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td></td>                      \r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Humidity</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"humidity\"\r\n                                    name=\"humidity\"\r\n                                    placeholder=\"Humidity\"\r\n                                    class=\"form-input\"\r\n                                    value={humidity}\r\n                                    onChange={(e) => setHumidity(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Pitch</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"pitch\"\r\n                                    name=\"pitch\"\r\n                                    placeholder=\"Pitch\"\r\n                                    class=\"form-input\"\r\n                                    value={pitch}\r\n                                    onChange={(e) => setPitch(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td>Acceleration Y</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"accelerationY\"\r\n                                    name=\"accelerationY\"\r\n                                    placeholder=\"Acceleration Y\"\r\n                                    class=\"form-input\"\r\n                                    value={accelerationY}\r\n                                    onChange={(e) => setAccelerationY(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td>Velocity Y</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"velocityY\"\r\n                                    name=\"velocityY\"\r\n                                    placeholder=\"Velocity Y\"\r\n                                    class=\"form-input\"\r\n                                    value={velocityY}\r\n                                    onChange={(e) => setVelocityY(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td colSpan={3}></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Wind Speed</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"windSpeed\"\r\n                                    name=\"windSpeed\"\r\n                                    placeholder=\"Wind Speed\"\r\n                                    class=\"form-input\"\r\n                                    value={windSpeed}\r\n                                    onChange={(e) => setWindSpeed(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Roll</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"roll\"\r\n                                    name=\"roll\"\r\n                                    placeholder=\"Roll\"\r\n                                    class=\"form-input\"\r\n                                    value={roll}\r\n                                    onChange={(e) => setRoll(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Acceleration Z</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"accelerationZ\"\r\n                                    name=\"accelerationZ\"\r\n                                    placeholder=\"Acceleration Z\"\r\n                                    class=\"form-input\"\r\n                                    value={accelerationZ}\r\n                                    onChange={(e) => setAccelerationZ(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td>Velocity Z</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"velocityZ\"\r\n                                    name=\"velocityZ\"\r\n                                    placeholder=\"Velocity Z\"\r\n                                    class=\"form-input\"\r\n                                    value={velocityZ}\r\n                                    onChange={(e) => setVelocityZ(e.target.value)} disabled> \r\n                                    </input>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Wind Direction</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"windDirection\"\r\n                                    name=\"windDirection\"\r\n                                    placeholder=\"Wind Direction\"\r\n                                    class=\"form-input\"\r\n                                    value={windDirection}\r\n                                    onChange={(e) => setWindDirection(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Yaw</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"yaw\"\r\n                                    name=\"yaw\"\r\n                                    placeholder=\"Yaw\"\r\n                                    class=\"form-input\"\r\n                                    value={yaw}\r\n                                    onChange={(e) => setYaw(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td>Barometric Pressure</td>\r\n                                <td>\r\n                                    <input \r\n                                    type=\"number\" \r\n                                    id=\"barometricPressure\"\r\n                                    name=\"barometricPressure\"\r\n                                    placeholder=\"Barometric Pressure\"\r\n                                    class=\"form-input\"\r\n                                    value={barometricPressure}\r\n                                    onChange={(e) => setBarometricPressure(e.target.value)} disabled>\r\n                                    </input>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n            \r\n                        </table>\r\n                </div>\r\n            </div>\r\n                         \r\n\r\n                \r\n            \r\n        </div>\r\n            \r\n                <button type=\"submit\" className=\"btn\" onClick={handleDefaultOwnPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) ? true: false)}>GET DEFAULT</button>\r\n                <button type=\"submit\" className=\"btn\" onClick={handleSaveOnlyOwnPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) ? true: false)}>SAVE ONLY</button>\r\n                <button type=\"submit\" className=\"btn\" onClick={handleSaveAndSendPlatform} disabled={((editFormStatus === \"False\") && (ownplatformConfig.trackNumber === 0) || (trackMode === \"Automatic\") ? true: false)}>SAVE & SEND</button>\r\n                <button type=\"submit\" className=\"btn\" onClick={handlerCancel}>CANCEL</button>\r\n                {/* <button type=\"submit\" className=\"btn\" onClick={() => window.location.reload()} >TAMBAH</button> */}\r\n         \r\n    \r\n          </>\r\n  );\r\n}\r\n\r\nexport default OwnShipHome; ","D:\\TrackSim\\FE\\src\\components\\AIS\\AisForm.js",["190","191","192","193","194","195","196","197","198","199","200","201"],[],"import  Axios  from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport './AisHome.css';\r\nimport axios from \"axios\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Alert } from \"bootstrap\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst AISHome = (props) => {\r\n\r\n    const [AISData, setaISData] = useState([]);\r\n    const [statusRadio, setStatusRadio] = useState(1);\r\n    const [id, setId] = useState(\"\");\r\n    const [status, setStatus] = useState(\"Saved\");\r\n    const [lastSend, setLastSend] = useState(\"\");\r\n    const [time, setTime] = useState(\"Time\");\r\n    const [trackMode, setTrackMode] = useState(\"\");\r\n    const [course, setCourse] = useState(\"\");\r\n    const [speed, setSpeed] = useState(\"\");\r\n    const [courseRangeMin, setCourseRangeMin] = useState();\r\n    const [courseRangeMax, setCourseRangeMax] = useState();\r\n    const [courseIncrement, setCourseIncrement] = useState();\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [bearing, setBearing] = useState(\"\");\r\n    const [trackInput, setTrackInput] = useState(\"\");\r\n    const [startTime, setStartTime] = useState(\"-\");\r\n    const [speedRangeMin, setSpeedRangeMin] = useState(\"\");\r\n    const [speedRangeMax, setSpeedRangeMax] = useState(\"\");\r\n    const [speedIncrement, setSpeedIncrement] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [distance, setDistance] = useState(\"\");\r\n    const [count, setCount] = useState(\"\");\r\n    const [endTime, setEndTime] = useState(\"-\");\r\n\r\n    const [mmsiNumber, setMmsiNumber] = useState(\"\");\r\n    const [aisName, setAisName] = useState(\"\");\r\n    const [aisType, setAisType] = useState(\"\");\r\n    const [shipCallSign, setShipCallSign] = useState(\"\");\r\n    const [imoNumber, setImoNumber] = useState(\"\");\r\n    const [eta, setEta] = useState(\"\");\r\n    const [navStatus, setNavStatus] = useState(\"\");\r\n    const [rateOfTurn, setRateOfTurn] = useState(\"\");\r\n    const [dimensionsA, setDimensionsA] = useState(\"\");\r\n    const [dimensionsB, setDimensionsB] = useState(\"\");\r\n    const [dimensionsC, setDimensionsC] = useState(\"\");\r\n    const [dimensionsD, setDimensionsD] = useState(\"\");\r\n    const [vendorId, setVendorId] = useState(\"\");\r\n    const [destination, setDestination] = useState(\"\");\r\n\r\n    const checkIdSend=[];\r\n    const checkIdDelete=[];\r\n    const checkIdStop=[];\r\n    const [message, setMessage] = useState(\"\");\r\n    const [edit, setEdit] = useState(\"\");\r\n    const [checkTrackMode, setCheckTrackMode] = useState(\"\");\r\n\r\n    // POP UP DELETE\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const handleCloseDelete= () => setShowDelete(false);\r\n    const handleShowDelete = () => setShowDelete(true);\r\n\r\n    // POP UP SAVE\r\n    const [showSave, setShowSave] = useState(false);\r\n    const handleCloseSave= () => setShowSave(false);\r\n    const handleShowSave = () => setShowSave(true);\r\n\r\n    // POP UP SAVE AND SEND\r\n    const [showSaveAndSend, setShowSaveAndSend] = useState(false);\r\n    const handleCloseSaveAndSend= () => setShowSaveAndSend(false);\r\n    const handleShowSaveAndSend = () => setShowSaveAndSend(true);\r\n\r\n    const enumNavStatus = {\r\n        0: \"Nav Status 1\",\r\n        1: \"Nav Status 2\",\r\n        2: \"Nav Status 3\",\r\n        3: \"Nav Status 4\"\r\n    }\r\n\r\n    const enumAisType = {\r\n        1: \"AIS Type 1\",\r\n        2: \"AIS Type 2\",\r\n        3: \"AIS Type 3\"\r\n    }\r\n\r\n\r\n    // HANDLER RADIO 1 LATITUDE & LONGITUDE AIS TRACK **\r\n    let handlerRadio1 = async (e) => {\r\n        setStatusRadio(1)\r\n        document.getElementById(\"bearing\").disabled = true;\r\n        document.getElementById(\"bearing\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"distance\").disabled = true;\r\n        document.getElementById(\"distance\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        setBearing(\"\")\r\n        setDistance(\"\")\r\n    };\r\n    \r\n    // HANDLER RADIO 2 DISTANCE & BEARING AIS TRACK **\r\n    let handlerRadio2 = async () => {\r\n        setStatusRadio(2)\r\n        document.getElementById(\"bearing\").disabled = false;\r\n        document.getElementById(\"bearing\").style.backgroundColor = 'white';\r\n        document.getElementById(\"distance\").disabled = false;\r\n        document.getElementById(\"distance\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").disabled = true;\r\n        document.getElementById(\"latitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"longitude\").disabled = true;\r\n        document.getElementById(\"longitude\").style.backgroundColor = '#696978';\r\n        setLatitude(\"\")\r\n        setLongitude(\"\")\r\n    };\r\n\r\n    // REQUEST GET DATA AIS TRACK ==\r\n    const getaISData = async () => {\r\n        try{\r\n        const response = await Axios.get('http://localhost:8080/ais');\r\n        setaISData(response.data)\r\n        } catch(e){\r\n        console.log(e.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            getaISData();\r\n    }, [])\r\n    \r\n    // REQUEST POST SAVE AIS TRACK **\r\n    let dataSave = async (e) => {\r\n        let resSend= await fetch(\"http://localhost:8080/ais\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                status: status,\r\n                lastSend: lastSend,\r\n                trackInput: trackInput,\r\n                startTime: startTime,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                mmsiNumber: mmsiNumber,\r\n                aisName: aisName,\r\n                aisType: aisType,\r\n                shipCallSign: shipCallSign,\r\n                trackMode: trackMode,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                longitude: longitude,\r\n                distance: distance,\r\n                imoNumber: imoNumber,\r\n                eta: eta,\r\n                navigationStatus: navStatus,\r\n                rateOfTurn: rateOfTurn,\r\n                dimensionsA: dimensionsA,\r\n                dimensionsB: dimensionsB,\r\n                dimensionsC: dimensionsC,\r\n                dimensionsD: dimensionsD,\r\n                vendorId: vendorId,\r\n                destination: destination,\r\n                count: count\r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resSend.status === 201) {\r\n            alert(\"Save AIS Track success\");\r\n        } else {\r\n            alert(\"Some error occured\");\r\n        }\r\n        window.location.reload();\r\n    }\r\n    \r\n    // REQUEST POST SAVE AND SEND AIS TRACK **\r\n    let dataSaveAndSend = async (e) => {\r\n        let resSend= await fetch(\"http://localhost:8080/ais/saveandsend\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                \r\n                status: status,\r\n                lastSend: lastSend,\r\n                trackInput: trackInput,\r\n                startTime: startTime,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                mmsiNumber: mmsiNumber,\r\n                aisName: aisName,\r\n                aisType: aisType,\r\n                shipCallSign: shipCallSign,\r\n                trackMode: trackMode,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                longitude: longitude,\r\n                distance: distance,\r\n                imoNumber: imoNumber,\r\n                eta: eta,\r\n                navigationStatus: navStatus,\r\n                rateOfTurn: rateOfTurn,\r\n                dimensionsA: dimensionsA,\r\n                dimensionsB: dimensionsB,\r\n                dimensionsC: dimensionsC,\r\n                dimensionsD: dimensionsD,\r\n                vendorId: vendorId,\r\n                destination: destination,\r\n                count: count\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resSend.status === 201) {\r\n            alert(\"Save and Send AIS Track success\");\r\n          } else {\r\n            alert(\"Some error occured\");\r\n          }\r\n        window.location.reload();   \r\n    }\r\n\r\n    // Function Request PUT Update Data AIS TRACK **\r\n    let dataUpdate = async (e) => {\r\n        let resUpdate= await fetch(`http://localhost:8080/ais/${id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                id:id,\r\n                status: status,\r\n                count:count,\r\n                lastSend: lastSend,\r\n                trackInput:trackInput,\r\n                course:course,\r\n                speed:speed,\r\n                trackMode: trackMode,\r\n                courseRangeMin:courseRangeMin,\r\n                courseRangeMax:courseRangeMax,\r\n                courseIncrement:courseIncrement,\r\n                latitude:latitude,\r\n                bearing:bearing,\r\n                startTime:startTime,\r\n                speedRangeMin:speedRangeMin,\r\n                speedRangeMax:speedRangeMax,\r\n                speedIncrement:speedIncrement,\r\n                longitude:longitude,\r\n                distance:distance,\r\n                endTime:endTime,\r\n                mmsiNumber:mmsiNumber,\r\n                aisName:aisName,\r\n                aisType:aisType,\r\n                shipCallSign:shipCallSign,\r\n                imoNumber:imoNumber,\r\n                eta:eta,\r\n                navigationStatus:navStatus,\r\n                rateOfTurn:rateOfTurn,\r\n                dimensionsA:dimensionsA,\r\n                dimensionsB:dimensionsB,\r\n                dimensionsC:dimensionsC,\r\n                dimensionsD:dimensionsD,\r\n                vendorId:vendorId,\r\n                destination:destination \r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resUpdate.status === 200) {\r\n            alert(\"AIS Track Updated\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n        window.location.reload();\r\n    }\r\n\r\n    // Function Request PUT Update Data AIS TRACK SAVE AND SEND**\r\n    let dataUpdateSaveAndSend = async (e) => {\r\n        let resUpdate= await fetch(`http://localhost:8080/ais/${id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                id:id,\r\n                status: status,\r\n                count:count,\r\n                lastSend: lastSend,\r\n                trackInput:trackInput,\r\n                course:course,\r\n                speed:speed,\r\n                trackMode: trackMode,\r\n                courseRangeMin:courseRangeMin,\r\n                courseRangeMax:courseRangeMax,\r\n                courseIncrement:courseIncrement,\r\n                latitude:latitude,\r\n                bearing:bearing,\r\n                startTime:startTime,\r\n                speedRangeMin:speedRangeMin,\r\n                speedRangeMax:speedRangeMax,\r\n                speedIncrement:speedIncrement,\r\n                longitude:longitude,\r\n                distance:distance,\r\n                endTime:endTime,\r\n                mmsiNumber:mmsiNumber,\r\n                aisName:aisName,\r\n                aisType:aisType,\r\n                shipCallSign:shipCallSign,\r\n                imoNumber:imoNumber,\r\n                eta:eta,\r\n                navigationStatus:navStatus,\r\n                rateOfTurn:rateOfTurn,\r\n                dimensionsA:dimensionsA,\r\n                dimensionsB:dimensionsB,\r\n                dimensionsC:dimensionsC,\r\n                dimensionsD:dimensionsD,\r\n                vendorId:vendorId,\r\n                destination:destination \r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resUpdate.status === 200) {\r\n            handlerSendTrackSaveAndSend();\r\n            alert(\"AIS Track Updated\");\r\n            window.location.reload();\r\n            } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n            }\r\n        window.location.reload();\r\n    }\r\n        \r\n    // HANDLER SAVE AIS TRACK **\r\n    let handlerSaveTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"import\"){\r\n                alert(\"import\") //TO DO\r\n            } else {\r\n                if(edit !== \"edit\"){   \r\n                    handleCloseSave();\r\n                    dataSave();\r\n                } else {\r\n                    handleCloseSave();\r\n                    dataUpdate();\r\n                }\r\n            }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER SAVE AND SEND AIS TRACK **\r\n    let handlerSaveAndSendTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"import\"){\r\n                alert(\"import\") //TO DO\r\n            } else {\r\n                if(edit !== \"edit\"){\r\n                    handleCloseSaveAndSend();\r\n                    dataSaveAndSend();\r\n                } else {\r\n                    handleCloseSaveAndSend();\r\n                    dataUpdateSaveAndSend();\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI INPUT SAVE AND SEND**\r\n    let handlerValidasiInputSaveAndSend = async (e) => {\r\n        if(edit === \"edit\"){\r\n            handlerValidasiSaveAndSendTrackUpdate();\r\n        } else {\r\n            handlerValidasiSaveAndSendTrack();\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE AND SEND AIS TRACK **\r\n    let handlerValidasiSaveAndSendTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"\" || trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackInput === \"single\" && trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 1 \")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 1 \")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n                    if(count === \"\" || course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 1\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 2\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n                    if(count === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        handleShowSaveAndSend();\r\n                    }\r\n                }\r\n            }\r\n            \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE AND SEND AIS TRACK UPDATE **\r\n    let handlerValidasiSaveAndSendTrackUpdate = async (e) => {\r\n        try {\r\n            if(trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 1 \")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi 1 \")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } \r\n            }\r\n            \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI INPUT SAVE**\r\n    let handlerValidasiInput = async (e) => {\r\n        if(edit === \"edit\"){\r\n            handlerValidasiUpdateTrack();\r\n        } else {\r\n            handlerValidasiSaveTrack();\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE AIS TRACK **  ======\r\n    let handlerValidasiSaveTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"\" || trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackInput === \"single\" && trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n                    if(count === \"\" || course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                    handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n                    if(count === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        handleShowSave();\r\n                    }\r\n                }\r\n            }    \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI UPDATE AIS TRACK ** ====\r\n    let handlerValidasiUpdateTrack = async (e) => {\r\n        try {\r\n            if(trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(\"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || mmsiNumber === \"\" || aisName === \"\" || aisType === \"\" || shipCallSign === \"\" || imoNumber === \"\" || eta === \"\" || navStatus === \"\" || rateOfTurn === \"\" || dimensionsA === \"\" || dimensionsB === \"\" || dimensionsC === \"\" || dimensionsD === \"\" || vendorId === \"\" || destination === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } \r\n            }    \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER CHANGE SELECTED AIS TRACK **\r\n    const handleChange=(e)=>{\r\n        const {name, checked}= e.target;\r\n        if(name===\"allselect\")\r\n        {\r\n            const checkedvalue = AISData.map( (ais)=>{ return {...ais, isChecked:checked}});\r\n            console.log(checkedvalue);\r\n            setaISData(checkedvalue);\r\n        } else {\r\n            const checkedvalue= AISData.map( (ais)=>\r\n            ais.id ===parseInt(name)? {...ais, isChecked:checked}:ais);\r\n            console.log(checkedvalue);\r\n            setaISData(checkedvalue);\r\n        }\r\n    }\r\n   \r\n    // HANDLER GET DELETED ID AIS TRACK **\r\n    const handlerGetIdDeleteTrack = async (id) => {\r\n        try {               \r\n            for(let i=0; i < AISData.length; i++){\r\n                if(AISData[i].isChecked===true){            \r\n                    checkIdDelete.push(AISData[i].id);                           \r\n                    console.log(checkIdDelete)\r\n                }\r\n            }        \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        if(checkIdDelete.length > 0){\r\n            handleShowDelete();\r\n        } else {\r\n            alert(\"Pilih AIS Track yg akan dihapus\")\r\n        }\r\n    }\r\n\r\n    // HANDLER DELETE ALL AIS TRACK BY ID CHECKED **\r\n    let handlerDeleteTrack = async (e) => {\r\n        try {               \r\n            for(let i=0; i < AISData.length; i++){\r\n                if(AISData[i].isChecked===true){            \r\n                    checkIdDelete.push(AISData[i].id);                           \r\n                    console.log(checkIdDelete)\r\n                }\r\n            }        \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        let resDelete= await fetch(`http://localhost:8080/ais/deleteall`, {\r\n            method: \"DELETE\",\r\n            body: \"[\"+checkIdDelete+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        \r\n        if (resDelete.status === 204) {\r\n            alert(\"AIS Track Deleted\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n          handleCloseDelete(true)\r\n    }   \r\n\r\n    // HANDLER TRACK INPUT CHANGE AIS TRACK **\r\n    const handleTrackInput=(event)=>{\r\n        setTrackInput(event.target.value)\r\n        var Tinput = event.target.value\r\n        var status = \"change\"\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"radio1\").disabled = true;\r\n        document.getElementById(\"radio2\").disabled = true;\r\n        disableFormInput(Tinput, trackMode, status)\r\n    }\r\n\r\n    // HANDLER TRACK MODE CHANGE AIS TRACK **\r\n    const handleTrackMode=(event)=>{\r\n        setTrackMode(event.target.value)\r\n        var Tmode = event.target.value\r\n        var status = \"change\"\r\n        disableFormInput(trackInput, Tmode, status)\r\n    }\r\n\r\n    // DISABLED INPUT MANUAL AIS TRACK **\r\n    const formManualTrackInput = () => {  \r\n        document.getElementById(\"radio1\").disabled = false;\r\n        document.getElementById(\"radio2\").disabled = false;\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"course\").disabled = false;\r\n        document.getElementById(\"speed\").disabled = false;\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"mmsi-number\").disabled = false;\r\n        document.getElementById(\"imo-number\").disabled = false;\r\n        document.getElementById(\"vendor-id\").disabled = false;\r\n        document.getElementById(\"destination\").disabled = false;\r\n        document.getElementById(\"ais-name\").disabled = false;\r\n        document.getElementById(\"ais-type\").disabled = false;\r\n        document.getElementById(\"ship-call-sign\").disabled = false;\r\n        document.getElementById(\"eta\").disabled = false;\r\n        document.getElementById(\"rate-of-turn\").disabled = false;\r\n        document.getElementById(\"nav-status\").disabled = false;\r\n        document.getElementById(\"dimensions-a\").disabled = false;\r\n        document.getElementById(\"dimensions-b\").disabled = false;\r\n        document.getElementById(\"dimensions-c\").disabled = false;\r\n        document.getElementById(\"dimensions-d\").disabled = false;\r\n        \r\n        document.getElementById(\"radio1\").style.backgroundColor = 'white';\r\n        document.getElementById(\"radio2\").style.backgroundColor = 'white';\r\n        document.getElementById(\"tmr\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"mmsi-number\").style.backgroundColor = 'white';\r\n        document.getElementById(\"imo-number\").style.backgroundColor = 'white';\r\n        document.getElementById(\"vendor-id\").style.backgroundColor = 'white';\r\n        document.getElementById(\"destination\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ais-name\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ais-type\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ship-call-sign\").style.backgroundColor = 'white';\r\n        document.getElementById(\"eta\").style.backgroundColor = 'white';\r\n        document.getElementById(\"rate-of-turn\").style.backgroundColor = 'white';\r\n        document.getElementById(\"nav-status\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-a\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-b\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-c\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-d\").style.backgroundColor = 'white';\r\n        setCount(\"\")\r\n        setStartTime(\"-\")\r\n        setEndTime(\"-\")\r\n        setCourseRangeMin(\"\")\r\n        setCourseRangeMax(\"\")\r\n        setCourseIncrement(\"\")\r\n        setSpeedRangeMin(\"\")\r\n        setSpeedRangeMax(\"\")\r\n        setSpeedIncrement(\"\")\r\n    }\r\n\r\n    // DISABLED INPUT AUTOMATIC AIS TRACK **\r\n    const formAutomaticTrackInput = () => {  \r\n        document.getElementById(\"radio1\").disabled = false;\r\n        document.getElementById(\"radio2\").disabled = false;\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"start-time-input\").disabled = false;\r\n        document.getElementById(\"end-time-input\").disabled = false;\r\n        document.getElementById(\"course\").disabled = false;\r\n        document.getElementById(\"speed\").disabled = false;\r\n        document.getElementById(\"course-range-min\").disabled = false;\r\n        document.getElementById(\"course-range-max\").disabled = false;\r\n        document.getElementById(\"speed-range-max\").disabled = false;\r\n        document.getElementById(\"speed-range-min\").disabled = false;\r\n        document.getElementById(\"course-increment\").disabled = false;\r\n        document.getElementById(\"speed-increment\").disabled = false;\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"mmsi-number\").disabled = false;\r\n        document.getElementById(\"imo-number\").disabled = false;\r\n        document.getElementById(\"vendor-id\").disabled = false;\r\n        document.getElementById(\"destination\").disabled = false;\r\n        document.getElementById(\"ais-name\").disabled = false;\r\n        document.getElementById(\"ais-type\").disabled = false;\r\n        document.getElementById(\"ship-call-sign\").disabled = false;\r\n        document.getElementById(\"eta\").disabled = false;\r\n        document.getElementById(\"rate-of-turn\").disabled = false;\r\n        document.getElementById(\"nav-status\").disabled = false;\r\n        document.getElementById(\"dimensions-a\").disabled = false;\r\n        document.getElementById(\"dimensions-b\").disabled = false;\r\n        document.getElementById(\"dimensions-c\").disabled = false;\r\n        document.getElementById(\"dimensions-d\").disabled = false;\r\n\r\n\r\n        document.getElementById(\"radio1\").style.backgroundColor = 'white';\r\n        document.getElementById(\"radio2\").style.backgroundColor = 'white';\r\n        document.getElementById(\"tmr\").style.backgroundColor = 'white';\r\n        document.getElementById(\"start-time-input\").style.backgroundColor = 'white';\r\n        document.getElementById(\"end-time-input\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-range-min\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-range-max\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-range-max\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-range-min\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-increment\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-increment\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"mmsi-number\").style.backgroundColor = 'white';\r\n        document.getElementById(\"imo-number\").style.backgroundColor = 'white';\r\n        document.getElementById(\"vendor-id\").style.backgroundColor = 'white';\r\n        document.getElementById(\"destination\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ais-name\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ais-type\").style.backgroundColor = 'white';\r\n        document.getElementById(\"ship-call-sign\").style.backgroundColor = 'white';\r\n        document.getElementById(\"eta\").style.backgroundColor = 'white';\r\n        document.getElementById(\"rate-of-turn\").style.backgroundColor = 'white';\r\n        document.getElementById(\"nav-status\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-a\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-b\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-c\").style.backgroundColor = 'white';\r\n        document.getElementById(\"dimensions-d\").style.backgroundColor = 'white';\r\n\r\n    }\r\n\r\n    // DISABLED ALL INPUT AIS TRACK FORM **\r\n    const disableAllInput = () => {\r\n        document.getElementById(\"count\").disabled = true;\r\n        document.getElementById(\"count\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"start-time-input\").disabled = true;\r\n        document.getElementById(\"start-time-input\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"end-time-input\").disabled = true;\r\n        document.getElementById(\"end-time-input\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course\").disabled = true;\r\n        document.getElementById(\"course\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed\").disabled = true;\r\n        document.getElementById(\"speed\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-range-min\").disabled = true;\r\n        document.getElementById(\"course-range-min\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-range-max\").disabled = true;\r\n        document.getElementById(\"course-range-max\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-range-max\").disabled = true;\r\n        document.getElementById(\"speed-range-max\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-range-min\").disabled = true;\r\n        document.getElementById(\"speed-range-min\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-increment\").disabled = true;\r\n        document.getElementById(\"course-increment\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-increment\").disabled = true;\r\n        document.getElementById(\"speed-increment\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"latitude\").disabled = true;\r\n        document.getElementById(\"latitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"longitude\").disabled = true;\r\n        document.getElementById(\"longitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"bearing\").disabled = true;\r\n        document.getElementById(\"bearing\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"distance\").disabled = true;\r\n        document.getElementById(\"distance\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"mmsi-number\").disabled = true;\r\n        document.getElementById(\"mmsi-number\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"imo-number\").disabled = true;\r\n        document.getElementById(\"imo-number\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"dimensions-a\").disabled = true;\r\n        document.getElementById(\"dimensions-a\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"vendor-id\").disabled = true;\r\n        document.getElementById(\"vendor-id\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"ais-name\").disabled = true;\r\n        document.getElementById(\"ais-name\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"eta\").disabled = true;\r\n        document.getElementById(\"eta\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"dimensions-b\").disabled = true;\r\n        document.getElementById(\"dimensions-b\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"destination\").disabled = true;\r\n        document.getElementById(\"destination\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"ais-type\").disabled = true;\r\n        document.getElementById(\"ais-type\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"nav-status\").disabled = true;\r\n        document.getElementById(\"nav-status\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"dimensions-c\").disabled = true;\r\n        document.getElementById(\"dimensions-c\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"ship-call-sign\").disabled = true;\r\n        document.getElementById(\"ship-call-sign\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"rate-of-turn\").disabled = true;\r\n        document.getElementById(\"rate-of-turn\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"dimensions-d\").disabled = true;\r\n        document.getElementById(\"dimensions-d\").style.backgroundColor = '#696978';\r\n    }\r\n\r\n    // DISABLED FORM INPUT AIS TRACK **\r\n    const disableFormInput=(Tinput, Tmode, getEdit, bearing1 ,getDistance)=>{  \r\n        if(Tinput === 'single' && Tmode === 'manual')\r\n        {\r\n            disableAllInput()\r\n            formManualTrackInput()\r\n            if((getEdit === \"edit\")) {\r\n                    if(bearing1 > 0 && getDistance > 0){\r\n                        document.getElementById(\"ti\").disabled = true;\r\n                        document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                        handlerRadio2()\r\n                    } else {\r\n                        document.getElementById(\"ti\").disabled = true;\r\n                        document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                        handlerRadio1()    \r\n                    }\r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n    \r\n        } else if (Tinput === 'single' && Tmode === 'automatic') {\r\n            disableAllInput()\r\n            formAutomaticTrackInput()\r\n            setCount(\"\")\r\n            if((getEdit === \"edit\")) {\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"tmr\").disabled = true;\r\n                document.getElementById(\"tmr\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n          \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n            \r\n        } else if (Tinput === 'multi' && Tmode === 'manual') {\r\n            disableAllInput()\r\n            formManualTrackInput()\r\n            document.getElementById(\"count\").disabled = false;\r\n            document.getElementById(\"count\").style.backgroundColor = 'white';\r\n            if((getEdit === \"edit\")) {\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"count\").disabled = true;\r\n                document.getElementById(\"count\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n    \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n        } else if (Tinput === 'multi' && Tmode === 'automatic') {\r\n            \r\n            if((getEdit === \"edit\")) {\r\n                formAutomaticTrackInput()\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"tmr\").disabled = true;\r\n                document.getElementById(\"tmr\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n          \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n                disableAllInput()\r\n                \r\n                document.getElementById(\"tmr\").disabled = false;\r\n                document.getElementById(\"count\").disabled = false;\r\n                document.getElementById(\"count\").style.backgroundColor = 'white';\r\n                document.getElementById(\"radio1\").disabled = true;\r\n                document.getElementById(\"radio2\").disabled = true;\r\n                \r\n                const $selectaisType = document.getElementById('ais-type');\r\n                $selectaisType.value = \"-\";\r\n                const $selectNavStatus = document.getElementById('nav-status');\r\n                $selectNavStatus.value = \"-\";\r\n                setStartTime(\"-\");\r\n                setEndTime(\"-\");\r\n                setCourse(\"\");\r\n                setCourseRangeMin(\"\");\r\n                setCourseRangeMax(\"\");\r\n                setCourseIncrement(\"\");\r\n                setSpeed(\"\");\r\n                setSpeedRangeMin(\"\");\r\n                setSpeedRangeMax(\"\");\r\n                setSpeedIncrement(\"\");\r\n                setLatitude(\"\");\r\n                setLongitude(\"\");\r\n                setBearing(\"\");\r\n                setDistance(\"\");\r\n                setMmsiNumber(\"\");\r\n                setImoNumber(\"\");\r\n                setDimensionsA(\"\");\r\n                setVendorId(\"\");\r\n                setAisName(\"\");\r\n                setEta(\"\");\r\n                setDimensionsB(\"\");\r\n                setDestination(\"\");\r\n                setAisType(\"\");\r\n                setNavStatus(\"\");\r\n                setDimensionsC(\"\");\r\n                setShipCallSign(\"\");\r\n                setRateOfTurn(\"\");\r\n                setDimensionsD(\"\");\r\n            }\r\n        } else if(Tinput === 'import') {\r\n            disableAllInput()\r\n            document.getElementById(\"tmr\").disabled = true;\r\n            alert(\"Fungsi Import masih belum bisa digunakan\")\r\n            // document.getElementById(\"myfile\").disabled = false;\r\n            // document.getElementById(\"myfile\").style.backgroundColor = 'white';\r\n        }else {\r\n            disableAllInput()\r\n        }\r\n    }   \r\n   \r\n    // REQUEST GET UPDATE AIS TRACK **\r\n    const handleGetUpdateAISTrack = async (e) => {\r\n\r\n        const {id, checked}= e.target;\r\n        var item = AISData.find(x => x.id === parseInt(id));\r\n        const $selectTrackMode = document.getElementById('tmr');\r\n        $selectTrackMode.value = item.trackMode;\r\n        const $selectTrackInput = document.getElementById('ti');\r\n        $selectTrackInput.value = item.trackInput;\r\n        const $selectaisType = document.getElementById('ais-type');\r\n        $selectaisType.value = item.aisType;\r\n        const $selectNavStatus = document.getElementById('nav-status');\r\n        $selectNavStatus.value = item.navigationStatus;\r\n        setTrackInput(item.trackInput)\r\n        setTrackMode(item.trackMode)\r\n        setCheckTrackMode(item.trackMode)\r\n        setCount(item.count)\r\n        setStartTime(item.startTime)\r\n        setEndTime(item.endTime)\r\n        setCourse(item.course)\r\n        setCourseRangeMin(item.courseRangeMin)\r\n        setCourseRangeMax(item.courseRangeMax)\r\n        setSpeedRangeMin(item.speedRangeMin)\r\n        setSpeedRangeMax(item.speedRangeMax)\r\n        setCourseIncrement(item.courseIncrement)\r\n        setSpeedIncrement(item.speedIncrement)\r\n        setLatitude(item.latitude)\r\n        setLongitude(item.longitude)\r\n        setBearing(item.bearing)\r\n        setDistance(item.distance)\r\n        setId(item.id)\r\n        setSpeed(item.speed)\r\n        setMmsiNumber(item.mmsiNumber)\r\n        setAisName(item.aisName)\r\n        setAisType(item.aisType)\r\n        setShipCallSign(item.shipCallSign)\r\n        setImoNumber(item.imoNumber)\r\n        setEta(item.eta)\r\n        setNavStatus(item.navigationStatus)\r\n        setRateOfTurn(item.rateOfTurn)\r\n        setDimensionsA(item.dimensionsA)\r\n        setDimensionsB(item.dimensionsB)\r\n        setDimensionsC(item.dimensionsC)\r\n        setDimensionsD(item.dimensionsD)\r\n        setVendorId(item.vendorId)\r\n        setDestination(item.destination)\r\n        console.log(item)\r\n\r\n        \r\n        var getEdit=\"edit\";\r\n        setEdit(\"edit\")\r\n        var bearing1 = item.bearing;\r\n        var getDistance = item.distance;\r\n        disableFormInput(item.trackInput, item.trackMode, getEdit, bearing1, getDistance)\r\n    }\r\n\r\n    // HANDLER SEND STOP AIS TRACK **\r\n    let handlerStopTrack = async (e) => {\r\n        let resStop= await fetch(`http://localhost:8080/ais/stoptrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+checkIdStop+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resStop.status === 202) {\r\n            alert(\"AIS Track Stopped\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n    } \r\n\r\n    // HANDLER GET ID STOP AIS TRACK **\r\n    const handlerGetIdStopTrack = async (id) => {\r\n        try {              \r\n            for(let i=0; i < AISData.length; i++){\r\n                if(AISData[i].isChecked===true){            \r\n                    checkIdStop.push(AISData[i].id);                           \r\n                    console.log(checkIdStop)\r\n                }\r\n            }\r\n\r\n            if(checkIdStop.length > 0){\r\n                handlerStopTrack()\r\n            } else {\r\n                alert(\"Pilih Track yang akan distop\")\r\n            }   \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER GET ID SEND AIS TRACK **\r\n    const handlerGetIdSendTrack = async (id) => {\r\n            try {    \r\n                for(let i=0; i < AISData.length; i++){\r\n                    if(AISData[i].isChecked===true){            \r\n                        checkIdSend.push(AISData[i].id);                           \r\n                        console.log(checkIdSend)\r\n                    }\r\n                }   \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            if(checkIdSend.length > 0){\r\n                handlerSendTrack()\r\n            } else {\r\n                alert(\"Pilih Track yang akan dikirim\")\r\n            }\r\n    }\r\n\r\n    // HANDLER SEND AIS TRACK **\r\n    let handlerSendTrack = async (e) => {\r\n        let resSend= await fetch(`http://localhost:8080/ais/sendtrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+checkIdSend+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resSend.status === 202) {\r\n            alert(\"AIS Track Sended\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n    }\r\n\r\n    // HANDLER SEND AIS TRACK SAVE AND SEND**\r\n    let handlerSendTrackSaveAndSend = async (e) => {\r\n        let resSend= await fetch(`http://localhost:8080/ais/sendtrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+id+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resSend.status === 202) {\r\n            alert(\"AIS Track Sended\");\r\n            window.location.reload();\r\n            } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n            }\r\n    }\r\n\r\n    // HANDLER CANCEL **\r\n    const handlerCancel=(event)=>{\r\n        setEdit(\"change\")\r\n        document.getElementById(\"ti\").style.backgroundColor = 'white';\r\n        var Tinput = \"-\"\r\n        var Tmode = \"-\"\r\n        document.getElementById(\"ti\").disabled = false;\r\n        document.getElementById(\"tmr\").disabled = true;\r\n        const $selectaisType = document.getElementById('ais-type');\r\n        $selectaisType.value = \"-\";\r\n        const $selectNavStatus = document.getElementById('nav-status');\r\n        $selectNavStatus.value = \"-\";\r\n        const $selectTrackInput = document.getElementById('ti');\r\n        $selectTrackInput.value = \"-\";\r\n        setTrackInput(\"\")\r\n        const $selectTrackMode = document.getElementById('tmr');\r\n        $selectTrackMode.value = \"-\";\r\n        setTrackMode(\"\")\r\n        setCount(\"\")\r\n        setStartTime(\"-\")\r\n        setEndTime(\"-\")\r\n        setCourse(\"\")\r\n        setSpeed(\"\")\r\n        setCourseRangeMin(\"\")\r\n        setCourseRangeMax(\"\")\r\n        setCourseIncrement(\"\")\r\n        setSpeedRangeMin(\"\")\r\n        setSpeedRangeMax(\"\")\r\n        setSpeedIncrement(\"\")\r\n        setLongitude(\"\")\r\n        setLatitude(\"\")\r\n        setBearing(\"\")\r\n        setDistance(\"\")\r\n        setMmsiNumber(\"\")\r\n        setAisName(\"\")\r\n        setShipCallSign(\"\")\r\n        setImoNumber(\"\")\r\n        setEta(\"\")\r\n        setRateOfTurn(\"\")\r\n        setDimensionsA(\"\")\r\n        setDimensionsB(\"\")\r\n        setDimensionsC(\"\")\r\n        setDimensionsD(\"\")\r\n        setVendorId(\"\")\r\n        setDestination(\"\")\r\n        disableFormInput(Tinput, Tmode, status)\r\n    }\r\n\r\n    // HANDLER GET DEFAULT AIS TRACK --\r\n    const handlerGetDefault=(event)=>{\r\n        if(trackInput === \"single\" && trackMode === \"manual\"){\r\n            const $selectaisType = document.getElementById('ais-type');\r\n            $selectaisType.value = \"1\";\r\n            const $selectNavStatus = document.getElementById('nav-status');\r\n            $selectNavStatus.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setMmsiNumber(0)\r\n            setAisName(\"\")\r\n            setShipCallSign(\"\")\r\n            setImoNumber(0)\r\n            setEta(0)\r\n            setRateOfTurn(0)\r\n            setDimensionsA(0)\r\n            setDimensionsB(0)\r\n            setDimensionsC(0)\r\n            setDimensionsD(0)\r\n            setVendorId(0)\r\n            setDestination(\"\")\r\n    \r\n        } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n            const $selectaisType = document.getElementById('ais-type');\r\n            $selectaisType.value = \"1\";\r\n            const $selectNavStatus = document.getElementById('nav-status');\r\n            $selectNavStatus.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setStartTime(\"-\")\r\n            setEndTime(\"-\")\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setCourseRangeMin(0)\r\n            setCourseRangeMax(0)\r\n            setCourseIncrement(0)\r\n            setSpeedRangeMin(0)\r\n            setSpeedRangeMax(0)\r\n            setSpeedIncrement(0)\r\n            setMmsiNumber(0)\r\n            setAisName(\"\")\r\n            setShipCallSign(\"\")\r\n            setImoNumber(0)\r\n            setEta(0)\r\n            setRateOfTurn(0)\r\n            setDimensionsA(0)\r\n            setDimensionsB(0)\r\n            setDimensionsC(0)\r\n            setDimensionsD(0)\r\n            setVendorId(0)\r\n            setDestination(\"\")\r\n\r\n        } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n            const $selectaisType = document.getElementById('ais-type');\r\n            $selectaisType.value = \"1\";\r\n            const $selectNavStatus = document.getElementById('nav-status');\r\n            $selectNavStatus.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setCount(\"\")\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setMmsiNumber(0)\r\n            setAisName(\"\")\r\n            setShipCallSign(\"\")\r\n            setImoNumber(0)\r\n            setEta(0)\r\n            setRateOfTurn(0)\r\n            setDimensionsA(0)\r\n            setDimensionsB(0)\r\n            setDimensionsC(0)\r\n            setDimensionsD(0)\r\n            setVendorId(0)\r\n            setDestination(\"\")\r\n        } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"main-container\">   \r\n        <label className=\"label\">AIS TRACK LIST INFO</label>\r\n        <div className=\"track-info\">\r\n            <div className=\"track-list\">\r\n                <div className=\"table-wrapper\">\r\n                    <table className=\"scrolldown\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NO</th>\r\n                                <th>Track Mode</th>\r\n                                <th>MMSI</th>\r\n                                <th>AIS Name</th>\r\n                                <th>AIS Type</th>\r\n                                <th>Navigation Status</th>\r\n                                <th>Start Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Last Update Time</th>\r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                                <th><input type=\"checkbox\" name=\"allselect\" checked= { !AISData.some( (ais)=>ais?.isChecked!==true)} onChange={handleChange} />Select All</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            AISData.map( (d,i)=>(\r\n                                <tr key={i}>\r\n                                    <td>{d.id}</td>\r\n                                    <td>{d.trackMode}</td>\r\n                                    <td>{d.mmsiNumber}</td>\r\n                                    <td>{d.aisName}</td>\r\n                                    <td>{enumAisType[d.aisType]}</td>\r\n                                    <td>{enumNavStatus[d.navigationStatus]}</td>\r\n                                    <td>{d.startTime}</td>\r\n                                    <td>{d.endTime}</td>\r\n                                    <td>{d.lastSend}</td>\r\n                                    <td>{d.status}</td>\r\n                                    <td>\r\n                                        {/* <button className=\"btn btn-sm btn-info me-2\">Detail</button> */}\r\n                                        <button className=\"btn btn-sm btn-primary me-2\" id={d.id} onClick={handleGetUpdateAISTrack}>Edit</button>\r\n                                        {/* <button className=\"btn btn-sm btn-danger\">Delete</button> */}\r\n                                    </td>\r\n                                    <td className=\"select\"><input type=\"checkbox\" name={d.id}  checked={d?.isChecked || false } onChange={ handleChange }/> </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                          \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n                <button className=\"btn btn-primary mt-2\" onClick={handlerGetIdSendTrack}>SEND</button>\r\n                <button className=\"btn btn-info mt-2\" onClick={handlerGetIdSendTrack}>START</button>\r\n                <button className=\"btn btn-danger mt-2\" onClick={handlerGetIdStopTrack}>STOP</button>\r\n                <div className=\"btn-delete\">\r\n                    <Button variant=\"btn btn-danger mt-2\" onClick={handlerGetIdDeleteTrack}>\r\n                         DELETE\r\n                    </Button>\r\n                    <Modal show={showDelete} onHide={handleCloseDelete}>\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Yakin hapus Track?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleCloseDelete}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handlerDeleteTrack}>\r\n                                Delete\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"container-list\">\r\n        <label className=\"label\">DATA SETTING</label>\r\n            <div className=\"track-list-1\">\r\n                <div className=\"data-setting\">\r\n                    <table className=\"table-input\">\r\n                        <tr>\r\n                            <td className=\"id1\"></td>\r\n                            <td>Track Input</td>\r\n                            <td>             \r\n                                <select name=\"trak-input-radio\"  class=\"form-input\" id=\"ti\" onChange={handleTrackInput} >\r\n                                    <option value=\"-\">-- Pilih --</option>\r\n                                    <option value=\"single\">Single</option>\r\n                                    <option value=\"multi\">Multi</option>\r\n                                    <option value=\"import\">Import</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Track Mode</td>\r\n                            <td>\r\n                                <select  name=\"track-mode-radio\" class=\"form-input\" id=\"tmr\"   onChange={handleTrackMode} disabled> \r\n                                    <option value=\"-\">-- Pilih --</option>\r\n                                    <option value=\"manual\">Manual</option>\r\n                                    <option value=\"automatic\">Automatic</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Count</td>\r\n                            <td><input \r\n                                 type=\"number\" \r\n                                id=\"count\"\r\n                                name=\"count\"\r\n                                placeholder=\"Count\"\r\n                                class=\"form-input\"\r\n                                value={count}\r\n                                onChange={(e) => setCount(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n\r\n                         <tr>\r\n                            <td></td>\r\n                            <td>Start Time</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"datetime-local\" \r\n                                id=\"start-time-input\" \r\n                                name=\"input-start\"\r\n                                class=\"form-input\"\r\n                                value={startTime}\r\n                                onChange={(e) => setStartTime(e.target.value)}\r\n                                disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>End Time</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"datetime-local\" \r\n                                id=\"end-time-input\" \r\n                                name=\"input-end\"\r\n                                class=\"form-input\"\r\n                                value={endTime}\r\n                                onChange={(e) => setEndTime(e.target.value)}\r\n                                disabled>\r\n                                </input>\r\n                            </td>  \r\n                            <td></td>\r\n                            <td colSpan={3}>id:{id}, radio:{statusRadio}, status:{edit}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"course\"\r\n                                name=\"course\"\r\n                                placeholder=\"Course\"\r\n                                class=\"form-input\"\r\n                                value={course}\r\n                                onChange={(e) => setCourse(e.target.value)}\r\n                                disabled>\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Speed</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"speed\"\r\n                                name=\"speed\"\r\n                                placeholder=\"Speed\"\r\n                                class=\"form-input\"\r\n                                value={speed}\r\n                                onChange={(e) => setSpeed(e.target.value)}\r\n                                disabled>\r\n                                </input> knot\r\n                            </td>\r\n                            <td colSpan={4}></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Variation</td>\r\n                            <td></td>\r\n                            <td>Speed Variation</td>\r\n                            <td colSpan={5}></td>\r\n                        </tr>\r\n                \r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Range</td>\r\n                            <td >\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"course-range-min\" \r\n                                name=\"course-range-min\" \r\n                                placeholder=\"Min\"\r\n                                class=\"form-input-increment\"\r\n                                value={courseRangeMin}\r\n                                onChange={(e) => setCourseRangeMin(e.target.value)} \r\n                                disabled>\r\n                                </input>\r\n                                &nbsp;\r\n                                To\r\n                                &nbsp;\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"course-range-max\" \r\n                                name=\"course-range-max\" \r\n                                placeholder=\"Max\"\r\n                                class=\"form-input-increment\"\r\n                                value={courseRangeMax}\r\n                                onChange={(e) => setCourseRangeMax(e.target.value)}\r\n                                disabled>\r\n                                </input> deg\r\n                            </td> \r\n                            <td>Speed Range</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"speed-range-min\" \r\n                                name=\"speed-range-min\" \r\n                                placeholder=\"Min\"\r\n                                class=\"form-input-increment\"\r\n                                value={speedRangeMin}\r\n                                onChange={(e) => setSpeedRangeMin(e.target.value)} \r\n                                disabled>\r\n                                </input>\r\n                                &nbsp;\r\n                                To\r\n                                &nbsp;\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"speed-range-max\" \r\n                                name=\"speed-range-max\" \r\n                                placeholder=\"Max\"\r\n                                class=\"form-input-increment\"\r\n                                value={speedRangeMax}\r\n                                onChange={(e) => setSpeedRangeMax(e.target.value)}\r\n                                disabled>\r\n                                </input> knot\r\n                            </td>  \r\n                            <td colSpan={4}></td>\r\n                        </tr>   \r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Increment</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"course-increment\"\r\n                                name=\"course-increment\"\r\n                                placeholder=\"Course Increment\"\r\n                                class=\"form-input\"\r\n                                value={courseIncrement}\r\n                                onChange={(e) => setCourseIncrement(e.target.value)}\r\n                                disabled >\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Speed Increment</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"speed-increment\"\r\n                                name=\"speed-increment\"\r\n                                placeholder=\"Speed Increment\"\r\n                                class=\"form-input\"\r\n                                value={speedIncrement}\r\n                                onChange={(e) => setSpeedIncrement(e.target.value)} \r\n                                disabled>\r\n                                </input> knot\r\n                            </td>\r\n                            <td colSpan={4}></td> \r\n                        </tr>\r\n\r\n                        <tr className=\"radio-box-top\">\r\n                            <td><input type=\"radio\" className=\"radio\" id=\"radio1\" name=\"radio1\" onClick={handlerRadio1}  disabled={(trackInput === \"\" && trackMode ===\"\")} checked={statusRadio === 1}/></td>\r\n                            <td>Latitude</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"latitude\"\r\n                                name=\"latitude\"\r\n                                placeholder=\"Latitude\"\r\n                                class=\"form-input\"\r\n                                value={latitude}\r\n                                onChange={(e) => setLatitude(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Longitude</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"longitude\"\r\n                                name=\"longitude\"\r\n                                placeholder=\"Longitude\"\r\n                                class=\"form-input\"\r\n                                value={longitude}\r\n                                onChange={(e) => setLongitude(e.target.value)}  disabled> \r\n                                </input>\r\n                            </td>\r\n                            <td colSpan={4}></td>\r\n                        </tr>\r\n\r\n                        <tr  className=\"radio-box-bottom\">\r\n                            <td><input type=\"radio\" className=\"radio\" id=\"radio2\" name=\"radio2\"  onClick={handlerRadio2} disabled={((trackInput === \"\" && trackMode === \"\") ? true : false)} checked={statusRadio === 2}/></td>\r\n                            <td>Bearing</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"bearing\"\r\n                                name=\"bearing\"\r\n                                placeholder=\"Bearing\"\r\n                                class=\"form-input\"\r\n                                value={bearing}\r\n                                onChange={(e) => setBearing(e.target.value)} disabled={(statusRadio === 1? true : false)}>\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Distance</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"distance\"\r\n                                name=\"distance\"\r\n                                placeholder=\"Distance\"\r\n                                class=\"form-input\"\r\n                                value={distance}\r\n                                onChange={(e) => setDistance(e.target.value)} disabled={(statusRadio === 1? true : false)}> \r\n                                </input> NM\r\n                            </td>\r\n                            <td colSpan={4}></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>IFF Data</td>\r\n                            <td colSpan={7}></td>  \r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>MMSI Number</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"mmsi-number\"\r\n                                name=\"mmsi-number\"\r\n                                placeholder=\"MMSI Number\"\r\n                                class=\"form-input\"\r\n                                value={mmsiNumber}\r\n                                onChange={(e) => setMmsiNumber(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>IMO Number</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"imo-number\"\r\n                                name=\"imo-number\"\r\n                                placeholder=\"IMO Number\"\r\n                                class=\"form-input\"\r\n                                value={imoNumber}\r\n                                onChange={(e) => setImoNumber(e.target.value)} disabled> \r\n                                </input>\r\n                            </td>\r\n                            <td>Dimensions A</td>\r\n                            <td>             \r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"dimensions-a\"\r\n                                name=\"dimensions-a\"\r\n                                placeholder=\"Dimensions A\"\r\n                                class=\"form-input\"\r\n                                value={dimensionsA}\r\n                                onChange={(e) => setDimensionsA(e.target.value)} disabled> \r\n                                </input>\r\n                            </td>\r\n                            <td>Vendor id</td>  \r\n                            <td>\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"vendor-id\"\r\n                                name=\"vendor-id\"\r\n                                placeholder=\"Vendor Id\"\r\n                                class=\"form-input\"\r\n                                value={vendorId}\r\n                                onChange={(e) => setVendorId(e.target.value)} disabled> \r\n                                </input>\r\n                            </td>                    \r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>AIS Name</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"ais-name\"\r\n                                name=\"ais-name\"\r\n                                placeholder=\"AIS Name\"\r\n                                class=\"form-input\"\r\n                                value={aisName}\r\n                                onChange={(e) => setAisName(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>ETA</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"datetime-local\" \r\n                                id=\"eta\" \r\n                                name=\"eta\"\r\n                                class=\"form-input\"\r\n                                value={eta}\r\n                                onChange={(e) => setEta(e.target.value)}\r\n                                disabled>\r\n                                </input>\r\n                            </td>  \r\n                            <td>Dimensions B</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"dimensions-b\"\r\n                                name=\"dimensions-b\"\r\n                                placeholder=\"Dimensions B\"\r\n                                class=\"form-input\"\r\n                                value={dimensionsB}\r\n                                onChange={(e) => setDimensionsB(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Destination</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"destination\"\r\n                                name=\"destination\"\r\n                                placeholder=\"Destination\"\r\n                                class=\"form-input\"\r\n                                value={destination}\r\n                                onChange={(e) => setDestination(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>AIS Type</td>\r\n                            <td>             \r\n                                <select name=\"ais-type\"  class=\"form-input\" id=\"ais-type\"  onChange={(e) => setAisType(e.target.value)} disabled>\r\n                                    <option value=\"\">-- Pilih --</option>\r\n                                    <option value=\"1\">AIS Type 1</option>\r\n                                    <option value=\"2\">AIS Type 2</option>\r\n                                    <option value=\"3\">AIS Type 3</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Nav Status</td>\r\n                            <td>             \r\n                                <select name=\"nav-status\" class=\"form-input\" id=\"nav-status\" onChange={(e) => setNavStatus(e.target.value)} disabled>\r\n                                    <option value=\"\">-- Pilih --</option>\r\n                                    <option value=\"0\">Nav Status 1</option>\r\n                                    <option value=\"1\">Nav Status 2</option>\r\n                                    <option value=\"2\">Nav Status 3</option>\r\n                                    <option value=\"3\">Nav Status 4</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Dimensions C</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"dimensions-c\"\r\n                                name=\"dimensions-c\"\r\n                                placeholder=\"Dimensions C\"\r\n                                class=\"form-input\"\r\n                                value={dimensionsC}\r\n                                onChange={(e) => setDimensionsC(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Ship Call Sign</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"ship-call-sign\"\r\n                                name=\"ship-call-sign\"\r\n                                placeholder=\"Ship Call Sign\"\r\n                                class=\"form-input\"\r\n                                value={shipCallSign}\r\n                                onChange={(e) => setShipCallSign(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Rate of Turn</td>\r\n                            <td>             \r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"rate-of-turn\"\r\n                                name=\"rate-of-turn\"\r\n                                placeholder=\"Rate of Turn\"\r\n                                class=\"form-input\"\r\n                                value={rateOfTurn}\r\n                                onChange={(e) => setRateOfTurn(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Dimensions D</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"dimensions-d\"\r\n                                name=\"dimensions-d\"\r\n                                placeholder=\"Dimensions D\"\r\n                                class=\"form-input\"\r\n                                value={dimensionsD}\r\n                                onChange={(e) => setDimensionsD(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td colSpan={2}></td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n                <button type=\"submit\" className=\"btn btn-info mt-2\" onClick={handlerGetDefault} >GET DEFAULT</button>\r\n                <Button variant=\"btn btn-success mt-2\" onClick={handlerValidasiInput}>\r\n                    SAVE ONLY\r\n                </Button>\r\n                <Modal show={showSave} onHide={handleCloseSave}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Save Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Yakin untuk menyimpan Track?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseSave}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handlerSaveTrack}>\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                <Button variant=\"btn btn-primary mt-2\" onClick={handlerValidasiInputSaveAndSend} disabled={((checkTrackMode === \"automatic\")? true: false)}>\r\n                    SAVE & SEND\r\n                </Button>\r\n                <Modal show={showSaveAndSend} onHide={handleCloseSaveAndSend}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Save and Send Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Yakin untuk Menyimpan dan Mengirim Track?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseSaveAndSend}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={handlerSaveAndSendTrack}>\r\n                            Save\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <button type=\"submit\" className=\"btn btn-warning mt-2\" onClick={handlerCancel}>CANCEL</button>\r\n        </div>\r\n    </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default AISHome; ","D:\\TrackSim\\FE\\src\\components\\ADSB\\AdsbHome.js",["202","203","204","205","206","207","208","209","210","211"],[],"import  Axios  from \"axios\"\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nimport axios from \"axios\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Alert } from \"bootstrap\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst ADSBHome = (props) => {\r\n\r\n    const [ADSBData, setADSBData] = useState([]);\r\n    const [statusRadio, setStatusRadio] = useState(1);\r\n    const [id, setId] = useState(\"\");\r\n    const [status, setStatus] = useState(\"Saved\");\r\n    const [lastSend, setLastSend] = useState(\"\");\r\n    const [trackMode, setTrackMode] = useState(\"\");\r\n    const [course, setCourse] = useState(\"\");\r\n    const [speed, setSpeed] = useState(\"\");\r\n    const [altitude, setAltitude] = useState(\"\");\r\n    const [courseRangeMin, setCourseRangeMin] = useState();\r\n    const [courseRangeMax, setCourseRangeMax] = useState();\r\n    const [courseIncrement, setCourseIncrement] = useState();\r\n    const [latitude, setLatitude] = useState(\"\");\r\n    const [bearing, setBearing] = useState(\"\");\r\n    const [trackInput, setTrackInput] = useState(\"\");\r\n    const [startTime, setStartTime] = useState(\"-\");\r\n    const [speedRangeMin, setSpeedRangeMin] = useState(\"\");\r\n    const [speedRangeMax, setSpeedRangeMax] = useState(\"\");\r\n    const [speedIncrement, setSpeedIncrement] = useState(\"\");\r\n    const [longitude, setLongitude] = useState(\"\");\r\n    const [distance, setDistance] = useState(\"\");\r\n    const [count, setCount] = useState(\"\");\r\n    const [altitudeRangeMin, setAltitudeRangeMin] = useState();\r\n    const [altitudeRangeMax, setAltitudeRangeMax] = useState();\r\n    const [altitudeIncrement, setAltitudeIncrement] = useState();\r\n    const [endTime, setEndTime] = useState(\"-\");\r\n\r\n    const [country, setCountry] = useState(\"\");\r\n    const [position, setPosition] = useState(\"\");\r\n    const [icao, SetIcao] = useState(\"\");\r\n    const [heading, setHeading] = useState(\"\");\r\n    const [callSign, setCallSign] = useState(\"\");\r\n    const [verticalRate, setVerticalRate] = useState(\"\");\r\n\r\n    const checkIdSend=[];\r\n    const checkIdDelete=[];\r\n    const checkIdStop=[];\r\n    const [message, setMessage] = useState(\"\");\r\n    const [edit, setEdit] = useState(\"\");\r\n    const [checkTrackMode, setCheckTrackMode] = useState(\"\");\r\n\r\n    // POP UP DELETE ASDB TRACK\r\n    const [showDelete, setShowDelete] = useState(false);\r\n    const handleCloseDelete= () => setShowDelete(false);\r\n    const handleShowDelete = () => setShowDelete(true);\r\n\r\n    // POP UP SAVE ASDB TRACK\r\n    const [showSave, setShowSave] = useState(false);\r\n    const handleCloseSave= () => setShowSave(false);\r\n    const handleShowSave = () => setShowSave(true);\r\n\r\n    // POP UP SAVE AND SEND ASDB TRACK\r\n    const [showSaveAndSend, setShowSaveAndSend] = useState(false);\r\n    const handleCloseSaveAndSend= () => setShowSaveAndSend(false);\r\n    const handleShowSaveAndSend = () => setShowSaveAndSend(true);\r\n\r\n\r\n    // HANDLER RADIO 1 LATITUDE & LONGITUDE ASDB TRACK ##\r\n    let handlerRadio1 = async (e) => {\r\n        setStatusRadio(1)\r\n        document.getElementById(\"bearing\").disabled = true;\r\n        document.getElementById(\"bearing\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"distance\").disabled = true;\r\n        document.getElementById(\"distance\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        setBearing(\"\")\r\n        setDistance(\"\")\r\n    };\r\n    \r\n    // HANDLER RADIO 2 DISTANCE & BEARING ASDB TRACK ##\r\n    let handlerRadio2 = async () => {\r\n        setStatusRadio(2)\r\n        document.getElementById(\"bearing\").disabled = false;\r\n        document.getElementById(\"bearing\").style.backgroundColor = 'white';\r\n        document.getElementById(\"distance\").disabled = false;\r\n        document.getElementById(\"distance\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").disabled = true;\r\n        document.getElementById(\"latitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"longitude\").disabled = true;\r\n        document.getElementById(\"longitude\").style.backgroundColor = '#696978';\r\n        setLatitude(\"\")\r\n        setLongitude(\"\")\r\n    };\r\n\r\n    // REQUEST GET DATA ASDB TRACK ##\r\n    const getADSBData = async () => {\r\n        try{\r\n        const response = await Axios.get('http://localhost:8080/adsb');\r\n        setADSBData(response.data)\r\n        } catch(e){\r\n        console.log(e.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            getADSBData();\r\n    }, [])\r\n    \r\n    // HANDLER VALIDASI INPUT SEND **\r\n    let handlerValidasiInput = async (e) => {\r\n        if(edit === \"edit\"){\r\n            handlerValidasiUpdateTrack();\r\n        } else {\r\n            handlerValidasiSaveTrack();\r\n        }\r\n    }\r\n\r\n    // REQUEST POST SAVE ADSB TRACK ##\r\n    let dataSave = async (e) => {\r\n        let resSend= await fetch(\"http://localhost:8080/adsb\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                status: status,\r\n                lastSend:lastSend,\r\n                trackInput: trackInput,\r\n                trackMode: trackMode,\r\n                count: count,\r\n                startTime: startTime,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                altitude: altitude,\r\n                altitudeRangeMin: altitudeRangeMin,\r\n                altitudeRangeMax: altitudeRangeMax,\r\n                altitudeIncrement: altitudeIncrement,\r\n                longitude: longitude,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                distance: distance,\r\n                country: country,\r\n                icao: icao,\r\n                callSign: callSign,\r\n                position: position,\r\n                heading: heading,\r\n                verticalRate: verticalRate\r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resSend.status === 201) {\r\n            alert(\"Save ADSB Track success\");\r\n          } else {\r\n            alert(\"Some error occured\");\r\n          }\r\n        window.location.reload();\r\n    }\r\n\r\n    // HANDLER SAVE ASDB TRACK  ##\r\n    let handlerSaveTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"import\"){\r\n                alert(\"import\") //TO DO\r\n            } else {\r\n                if(edit !== \"edit\"){\r\n                    handleCloseSave();\r\n                    dataSave();\r\n                } else {\r\n                    handleCloseSave();\r\n                    dataUpdate();\r\n                }\r\n            }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE ADSB TRACK ##\r\n    let handlerValidasiSaveTrack = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if(trackInput === \"\" || trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackInput === \"single\" && trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || altitude === \"\"  || altitudeIncrement === \"\"  || altitudeRangeMin === \"\"  || altitudeRangeMax === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n                    if(count === \"\" || course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                    handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n                    if(count === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        handleShowSave();\r\n                    }\r\n                }\r\n            }    \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE ADSB UPDATE TRACK ##\r\n    let handlerValidasiUpdateTrack = async (e) => {\r\n        try {\r\n            if(trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || altitude === \"\"  || altitudeIncrement === \"\"  || altitudeRangeMin === \"\"  || altitudeRangeMax === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSave();\r\n                            }\r\n                        }\r\n                    }\r\n                } \r\n            }    \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // REQUEST POST SAVE AND SEND ADSB TRACK ##\r\n    let dataSaveAndSend = async (e) => {\r\n        let resSend= await fetch(\"http://localhost:8080/adsb/saveandsend\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                status: status,\r\n                lastSend:lastSend,\r\n                trackInput: trackInput,\r\n                trackMode: trackMode,\r\n                count: count,\r\n                startTime: startTime,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                altitude: altitude,\r\n                altitudeRangeMin: altitudeRangeMin,\r\n                altitudeRangeMax: altitudeRangeMax,\r\n                altitudeIncrement: altitudeIncrement,\r\n                longitude: longitude,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                distance: distance,\r\n                country: country,\r\n                icao: icao,\r\n                callSign: callSign,\r\n                position: position,\r\n                heading: heading,\r\n                verticalRate: verticalRate\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resSend.status === 201) {\r\n            alert(\"Save and Send ADSB Track success\");\r\n          } else {\r\n            alert(\"Some error occured\");\r\n          }\r\n        window.location.reload();   \r\n    }\r\n\r\n    // Function Request PUT Update Data ADSB TRACK SAVE AND SEND  ##\r\n    let dataUpdateSaveAndSend = async (e) => {\r\n        let resUpdate= await fetch(`http://localhost:8080/adsb/${id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                status: status,\r\n                lastSend:lastSend,\r\n                trackInput: trackInput,\r\n                trackMode: trackMode,\r\n                count: count,\r\n                startTime: startTime,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                altitude: altitude,\r\n                altitudeRangeMin: altitudeRangeMin,\r\n                altitudeRangeMax: altitudeRangeMax,\r\n                altitudeIncrement: altitudeIncrement,\r\n                longitude: longitude,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                distance: distance,\r\n                country: country,\r\n                icao: icao,\r\n                callSign: callSign,\r\n                position: position,\r\n                heading: heading,\r\n                verticalRate: verticalRate\r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resUpdate.status === 200) {\r\n            handlerSendTrackSaveAndSend();\r\n            alert(\"ASDB Track Updated\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n        window.location.reload();\r\n    }\r\n\r\n    // HANDLER VALIDASI INPUT SAVE AND SEND UPDATE ##\r\n    let handlerValidasiInputSaveAndSendUpdate = async (e) => {\r\n        if(edit === \"edit\"){\r\n            handlerValidasiSaveAndSendTrackUpdate();\r\n        } else {\r\n            handlerValidasiSaveAndSendTrack();\r\n        }\r\n    }\r\n\r\n    // HANDLER SAVE AND SEND ASDB TRACK ##\r\n    let handlerSaveAndSendTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"import\"){\r\n                alert(\"import\") //TO DO\r\n            } else {\r\n                if(edit !== \"edit\"){\r\n                    handleCloseSaveAndSend();\r\n                    dataSaveAndSend();\r\n                } else {\r\n                    handleCloseSaveAndSend();\r\n                    dataUpdateSaveAndSend();\r\n                }\r\n            }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE AND SEND ADSB TRACK ##\r\n    let handlerValidasiSaveAndSendTrack = async (e) => {\r\n        try {\r\n            if(trackInput === \"\" || trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackInput === \"single\" && trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || altitude === \"\"  || altitudeIncrement === \"\"  || altitudeRangeMin === \"\"  || altitudeRangeMax === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n                    if(count === \"\" || course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\"){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n                    if(count === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        handleShowSaveAndSend();\r\n                    }\r\n                }\r\n            }\r\n            \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER VALIDASI SAVE AND SEND ADSB TRACK UPDATE ##\r\n    let handlerValidasiSaveAndSendTrackUpdate = async (e) => {\r\n        try {\r\n            if(trackMode === \"\"){\r\n                alert(\"Pilih track mode terlebih dahulu\")\r\n            } else {\r\n                if(trackMode === \"manual\"){\r\n                    if(course === \"\" || speed === \"\" || altitude === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                } else if(trackMode === \"automatic\"){\r\n                    if(course === \"\" || courseRangeMin === \"\"|| courseRangeMax === \"\"|| courseIncrement === \"\"|| speed === \"\"|| speedRangeMin === \"\"|| speedRangeMax === \"\"|| speedIncrement === \"\" || altitude === \"\"  || altitudeIncrement === \"\"  || altitudeRangeMin === \"\"  || altitudeRangeMax === \"\" || country === \"\" || position === \"\" || icao === \"\" || heading === \"\" || callSign === \"\" || verticalRate === \"\" ){\r\n                        alert(\"Pastikan semua data sudah terisi\")\r\n                    } else {\r\n                        if(statusRadio === 1){\r\n                            if(latitude === \"\" || longitude === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        } else {\r\n                            if(bearing === \"\" || distance === \"\"){\r\n                                alert(\"Pastikan semua data sudah terisi\")\r\n                            } else {\r\n                                handleShowSaveAndSend();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER SEND ADSB TRACK SAVE AND SEND\r\n    let handlerSendTrackSaveAndSend = async (e) => {\r\n        let resSend= await fetch(`http://localhost:8080/adsb/sendtrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+id+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resSend.status === 200) {\r\n            alert(\"ADSB Track Sended\");\r\n            window.location.reload();\r\n            } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n            }\r\n    }\r\n\r\n    // HANDLER CHANGE SELECTED ADSB TRACK ##\r\n    const handleChange=(e)=>{\r\n        const {name, checked}= e.target;\r\n        if(name===\"allselect\")\r\n        {\r\n            const checkedvalue = ADSBData.map( (adsb)=>{ return {...adsb, isChecked:checked}});\r\n            console.log(checkedvalue);\r\n            setADSBData(checkedvalue);\r\n        } else {\r\n            const checkedvalue= ADSBData.map( (adsb)=>\r\n            adsb.id ===parseInt(name)? {...adsb, isChecked:checked}:adsb);\r\n            console.log(checkedvalue);\r\n            setADSBData(checkedvalue);\r\n        }\r\n    }\r\n   \r\n    // HANDLER GET DELETED ID ADSB TRACK ##\r\n    const handlerGetIdDeleteTrack = async (id) => {\r\n        try {               \r\n            for(let i=0; i < ADSBData.length; i++){\r\n                if(ADSBData[i].isChecked===true){            \r\n                    checkIdDelete.push(ADSBData[i].id);                           \r\n                    console.log(checkIdDelete)\r\n                }\r\n            }        \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n        if(checkIdDelete.length > 0){\r\n            handleShowDelete();\r\n        } else {\r\n            alert(\"Pilih ADSB Track yg akan dihapus\")\r\n        }\r\n    }\r\n\r\n    // HANDLER DELETE ALL ADSB TRACK BY ID CHECKED ##\r\n    let handlerDeleteTrack = async (e) => {\r\n        try {               \r\n            for(let i=0; i < ADSBData.length; i++){\r\n                if(ADSBData[i].isChecked===true){            \r\n                    checkIdDelete.push(ADSBData[i].id);                           \r\n                    console.log(checkIdDelete)\r\n                }\r\n            }        \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        let resDelete= await fetch(`http://localhost:8080/adsb/deleteall`, {\r\n            method: \"DELETE\",\r\n            body: \"[\"+checkIdDelete+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        \r\n        if (resDelete.status === 204) {\r\n            alert(\"ADSB Track Deleted\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n          handleCloseDelete(true)\r\n    }   \r\n\r\n    // HANDLER TRACK INPUT CHANGE ADSB TRACK ##\r\n    const handleTrackInput=(event)=>{\r\n        setTrackInput(event.target.value)\r\n        var Tinput = event.target.value\r\n        var status = \"change\"\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"radio1\").disabled = true;\r\n        document.getElementById(\"radio2\").disabled = true;\r\n        disableFormInput(Tinput, trackMode, status)\r\n    }\r\n\r\n    // HANDLER TRACK MODE CHANGE ADSB TRACK ##\r\n    const handleTrackMode=(event)=>{\r\n        setTrackMode(event.target.value)\r\n        var Tmode = event.target.value\r\n        var status = \"change\"\r\n        disableFormInput(trackInput, Tmode, status)\r\n    }\r\n\r\n    // DISABLED INPUT MANUAL ADSB TRACK ##\r\n    const formManualTrackInput = () => {  \r\n        document.getElementById(\"radio1\").disabled = false;\r\n        document.getElementById(\"radio2\").disabled = false;\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"course\").disabled = false;\r\n        document.getElementById(\"speed\").disabled = false;\r\n        document.getElementById(\"altitude\").disabled = false;\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"country\").disabled = false;\r\n        document.getElementById(\"position\").disabled = false;\r\n        document.getElementById(\"heading\").disabled = false;\r\n        document.getElementById(\"icao\").disabled = false;\r\n        document.getElementById(\"call-sign\").disabled = false;\r\n        document.getElementById(\"vertical-rate\").disabled = false;\r\n\r\n        document.getElementById(\"radio1\").style.backgroundColor = 'white';\r\n        document.getElementById(\"radio2\").style.backgroundColor = 'white';\r\n        document.getElementById(\"tmr\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed\").style.backgroundColor = 'white';\r\n        document.getElementById(\"altitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"country\").style.backgroundColor = 'white';\r\n        document.getElementById(\"position\").style.backgroundColor = 'white';\r\n        document.getElementById(\"heading\").style.backgroundColor = 'white';\r\n        document.getElementById(\"icao\").style.backgroundColor = 'white';\r\n        document.getElementById(\"call-sign\").style.backgroundColor = 'white';\r\n        document.getElementById(\"vertical-rate\").style.backgroundColor = 'white';\r\n   \r\n        setCount(\"\")\r\n        setStartTime(\"-\")\r\n        setEndTime(\"-\")\r\n        setCourseRangeMin(\"\")\r\n        setCourseRangeMax(\"\")\r\n        setCourseIncrement(\"\")\r\n        setSpeedRangeMin(\"\")\r\n        setSpeedRangeMax(\"\")\r\n        setSpeedIncrement(\"\")\r\n        setAltitudeRangeMin(\"\")\r\n        setAltitudeRangeMax(\"\")\r\n        setAltitudeIncrement(\"\")\r\n    }\r\n\r\n    // DISABLED INPUT AUTOMATIC ADSB TRACK ##\r\n    const formAutomaticTrackInput = () => {  \r\n        document.getElementById(\"radio1\").disabled = false;\r\n        document.getElementById(\"radio2\").disabled = false;\r\n        document.getElementById(\"tmr\").disabled = false;\r\n        document.getElementById(\"start-time-input\").disabled = false;\r\n        document.getElementById(\"end-time-input\").disabled = false;\r\n        document.getElementById(\"course\").disabled = false;\r\n        document.getElementById(\"speed\").disabled = false;\r\n        document.getElementById(\"altitude\").disabled = false;\r\n        document.getElementById(\"course-range-min\").disabled = false;\r\n        document.getElementById(\"course-range-max\").disabled = false;\r\n        document.getElementById(\"speed-range-max\").disabled = false;\r\n        document.getElementById(\"speed-range-min\").disabled = false;\r\n        document.getElementById(\"altitude-range-max\").disabled = false;\r\n        document.getElementById(\"altitude-range-min\").disabled = false;\r\n        document.getElementById(\"course-increment\").disabled = false;\r\n        document.getElementById(\"speed-increment\").disabled = false;\r\n        document.getElementById(\"altitude-increment\").disabled = false;\r\n        document.getElementById(\"latitude\").disabled = false;\r\n        document.getElementById(\"longitude\").disabled = false;\r\n        document.getElementById(\"country\").disabled = false;\r\n        document.getElementById(\"position\").disabled = false;\r\n        document.getElementById(\"heading\").disabled = false;\r\n        document.getElementById(\"icao\").disabled = false;\r\n        document.getElementById(\"call-sign\").disabled = false;\r\n        document.getElementById(\"vertical-rate\").disabled = false;\r\n\r\n        document.getElementById(\"radio1\").style.backgroundColor = 'white';\r\n        document.getElementById(\"radio2\").style.backgroundColor = 'white';\r\n        document.getElementById(\"tmr\").style.backgroundColor = 'white';\r\n        document.getElementById(\"start-time-input\").style.backgroundColor = 'white';\r\n        document.getElementById(\"end-time-input\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed\").style.backgroundColor = 'white';\r\n        document.getElementById(\"altitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-range-min\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-range-max\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-range-max\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-range-min\").style.backgroundColor = 'white';\r\n        document.getElementById(\"altitude-range-max\").style.backgroundColor = 'white';\r\n        document.getElementById(\"altitude-range-min\").style.backgroundColor = 'white';\r\n        document.getElementById(\"course-increment\").style.backgroundColor = 'white';\r\n        document.getElementById(\"speed-increment\").style.backgroundColor = 'white';\r\n        document.getElementById(\"altitude-increment\").style.backgroundColor = 'white';\r\n        document.getElementById(\"latitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"longitude\").style.backgroundColor = 'white';\r\n        document.getElementById(\"country\").style.backgroundColor = 'white';\r\n        document.getElementById(\"position\").style.backgroundColor = 'white';\r\n        document.getElementById(\"heading\").style.backgroundColor = 'white';\r\n        document.getElementById(\"icao\").style.backgroundColor = 'white';\r\n        document.getElementById(\"call-sign\").style.backgroundColor = 'white';\r\n        document.getElementById(\"vertical-rate\").style.backgroundColor = 'white';\r\n    }\r\n\r\n    // DISABLED ALL INPUT ADSB TRACK FORM ##\r\n    const disableAllInput = () => {\r\n        document.getElementById(\"count\").disabled = true;\r\n        document.getElementById(\"count\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"start-time-input\").disabled = true;\r\n        document.getElementById(\"start-time-input\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"end-time-input\").disabled = true;\r\n        document.getElementById(\"end-time-input\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course\").disabled = true;\r\n        document.getElementById(\"course\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed\").disabled = true;\r\n        document.getElementById(\"speed\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"altitude\").disabled = true;\r\n        document.getElementById(\"altitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-range-min\").disabled = true;\r\n        document.getElementById(\"course-range-min\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-range-max\").disabled = true;\r\n        document.getElementById(\"course-range-max\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-range-max\").disabled = true;\r\n        document.getElementById(\"speed-range-max\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-range-min\").disabled = true;\r\n        document.getElementById(\"speed-range-min\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"altitude-range-min\").disabled = true;\r\n        document.getElementById(\"altitude-range-min\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"altitude-range-max\").disabled = true;\r\n        document.getElementById(\"altitude-range-max\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"course-increment\").disabled = true;\r\n        document.getElementById(\"course-increment\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"speed-increment\").disabled = true;\r\n        document.getElementById(\"speed-increment\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"altitude-increment\").disabled = true;\r\n        document.getElementById(\"altitude-increment\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"latitude\").disabled = true;\r\n        document.getElementById(\"latitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"longitude\").disabled = true;\r\n        document.getElementById(\"longitude\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"bearing\").disabled = true;\r\n        document.getElementById(\"bearing\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"distance\").disabled = true;\r\n        document.getElementById(\"distance\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"country\").disabled = true;\r\n        document.getElementById(\"country\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"position\").disabled = true;\r\n        document.getElementById(\"position\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"icao\").disabled = true;\r\n        document.getElementById(\"icao\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"heading\").disabled = true;\r\n        document.getElementById(\"heading\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"call-sign\").disabled = true;\r\n        document.getElementById(\"call-sign\").style.backgroundColor = '#696978';\r\n        document.getElementById(\"vertical-rate\").disabled = true;\r\n        document.getElementById(\"vertical-rate\").style.backgroundColor = '#696978';\r\n    }\r\n\r\n    // DISABLED FORM INPUT ADSB TRACK ##\r\n    const disableFormInput=(Tinput, Tmode, getEdit, bearing1 ,getDistance)=>{  \r\n        if(Tinput === 'single' && Tmode === 'manual')\r\n        {\r\n            disableAllInput()\r\n            formManualTrackInput()\r\n            if((getEdit === \"edit\")) {\r\n                    if(bearing1 > 0 && getDistance > 0){\r\n                        document.getElementById(\"ti\").disabled = true;\r\n                        document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                        handlerRadio2()\r\n                    } else {\r\n                        document.getElementById(\"ti\").disabled = true;\r\n                        document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                        handlerRadio1()    \r\n                    }\r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n    \r\n        } else if (Tinput === 'single' && Tmode === 'automatic') {\r\n            disableAllInput()\r\n            formAutomaticTrackInput()\r\n            setCount(\"\")\r\n            if((getEdit === \"edit\")) {\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"tmr\").disabled = true;\r\n                document.getElementById(\"tmr\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n          \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n            \r\n        } else if (Tinput === 'multi' && Tmode === 'manual') {\r\n            disableAllInput()\r\n            formManualTrackInput()\r\n            document.getElementById(\"count\").disabled = false;\r\n            document.getElementById(\"count\").style.backgroundColor = 'white';\r\n            if((getEdit === \"edit\")) {\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"count\").disabled = true;\r\n                document.getElementById(\"count\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n    \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n            }\r\n        } else if (Tinput === 'multi' && Tmode === 'automatic') {\r\n            \r\n            if((getEdit === \"edit\")) {\r\n                formAutomaticTrackInput()\r\n                document.getElementById(\"ti\").disabled = true;\r\n                document.getElementById(\"ti\").style.backgroundColor = '#696978';\r\n                document.getElementById(\"tmr\").disabled = true;\r\n                document.getElementById(\"tmr\").style.backgroundColor = '#696978';\r\n                if(bearing1 > 0 && getDistance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n          \r\n            } else {\r\n                if(bearing > 0 && distance > 0){\r\n                    handlerRadio2()\r\n                } else {\r\n                    handlerRadio1()    \r\n                }\r\n                disableAllInput()\r\n                \r\n                document.getElementById(\"tmr\").disabled = false;\r\n                document.getElementById(\"count\").disabled = false;\r\n                document.getElementById(\"count\").style.backgroundColor = 'white';\r\n                document.getElementById(\"radio1\").disabled = true;\r\n                document.getElementById(\"radio2\").disabled = true;\r\n                \r\n                const $selectCountry = document.getElementById('country');\r\n                $selectCountry.value = \"-\";\r\n                const $selectPosition = document.getElementById('position');\r\n                $selectPosition.value = \"-\";\r\n                setStartTime(\"-\");\r\n                setEndTime(\"-\");\r\n                setCourse(\"\");\r\n                setCourseRangeMin(\"\");\r\n                setCourseRangeMax(\"\");\r\n                setCourseIncrement(\"\");\r\n                setSpeed(\"\");\r\n                setSpeedRangeMin(\"\");\r\n                setSpeedRangeMax(\"\");\r\n                setSpeedIncrement(\"\");\r\n                setAltitude(\"\");\r\n                setAltitudeRangeMin(\"\");\r\n                setAltitudeRangeMax(\"\");\r\n                setAltitudeIncrement(\"\");\r\n                setLatitude(\"\");\r\n                setLongitude(\"\");\r\n                setBearing(\"\");\r\n                setDistance(\"\");\r\n                setCountry(\"\");\r\n                setPosition(\"\");\r\n                SetIcao(\"\");\r\n                setHeading(\"\");\r\n                setCallSign(\"\");\r\n                setVerticalRate(\"\");\r\n\r\n            }\r\n        } else if(Tinput === 'import') {\r\n            disableAllInput()\r\n            document.getElementById(\"tmr\").disabled = true;\r\n            alert(\"Fungsi Import masih belum bisa digunakan\")\r\n            // document.getElementById(\"myfile\").disabled = false;\r\n            // document.getElementById(\"myfile\").style.backgroundColor = 'white';\r\n        }else {\r\n            disableAllInput()\r\n        }\r\n    }   \r\n   \r\n    // REQUEST GET UPDATE ADSB TRACK ##\r\n    const handleGetUpdateADSBTrack = async (e) => {\r\n\r\n        const {id, checked}= e.target;\r\n        var item = ADSBData.find(x => x.id === parseInt(id));\r\n        const $selectTrackMode = document.getElementById('tmr');\r\n        $selectTrackMode.value = item.trackMode;\r\n        const $selectTrackInput = document.getElementById('ti');\r\n        $selectTrackInput.value = item.trackInput;\r\n        const $selectCountry = document.getElementById('country');\r\n        $selectCountry.value = item.country;\r\n        const $selectPosition = document.getElementById('position');\r\n        $selectPosition.value = item.position;\r\n        setTrackInput(item.trackInput)\r\n        setTrackMode(item.trackMode)\r\n        setCheckTrackMode(item.trackMode)\r\n        setCount(item.count)\r\n        setStartTime(item.startTime)\r\n        setEndTime(item.endTime)\r\n        setCourse(item.course)\r\n        setCourseRangeMin(item.courseRangeMin)\r\n        setCourseRangeMax(item.courseRangeMax)\r\n        setSpeedRangeMin(item.speedRangeMin)\r\n        setSpeedRangeMax(item.speedRangeMax)\r\n        setAltitudeRangeMin(item.altitudeRangeMin)\r\n        setAltitudeRangeMax(item.altitudeRangeMax)\r\n        setCourseIncrement(item.courseIncrement)\r\n        setSpeedIncrement(item.speedIncrement)\r\n        setAltitudeIncrement(item.altitudeIncrement)\r\n        setAltitude(item.altitude)\r\n        setLatitude(item.latitude)\r\n        setLongitude(item.longitude)\r\n        setBearing(item.bearing)\r\n        setDistance(item.distance)\r\n        setId(item.id)\r\n        setSpeed(item.speed)\r\n        setCountry(item.country)\r\n        setPosition(item.position)\r\n        SetIcao(item.icao)\r\n        setHeading(item.heading)\r\n        setCallSign(item.callSign)\r\n        setVerticalRate(item.verticalRate)\r\n        console.log(item)\r\n        var getEdit=\"edit\";\r\n        setEdit(\"edit\")\r\n        var bearing1 = item.bearing;\r\n        var getDistance = item.distance;\r\n        disableFormInput(item.trackInput, item.trackMode, getEdit, bearing1, getDistance)\r\n    }\r\n\r\n    // Function Request PUT Update Data ADSB TRACK  ##\r\n    let dataUpdate = async (e) => {\r\n        let resUpdate= await fetch(`http://localhost:8080/adsb/${id}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                status: status,\r\n                lastSend:lastSend,\r\n                trackInput: trackInput,\r\n                trackMode: trackMode,\r\n                count: count,\r\n                startTime: startTime,\r\n                endTime: endTime,\r\n                speed: speed,\r\n                speedRangeMin: speedRangeMin,\r\n                speedRangeMax: speedRangeMax,\r\n                speedIncrement: speedIncrement,\r\n                course: course,\r\n                courseRangeMin: courseRangeMin,\r\n                courseRangeMax: courseRangeMax,\r\n                courseIncrement: courseIncrement,\r\n                altitude: altitude,\r\n                altitudeRangeMin: altitudeRangeMin,\r\n                altitudeRangeMax: altitudeRangeMax,\r\n                altitudeIncrement: altitudeIncrement,\r\n                longitude: longitude,\r\n                latitude: latitude,\r\n                bearing: bearing,\r\n                distance: distance,\r\n                country: country,\r\n                icao: icao,\r\n                callSign: callSign,\r\n                position: position,\r\n                heading: heading,\r\n                verticalRate: verticalRate\r\n        }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n\r\n        if (resUpdate.status === 200) {\r\n            alert(\"ASDB Track Updated\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n        window.location.reload();\r\n    }\r\n\r\n    // HANDLER SEND STOP ADSB TRACK ##\r\n    let handlerStopTrack = async (e) => {\r\n        let resStop= await fetch(`http://localhost:8080/adsb/stoptrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+checkIdStop+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resStop.status === 202) {\r\n            alert(\"ADSB Track Stopped\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n    } \r\n\r\n    // HANDLER GET ID STOP ADSB TRACK ##\r\n    const handlerGetIdStopTrack = async (id) => {\r\n        try {              \r\n            for(let i=0; i < ADSBData.length; i++){\r\n                if(ADSBData[i].isChecked===true){            \r\n                    checkIdStop.push(ADSBData[i].id);                           \r\n                    console.log(checkIdStop)\r\n                }\r\n            }\r\n\r\n            if(checkIdStop.length > 0){\r\n                handlerStopTrack()\r\n            } else {\r\n                alert(\"Pilih Track yang akan distop\")\r\n            }   \r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    // HANDLER GET ID SEND ADSB TRACK ##\r\n    const handlerGetIdSendTrack = async (id) => {\r\n            try {    \r\n                for(let i=0; i < ADSBData.length; i++){\r\n                    if(ADSBData[i].isChecked===true){            \r\n                        checkIdSend.push(ADSBData[i].id);                           \r\n                        console.log(checkIdSend)\r\n                    }\r\n                }   \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            if(checkIdSend.length > 0){\r\n                handlerSendTrack()\r\n            } else {\r\n                alert(\"Pilih Track yang akan dikirim\")\r\n            }\r\n    }\r\n\r\n    // HANDLER SEND ADSB TRACK ##\r\n    let handlerSendTrack = async (e) => {\r\n        let resSend= await fetch(`http://localhost:8080/adsb/sendtrack`, {\r\n            method: \"POST\",\r\n            body: \"[\"+checkIdSend+\"]\",\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },               \r\n        });\r\n        if (resSend.status === 202) {\r\n            alert(\"ADSB Track Sended\");\r\n            window.location.reload();\r\n          } else {\r\n            setMessage(\"Some error occured\");\r\n            window.location.reload();\r\n          }\r\n    }\r\n\r\n    // HANDLER CANCEL ADSB TRACK\r\n    const handlerCancel=(event)=>{\r\n\r\n        setEdit(\"change\")\r\n        var Tinput = \"-\"\r\n        var Tmode = \"-\"\r\n        document.getElementById(\"ti\").disabled = false;\r\n        document.getElementById(\"ti\").style.backgroundColor = 'white';\r\n        document.getElementById(\"tmr\").disabled = true;\r\n        const $selectCountry = document.getElementById('country');\r\n        $selectCountry.value = \"\";\r\n        const $selectPosition = document.getElementById('position');\r\n        $selectPosition.value = \"\";\r\n        const $selectTrackInput = document.getElementById('ti');\r\n        $selectTrackInput.value = \"-\";\r\n        setTrackInput(\"\")\r\n        const $selectTrackMode = document.getElementById('tmr');\r\n        $selectTrackMode.value = \"-\";\r\n        setTrackMode(\"\")\r\n        setStatus(\"Saved\")\r\n        setCount(\"\")\r\n        setStartTime(\"-\")\r\n        setEndTime(\"-\")\r\n        setCourse(\"\")\r\n        setSpeed(\"\")\r\n        setAltitude(\"\");\r\n        setCourseRangeMin(\"\")\r\n        setCourseRangeMax(\"\")\r\n        setCourseIncrement(\"\")\r\n        setSpeedRangeMin(\"\")\r\n        setSpeedRangeMax(\"\")\r\n        setSpeedIncrement(\"\")\r\n        setAltitudeRangeMin(\"\");\r\n        setAltitudeRangeMax(\"\");\r\n        setAltitudeIncrement(\"\");\r\n        setLongitude(\"\")\r\n        setLatitude(\"\")\r\n        setBearing(\"\")\r\n        setDistance(\"\")\r\n        setCountry(\"\");\r\n        setPosition(\"\");\r\n        SetIcao(\"\");\r\n        setHeading(\"\");\r\n        setCallSign(\"\");\r\n        setVerticalRate(\"\");\r\n        disableFormInput(Tinput, Tmode, status)\r\n    }\r\n\r\n    // HANDLER GET DEFAULT ADSB TRACK\r\n    const handlerGetDefault=(event)=>{\r\n        if(trackInput === \"single\" && trackMode === \"manual\"){\r\n            const $selectCountry = document.getElementById('country');\r\n            $selectCountry.value = \"IND\";\r\n            const $selectPosition = document.getElementById('position');\r\n            $selectPosition.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setCountry(\"IND\")\r\n            setPosition(\"1\")\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setAltitude(0)\r\n            SetIcao(0)\r\n            setHeading(0)\r\n            setCallSign(\"NS\")\r\n            setVerticalRate(0)\r\n    \r\n        } else if(trackInput === \"single\" && trackMode === \"automatic\"){\r\n            const $selectCountry = document.getElementById('country');\r\n            $selectCountry.value = \"IND\";\r\n            const $selectPosition = document.getElementById('position');\r\n            $selectPosition.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setCountry(\"IND\")\r\n            setPosition(\"1\")\r\n            setStartTime(\"-\")\r\n            setEndTime(\"-\")\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setAltitude(0)\r\n            setCourseRangeMin(0)\r\n            setCourseRangeMax(0)\r\n            setCourseIncrement(0)\r\n            setSpeedRangeMin(0)\r\n            setSpeedRangeMax(0)\r\n            setSpeedIncrement(0)\r\n            setAltitudeRangeMin(0)\r\n            setAltitudeRangeMax(0)\r\n            setAltitudeIncrement(0)\r\n            SetIcao(0)\r\n            setHeading(0)\r\n            setCallSign(\"NS\")\r\n            setVerticalRate(0)\r\n\r\n        } else if(trackInput === \"multi\" && trackMode === \"manual\"){\r\n            const $selectCountry = document.getElementById('country');\r\n            $selectCountry.value = \"1\";\r\n            const $selectPosition = document.getElementById('position');\r\n            $selectPosition.value = \"1\";\r\n            if(statusRadio == 1){\r\n                setLongitude(0)\r\n                setLatitude(0)\r\n            } else {\r\n                setBearing(0)\r\n                setDistance(0)\r\n            }\r\n            setCourse(0)\r\n            setSpeed(0)\r\n            setAltitude(0)\r\n            SetIcao(0)\r\n            setHeading(0)\r\n            setCallSign(\"\")\r\n            setVerticalRate(0)\r\n        } else if(trackInput === \"multi\" && trackMode === \"automatic\"){\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"main-container\">   \r\n        <label className=\"label\">ADSB TRACK LIST INFO</label>\r\n        <div className=\"track-info\">\r\n            <div className=\"track-list\">\r\n                <div className=\"table-wrapper\">\r\n                    <table className=\"scrolldown\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Track Mode</th>\r\n                                <th>ICAO</th>\r\n                                <th>ADSB Name</th>\r\n                                <th>Call Sign</th>\r\n                                <th>Stat Time</th>\r\n                                <th>End Time</th>\r\n                                <th>Last Update Time</th>\r\n                                <th>Status</th>\r\n                                <th>Action</th>\r\n                                <th><input type=\"checkbox\" name=\"allselect\" checked= { !ADSBData.some( (adsb)=>adsb?.isChecked!==true)} onChange={handleChange} /></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n\r\n                            ADSBData.map( (d,i)=>(\r\n                                <tr key={i}> \r\n                                    <td>{d.id}</td>\r\n                                    <td>{d.trackMode}</td>\r\n                                    <td>{d.icao}</td>\r\n                                    <td>{d.country}</td>\r\n                                    <td>{d.callSign}</td>\r\n                                    <td>{d.startTime}</td>\r\n                                    <td>{d.endTime}</td>\r\n                                    <td>{d.lastSend}</td>\r\n                                    <td>{d.status}</td>\r\n                                    <td>\r\n                                        {/* <button className=\"btn btn-sm btn-info me-2\">Detail</button> */}\r\n                                        <button className=\"btn btn-sm btn-primary me-2\" id={d.id} onClick={handleGetUpdateADSBTrack}>Edit</button>\r\n                                        {/* <button className=\"btn btn-sm btn-danger\">Delete</button> */}\r\n                                    </td>\r\n                                    <td className=\"select\"><input type=\"checkbox\" name={d.id}  checked={d?.isChecked || false } onChange={ handleChange }/> </td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                          \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button className=\"btn btn-primary mt-2\" onClick={handlerGetIdSendTrack}>SEND</button>\r\n                {/* <button className=\"btn btn-info mt-2\" onClick={handlerGetIdSendTrack}>START</button> */}\r\n                <button className=\"btn btn-danger mt-2\" onClick={handlerGetIdStopTrack}>STOP</button>\r\n                <div className=\"btn-delete\">\r\n                    <Button variant=\"btn btn-danger mt-2\" onClick={handlerGetIdDeleteTrack}>\r\n                        DELETE\r\n                    </Button>\r\n                    <Modal show={showDelete} onHide={handleCloseDelete}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>Yakin hapus Track?</Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={handleCloseDelete}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={handlerDeleteTrack}>\r\n                                Delete\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"container-list\">\r\n        <label className=\"label\">DATA SETTING</label>\r\n            <div className=\"track-list-1\">\r\n                <div className=\"data-setting\">\r\n                    <table className=\"table-input\"  >\r\n                        <tr>\r\n                            <td className=\"id1\"></td>\r\n                            <td>Track Input</td>\r\n\r\n                            <td>             \r\n                                <select name=\"trak-input-radio\"  class=\"form-input\" id=\"ti\" onChange={handleTrackInput} >\r\n                                    <option value=\"-\">-- Pilih --</option>\r\n                                    <option value=\"single\">Single</option>\r\n                                    <option value=\"multi\">Multi</option>\r\n                                    <option value=\"import\">Import</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Track Mode</td>\r\n                            <td>\r\n                                <select  name=\"track-mode-radio\" class=\"form-input\" id=\"tmr\"   onChange={handleTrackMode} disabled> \r\n                                    <option value=\"-\">-- Pilih --</option>\r\n                                    <option value=\"manual\">Manual</option>\r\n                                    <option value=\"automatic\">Automatic</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Count</td>\r\n                            <td><input \r\n                                type=\"number\" \r\n                                id=\"count\"\r\n                                name=\"count\"\r\n                                placeholder=\"Count\"\r\n                                class=\"form-input\"\r\n                                value={count}\r\n                                onChange={(e) => setCount(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Start Time</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"datetime-local\" \r\n                                id=\"start-time-input\" \r\n                                name=\"input-start\"\r\n                                class=\"form-input\"\r\n                                value={startTime}\r\n                                onChange={(e) => setStartTime(e.target.value)}\r\n                                disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>End Time</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"datetime-local\" \r\n                                id=\"end-time-input\" \r\n                                name=\"input-end\"\r\n                                class=\"form-input\"\r\n                                value={endTime}\r\n                                onChange={(e) => setEndTime(e.target.value)}\r\n                                disabled>\r\n                                </input>\r\n                            </td>  \r\n                            <td></td>\r\n                            <td>id:{id}, radio:{statusRadio}, status:{edit}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"course\"\r\n                                name=\"course\"\r\n                                placeholder=\"Course\"\r\n                                class=\"form-input\"\r\n                                value={course}\r\n                                onChange={(e) => setCourse(e.target.value)}\r\n                                disabled>\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Speed</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"speed\"\r\n                                name=\"speed\"\r\n                                placeholder=\"Speed\"\r\n                                class=\"form-input\"\r\n                                value={speed}\r\n                                onChange={(e) => setSpeed(e.target.value)}\r\n                                disabled>\r\n                                </input> knot\r\n                            </td>\r\n                            <td>Altitude</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"altitude\"\r\n                                name=\"altitude\"\r\n                                placeholder=\"Altitude\"\r\n                                class=\"form-input\"\r\n                                value={altitude}\r\n                                onChange={(e) => setAltitude(e.target.value)}\r\n                                disabled>\r\n                                </input> feet\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Variation</td>\r\n                            <td></td>\r\n                            <td>Speed Variation</td>\r\n                            <td></td>\r\n                            <td>Altitude  Variation</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n            \r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Range</td>\r\n                            <td >\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"course-range-min\" \r\n                                name=\"course-range-min\" \r\n                                placeholder=\"Min\"\r\n                                class=\"form-input-increment\"\r\n                                value={courseRangeMin}\r\n                                onChange={(e) => setCourseRangeMin(e.target.value)} \r\n                                disabled>\r\n                                </input>\r\n                                &nbsp;\r\n                                To\r\n                                &nbsp;\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"course-range-max\" \r\n                                name=\"course-range-max\" \r\n                                placeholder=\"Max\"\r\n                                class=\"form-input-increment\"\r\n                                value={courseRangeMax}\r\n                                onChange={(e) => setCourseRangeMax(e.target.value)}\r\n                                disabled>\r\n                                </input> deg\r\n                            </td> \r\n                            <td>Speed Range</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"speed-range-min\" \r\n                                name=\"speed-range-min\" \r\n                                placeholder=\"Min\"\r\n                                class=\"form-input-increment\"\r\n                                value={speedRangeMin}\r\n                                onChange={(e) => setSpeedRangeMin(e.target.value)} \r\n                                disabled>\r\n                                </input>\r\n                                &nbsp;\r\n                                To\r\n                                &nbsp;\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"speed-range-max\" \r\n                                name=\"speed-range-max\" \r\n                                placeholder=\"Max\"\r\n                                class=\"form-input-increment\"\r\n                                value={speedRangeMax}\r\n                                onChange={(e) => setSpeedRangeMax(e.target.value)}\r\n                                disabled>\r\n                                </input> knot\r\n                            </td>  \r\n                            <td>Altitude Range</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"altitude-range-min\" \r\n                                name=\"altitude-range-min\" \r\n                                placeholder=\"Min\"\r\n                                class=\"form-input-increment\"\r\n                                value={altitudeRangeMin}\r\n                                onChange={(e) => setAltitudeRangeMin(e.target.value)} \r\n                                disabled>\r\n                                </input>\r\n                                &nbsp;\r\n                                To\r\n                                &nbsp;\r\n                                <input \r\n                                type=\"number\" \r\n                                className=\"input-range\"\r\n                                id=\"altitude-range-max\" \r\n                                name=\"altitude-range-max\"\r\n                                placeholder=\"Max\" \r\n                                class=\"form-input-increment\"\r\n                                value={altitudeRangeMax}\r\n                                onChange={(e) => setAltitudeRangeMax(e.target.value)}\r\n                                disabled >\r\n                                </input> feet\r\n                            </td>  \r\n                            <td></td>\r\n                        </tr>   \r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Course Increment</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"course-increment\"\r\n                                name=\"course-increment\"\r\n                                placeholder=\"Course Increment\"\r\n                                class=\"form-input\"\r\n                                value={courseIncrement}\r\n                                onChange={(e) => setCourseIncrement(e.target.value)}\r\n                                disabled >\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Speed Increment</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"speed-increment\"\r\n                                name=\"speed-increment\"\r\n                                placeholder=\"Speed Increment\"\r\n                                class=\"form-input\"\r\n                                value={speedIncrement}\r\n                                onChange={(e) => setSpeedIncrement(e.target.value)} \r\n                                disabled>\r\n                                </input> knot\r\n                            </td>\r\n                                <td> Altitude Increment </td> \r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"altitude-increment\"\r\n                                name=\"altitude-increment\"\r\n                                placeholder=\"Altitude Increment\"\r\n                                class=\"form-input\"\r\n                                value={altitudeIncrement}\r\n                                onChange={(e) => setAltitudeIncrement(e.target.value)} \r\n                                disabled>\r\n                                </input> feet\r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr className=\"radio-box-top\">\r\n                            <td><input type=\"radio\" className=\"radio\" id=\"radio1\" name=\"radio1\" onClick={handlerRadio1}  disabled={(trackInput === \"\" && trackMode ===\"\")} checked={statusRadio === 1}/></td>\r\n                            <td>Latitude</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"latitude\"\r\n                                name=\"latitude\"\r\n                                placeholder=\"Latitude\"\r\n                                class=\"form-input\"\r\n                                value={latitude}\r\n                                onChange={(e) => setLatitude(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Longitude</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"longitude\"\r\n                                name=\"longitude\"\r\n                                placeholder=\"Longitude\"\r\n                                class=\"form-input\"\r\n                                value={longitude}\r\n                                onChange={(e) => setLongitude(e.target.value)}  disabled> \r\n                                </input>\r\n                            </td>\r\n                            <td></td>\r\n                            <td>    \r\n                            </td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr  className=\"radio-box-bottom\">\r\n                        <td><input type=\"radio\" className=\"radio\" id=\"radio2\" name=\"radio2\"  onClick={handlerRadio2} disabled={((trackInput === \"\" && trackMode === \"\") ? true : false)} checked={statusRadio === 2}/></td>\r\n                            <td>Bearing</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"bearing\"\r\n                                name=\"bearing\"\r\n                                placeholder=\"Bearing\"\r\n                                class=\"form-input\"\r\n                                value={bearing}\r\n                                onChange={(e) => setBearing(e.target.value)} disabled={(statusRadio === 1? true : false)}>\r\n                                </input> deg\r\n                            </td>\r\n                            <td>Distance</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"distance\"\r\n                                name=\"distance\"\r\n                                placeholder=\"Distance\"\r\n                                class=\"form-input\"\r\n                                value={distance}\r\n                                onChange={(e) => setDistance(e.target.value)} disabled={(statusRadio === 1? true : false)}> \r\n                                </input> NM\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n            \r\n                        \r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Country</td>\r\n                            <td>             \r\n                                <select name=\"country\"  class=\"form-input\" id=\"country\" onChange={(e) => setCountry(e.target.value)} disabled>\r\n                                    <option value=\"\">-- Pilih --</option>\r\n                                    <option value=\"IND\">IND</option>\r\n                                    <option value=\"MY\">MY</option>\r\n                                    <option value=\"USA\">USA</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>Position</td>\r\n                            <td>             \r\n                                <select name=\"position\" class=\"form-input\" id=\"position\" onChange={(e) => setPosition(e.target.value)} disabled>\r\n                                    <option value=\"\">-- Pilih --</option>\r\n                                    <option value=\"0\">Ground</option>\r\n                                    <option value=\"1\">Air</option>\r\n                                </select>\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>ICAO</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"icao\"\r\n                                name=\"icao\"\r\n                                placeholder=\"ICAO\"\r\n                                class=\"form-input\"\r\n                                value={icao}\r\n                                onChange={(e) => SetIcao(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Heading</td>\r\n                            <td>             \r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"heading\"\r\n                                name=\"heading\"\r\n                                placeholder=\"heading\"\r\n                                class=\"form-input\"\r\n                                value={heading}\r\n                                onChange={(e) => setHeading(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>Flight/Call Sign</td>\r\n                            <td>\r\n                                <input \r\n                                type=\"text\" \r\n                                id=\"call-sign\"\r\n                                name=\"call-sign\"\r\n                                placeholder=\"Flight/Call Sign\"\r\n                                class=\"form-input\"\r\n                                value={callSign}\r\n                                onChange={(e) => setCallSign(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td>Vertical Rate</td>\r\n                            <td>             \r\n                                <input \r\n                                type=\"number\" \r\n                                id=\"vertical-rate\"\r\n                                name=\"vertical-rate\"\r\n                                placeholder=\"Vertical Rate\"\r\n                                class=\"form-input\"\r\n                                value={verticalRate}\r\n                                onChange={(e) => setVerticalRate(e.target.value)} disabled>\r\n                                </input>\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                     </table>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-info mt-2\" onClick={handlerGetDefault} >GET DEFAULT</button>\r\n            <Button variant=\"btn btn-success mt-2\" onClick={handlerValidasiSaveTrack}>\r\n                SAVE ONLY\r\n            </Button>\r\n            <Modal show={showSave} onHide={handleCloseSave}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Save Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Yakin untuk menyimpan Track?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSave}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handlerSaveTrack}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Button variant=\"btn btn-primary mt-2\" onClick={handlerValidasiInputSaveAndSendUpdate} disabled={((checkTrackMode === \"automatic\")? true: false)}>\r\n                SAVE & SEND\r\n            </Button>\r\n            <Modal show={showSaveAndSend} onHide={handleCloseSaveAndSend}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Save and Send Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Yakin untuk Menyimpan dan Mengirim Track?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseSaveAndSend}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handlerSaveAndSendTrack}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <button type=\"submit\" className=\"btn btn-warning mt-2\" onClick={handlerCancel}>CANCEL</button>\r\n        </div>\r\n    </div>\r\n  \r\n    );\r\n}\r\n\r\nexport default ADSBHome; ","D:\\TrackSim\\FE\\src\\components\\OwnShip\\OwnshipForm.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225"],[],{"ruleId":"226","severity":1,"message":"227","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":26},{"ruleId":"226","severity":1,"message":"230","line":9,"column":12,"nodeType":"228","messageId":"229","endLine":9,"endColumn":16},{"ruleId":"226","severity":1,"message":"231","line":10,"column":12,"nodeType":"228","messageId":"229","endLine":10,"endColumn":14},{"ruleId":"226","severity":1,"message":"232","line":10,"column":16,"nodeType":"228","messageId":"229","endLine":10,"endColumn":21},{"ruleId":"226","severity":1,"message":"233","line":11,"column":20,"nodeType":"228","messageId":"229","endLine":11,"endColumn":29},{"ruleId":"226","severity":1,"message":"234","line":12,"column":22,"nodeType":"228","messageId":"229","endLine":12,"endColumn":33},{"ruleId":"226","severity":1,"message":"235","line":13,"column":18,"nodeType":"228","messageId":"229","endLine":13,"endColumn":25},{"ruleId":"226","severity":1,"message":"236","line":45,"column":21,"nodeType":"228","messageId":"229","endLine":45,"endColumn":31},{"ruleId":"226","severity":1,"message":"237","line":53,"column":7,"nodeType":"228","messageId":"229","endLine":53,"endColumn":20},{"ruleId":"226","severity":1,"message":"238","line":81,"column":9,"nodeType":"228","messageId":"229","endLine":81,"endColumn":17},{"ruleId":"226","severity":1,"message":"239","line":87,"column":12,"nodeType":"228","messageId":"229","endLine":87,"endColumn":24},{"ruleId":"240","severity":1,"message":"241","line":102,"column":48,"nodeType":"242","messageId":"243","endLine":102,"endColumn":50},{"ruleId":"226","severity":1,"message":"244","line":105,"column":21,"nodeType":"228","messageId":"229","endLine":105,"endColumn":28},{"ruleId":"240","severity":1,"message":"241","line":146,"column":55,"nodeType":"242","messageId":"243","endLine":146,"endColumn":57},{"ruleId":"226","severity":1,"message":"244","line":149,"column":21,"nodeType":"228","messageId":"229","endLine":149,"endColumn":28},{"ruleId":"226","severity":1,"message":"244","line":191,"column":17,"nodeType":"228","messageId":"229","endLine":191,"endColumn":24},{"ruleId":"226","severity":1,"message":"245","line":8,"column":10,"nodeType":"228","messageId":"229","endLine":8,"endColumn":21},{"ruleId":"226","severity":1,"message":"246","line":8,"column":23,"nodeType":"228","messageId":"229","endLine":8,"endColumn":37},{"ruleId":"226","severity":1,"message":"247","line":9,"column":10,"nodeType":"228","messageId":"229","endLine":9,"endColumn":14},{"ruleId":"226","severity":1,"message":"248","line":9,"column":16,"nodeType":"228","messageId":"229","endLine":9,"endColumn":23},{"ruleId":"226","severity":1,"message":"249","line":10,"column":10,"nodeType":"228","messageId":"229","endLine":10,"endColumn":22},{"ruleId":"226","severity":1,"message":"250","line":11,"column":10,"nodeType":"228","messageId":"229","endLine":11,"endColumn":21},{"ruleId":"226","severity":1,"message":"251","line":11,"column":23,"nodeType":"228","messageId":"229","endLine":11,"endColumn":34},{"ruleId":"226","severity":1,"message":"252","line":12,"column":10,"nodeType":"228","messageId":"229","endLine":12,"endColumn":20},{"ruleId":"226","severity":1,"message":"231","line":18,"column":10,"nodeType":"228","messageId":"229","endLine":18,"endColumn":12},{"ruleId":"226","severity":1,"message":"253","line":19,"column":23,"nodeType":"228","messageId":"229","endLine":19,"endColumn":37},{"ruleId":"226","severity":1,"message":"233","line":20,"column":18,"nodeType":"228","messageId":"229","endLine":20,"endColumn":27},{"ruleId":"226","severity":1,"message":"234","line":21,"column":20,"nodeType":"228","messageId":"229","endLine":21,"endColumn":31},{"ruleId":"226","severity":1,"message":"254","line":23,"column":10,"nodeType":"228","messageId":"229","endLine":23,"endColumn":21},{"ruleId":"226","severity":1,"message":"255","line":45,"column":10,"nodeType":"228","messageId":"229","endLine":45,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":56,"column":38,"nodeType":"242","messageId":"243","endLine":56,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":58,"column":46,"nodeType":"242","messageId":"243","endLine":58,"endColumn":48},{"ruleId":"226","severity":1,"message":"256","line":214,"column":13,"nodeType":"228","messageId":"229","endLine":214,"endColumn":20},{"ruleId":"226","severity":1,"message":"257","line":246,"column":13,"nodeType":"228","messageId":"229","endLine":246,"endColumn":22},{"ruleId":"226","severity":1,"message":"258","line":262,"column":13,"nodeType":"228","messageId":"229","endLine":262,"endColumn":27},{"ruleId":"226","severity":1,"message":"259","line":336,"column":11,"nodeType":"228","messageId":"229","endLine":336,"endColumn":19},{"ruleId":"226","severity":1,"message":"244","line":357,"column":11,"nodeType":"228","messageId":"229","endLine":357,"endColumn":18},{"ruleId":"226","severity":1,"message":"260","line":387,"column":13,"nodeType":"228","messageId":"229","endLine":387,"endColumn":21},{"ruleId":"226","severity":1,"message":"261","line":410,"column":17,"nodeType":"228","messageId":"229","endLine":410,"endColumn":24},{"ruleId":"226","severity":1,"message":"238","line":441,"column":9,"nodeType":"228","messageId":"229","endLine":441,"endColumn":17},{"ruleId":"262","severity":1,"message":"263","line":446,"column":6,"nodeType":"264","endLine":446,"endColumn":8,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":834,"column":129,"nodeType":"268","messageId":"269","endLine":834,"endColumn":131},{"ruleId":"266","severity":1,"message":"267","line":834,"column":170,"nodeType":"268","messageId":"269","endLine":834,"endColumn":172},{"ruleId":"226","severity":1,"message":"270","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"226","severity":1,"message":"271","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":15},{"ruleId":"226","severity":1,"message":"272","line":8,"column":8,"nodeType":"228","messageId":"229","endLine":8,"endColumn":20},{"ruleId":"226","severity":1,"message":"273","line":13,"column":12,"nodeType":"228","messageId":"229","endLine":13,"endColumn":26},{"ruleId":"226","severity":1,"message":"274","line":13,"column":28,"nodeType":"228","messageId":"229","endLine":13,"endColumn":45},{"ruleId":"226","severity":1,"message":"275","line":14,"column":12,"nodeType":"228","messageId":"229","endLine":14,"endColumn":23},{"ruleId":"226","severity":1,"message":"233","line":17,"column":20,"nodeType":"228","messageId":"229","endLine":17,"endColumn":29},{"ruleId":"226","severity":1,"message":"234","line":18,"column":22,"nodeType":"228","messageId":"229","endLine":18,"endColumn":33},{"ruleId":"226","severity":1,"message":"235","line":19,"column":18,"nodeType":"228","messageId":"229","endLine":19,"endColumn":25},{"ruleId":"226","severity":1,"message":"276","line":50,"column":11,"nodeType":"228","messageId":"229","endLine":50,"endColumn":20},{"ruleId":"226","severity":1,"message":"255","line":51,"column":12,"nodeType":"228","messageId":"229","endLine":51,"endColumn":19},{"ruleId":"226","severity":1,"message":"277","line":54,"column":12,"nodeType":"228","messageId":"229","endLine":54,"endColumn":21},{"ruleId":"226","severity":1,"message":"278","line":54,"column":23,"nodeType":"228","messageId":"229","endLine":54,"endColumn":35},{"ruleId":"226","severity":1,"message":"277","line":66,"column":13,"nodeType":"228","messageId":"229","endLine":66,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":69,"column":54,"nodeType":"242","messageId":"281","endLine":69,"endColumn":55},{"ruleId":"226","severity":1,"message":"282","line":156,"column":11,"nodeType":"228","messageId":"229","endLine":156,"endColumn":33},{"ruleId":"226","severity":1,"message":"283","line":157,"column":16,"nodeType":"228","messageId":"229","endLine":157,"endColumn":20},{"ruleId":"226","severity":1,"message":"284","line":157,"column":22,"nodeType":"228","messageId":"229","endLine":157,"endColumn":29},{"ruleId":"226","severity":1,"message":"284","line":1051,"column":20,"nodeType":"228","messageId":"229","endLine":1051,"endColumn":27},{"ruleId":"226","severity":1,"message":"285","line":1125,"column":17,"nodeType":"228","messageId":"229","endLine":1125,"endColumn":26},{"ruleId":"226","severity":1,"message":"285","line":1148,"column":21,"nodeType":"228","messageId":"229","endLine":1148,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":1261,"column":28,"nodeType":"242","messageId":"243","endLine":1261,"endColumn":30},{"ruleId":"286","severity":1,"message":"287","line":1278,"column":17,"nodeType":"228","messageId":"288","endLine":1278,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":1285,"column":28,"nodeType":"242","messageId":"243","endLine":1285,"endColumn":30},{"ruleId":"286","severity":1,"message":"287","line":1312,"column":17,"nodeType":"228","messageId":"288","endLine":1312,"endColumn":20},{"ruleId":"226","severity":1,"message":"289","line":1312,"column":17,"nodeType":"228","messageId":"229","endLine":1312,"endColumn":20},{"ruleId":"240","severity":1,"message":"241","line":1319,"column":28,"nodeType":"242","messageId":"243","endLine":1319,"endColumn":30},{"ruleId":"226","severity":1,"message":"247","line":9,"column":10,"nodeType":"228","messageId":"229","endLine":9,"endColumn":14},{"ruleId":"226","severity":1,"message":"248","line":9,"column":16,"nodeType":"228","messageId":"229","endLine":9,"endColumn":23},{"ruleId":"226","severity":1,"message":"249","line":10,"column":10,"nodeType":"228","messageId":"229","endLine":10,"endColumn":22},{"ruleId":"226","severity":1,"message":"250","line":11,"column":10,"nodeType":"228","messageId":"229","endLine":11,"endColumn":21},{"ruleId":"226","severity":1,"message":"251","line":11,"column":23,"nodeType":"228","messageId":"229","endLine":11,"endColumn":34},{"ruleId":"226","severity":1,"message":"252","line":12,"column":10,"nodeType":"228","messageId":"229","endLine":12,"endColumn":20},{"ruleId":"226","severity":1,"message":"290","line":16,"column":10,"nodeType":"228","messageId":"229","endLine":16,"endColumn":25},{"ruleId":"226","severity":1,"message":"232","line":18,"column":14,"nodeType":"228","messageId":"229","endLine":18,"endColumn":19},{"ruleId":"226","severity":1,"message":"253","line":19,"column":23,"nodeType":"228","messageId":"229","endLine":19,"endColumn":37},{"ruleId":"226","severity":1,"message":"233","line":20,"column":18,"nodeType":"228","messageId":"229","endLine":20,"endColumn":27},{"ruleId":"226","severity":1,"message":"291","line":47,"column":10,"nodeType":"228","messageId":"229","endLine":47,"endColumn":19},{"ruleId":"226","severity":1,"message":"292","line":47,"column":21,"nodeType":"228","messageId":"229","endLine":47,"endColumn":33},{"ruleId":"226","severity":1,"message":"273","line":48,"column":10,"nodeType":"228","messageId":"229","endLine":48,"endColumn":24},{"ruleId":"226","severity":1,"message":"274","line":48,"column":26,"nodeType":"228","messageId":"229","endLine":48,"endColumn":43},{"ruleId":"226","severity":1,"message":"275","line":49,"column":10,"nodeType":"228","messageId":"229","endLine":49,"endColumn":21},{"ruleId":"226","severity":1,"message":"293","line":49,"column":23,"nodeType":"228","messageId":"229","endLine":49,"endColumn":37},{"ruleId":"226","severity":1,"message":"294","line":50,"column":23,"nodeType":"228","messageId":"229","endLine":50,"endColumn":37},{"ruleId":"226","severity":1,"message":"295","line":51,"column":10,"nodeType":"228","messageId":"229","endLine":51,"endColumn":14},{"ruleId":"226","severity":1,"message":"235","line":51,"column":16,"nodeType":"228","messageId":"229","endLine":51,"endColumn":23},{"ruleId":"226","severity":1,"message":"296","line":59,"column":10,"nodeType":"228","messageId":"229","endLine":59,"endColumn":17},{"ruleId":"226","severity":1,"message":"297","line":59,"column":19,"nodeType":"228","messageId":"229","endLine":59,"endColumn":29},{"ruleId":"226","severity":1,"message":"298","line":60,"column":10,"nodeType":"228","messageId":"229","endLine":60,"endColumn":19},{"ruleId":"226","severity":1,"message":"299","line":60,"column":21,"nodeType":"228","messageId":"229","endLine":60,"endColumn":33},{"ruleId":"226","severity":1,"message":"300","line":61,"column":10,"nodeType":"228","messageId":"229","endLine":61,"endColumn":19},{"ruleId":"226","severity":1,"message":"301","line":61,"column":21,"nodeType":"228","messageId":"229","endLine":61,"endColumn":33},{"ruleId":"226","severity":1,"message":"302","line":62,"column":10,"nodeType":"228","messageId":"229","endLine":62,"endColumn":20},{"ruleId":"226","severity":1,"message":"303","line":62,"column":22,"nodeType":"228","messageId":"229","endLine":62,"endColumn":35},{"ruleId":"226","severity":1,"message":"304","line":68,"column":10,"nodeType":"228","messageId":"229","endLine":68,"endColumn":18},{"ruleId":"226","severity":1,"message":"305","line":68,"column":20,"nodeType":"228","messageId":"229","endLine":68,"endColumn":31},{"ruleId":"226","severity":1,"message":"306","line":69,"column":10,"nodeType":"228","messageId":"229","endLine":69,"endColumn":19},{"ruleId":"226","severity":1,"message":"307","line":69,"column":21,"nodeType":"228","messageId":"229","endLine":69,"endColumn":33},{"ruleId":"226","severity":1,"message":"308","line":70,"column":10,"nodeType":"228","messageId":"229","endLine":70,"endColumn":19},{"ruleId":"226","severity":1,"message":"309","line":70,"column":21,"nodeType":"228","messageId":"229","endLine":70,"endColumn":33},{"ruleId":"226","severity":1,"message":"310","line":71,"column":10,"nodeType":"228","messageId":"229","endLine":71,"endColumn":15},{"ruleId":"226","severity":1,"message":"311","line":71,"column":17,"nodeType":"228","messageId":"229","endLine":71,"endColumn":25},{"ruleId":"226","severity":1,"message":"312","line":77,"column":10,"nodeType":"228","messageId":"229","endLine":77,"endColumn":19},{"ruleId":"226","severity":1,"message":"313","line":77,"column":21,"nodeType":"228","messageId":"229","endLine":77,"endColumn":33},{"ruleId":"226","severity":1,"message":"314","line":78,"column":9,"nodeType":"228","messageId":"229","endLine":78,"endColumn":20},{"ruleId":"226","severity":1,"message":"315","line":79,"column":9,"nodeType":"228","messageId":"229","endLine":79,"endColumn":22},{"ruleId":"226","severity":1,"message":"316","line":80,"column":9,"nodeType":"228","messageId":"229","endLine":80,"endColumn":20},{"ruleId":"226","severity":1,"message":"255","line":81,"column":10,"nodeType":"228","messageId":"229","endLine":81,"endColumn":17},{"ruleId":"226","severity":1,"message":"317","line":82,"column":16,"nodeType":"228","messageId":"229","endLine":82,"endColumn":23},{"ruleId":"226","severity":1,"message":"318","line":106,"column":11,"nodeType":"228","messageId":"229","endLine":106,"endColumn":23},{"ruleId":"240","severity":1,"message":"241","line":108,"column":38,"nodeType":"242","messageId":"243","endLine":108,"endColumn":40},{"ruleId":"240","severity":1,"message":"241","line":110,"column":46,"nodeType":"242","messageId":"243","endLine":110,"endColumn":48},{"ruleId":"226","severity":1,"message":"256","line":281,"column":13,"nodeType":"228","messageId":"229","endLine":281,"endColumn":20},{"ruleId":"226","severity":1,"message":"257","line":313,"column":13,"nodeType":"228","messageId":"229","endLine":313,"endColumn":22},{"ruleId":"226","severity":1,"message":"258","line":329,"column":13,"nodeType":"228","messageId":"229","endLine":329,"endColumn":27},{"ruleId":"226","severity":1,"message":"319","line":402,"column":7,"nodeType":"228","messageId":"229","endLine":402,"endColumn":30},{"ruleId":"226","severity":1,"message":"259","line":411,"column":11,"nodeType":"228","messageId":"229","endLine":411,"endColumn":19},{"ruleId":"226","severity":1,"message":"244","line":430,"column":11,"nodeType":"228","messageId":"229","endLine":430,"endColumn":18},{"ruleId":"226","severity":1,"message":"260","line":455,"column":13,"nodeType":"228","messageId":"229","endLine":455,"endColumn":21},{"ruleId":"226","severity":1,"message":"261","line":478,"column":17,"nodeType":"228","messageId":"229","endLine":478,"endColumn":24},{"ruleId":"226","severity":1,"message":"238","line":509,"column":9,"nodeType":"228","messageId":"229","endLine":509,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":1273,"column":131,"nodeType":"268","messageId":"269","endLine":1273,"endColumn":133},{"ruleId":"266","severity":1,"message":"267","line":1273,"column":172,"nodeType":"268","messageId":"269","endLine":1273,"endColumn":174},{"ruleId":"226","severity":1,"message":"270","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"226","severity":1,"message":"320","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":17},{"ruleId":"226","severity":1,"message":"271","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"226","severity":1,"message":"233","line":15,"column":20,"nodeType":"228","messageId":"229","endLine":15,"endColumn":29},{"ruleId":"226","severity":1,"message":"234","line":16,"column":22,"nodeType":"228","messageId":"229","endLine":16,"endColumn":33},{"ruleId":"226","severity":1,"message":"295","line":17,"column":12,"nodeType":"228","messageId":"229","endLine":17,"endColumn":16},{"ruleId":"226","severity":1,"message":"235","line":17,"column":18,"nodeType":"228","messageId":"229","endLine":17,"endColumn":25},{"ruleId":"226","severity":1,"message":"255","line":54,"column":12,"nodeType":"228","messageId":"229","endLine":54,"endColumn":19},{"ruleId":"226","severity":1,"message":"284","line":1062,"column":20,"nodeType":"228","messageId":"229","endLine":1062,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":1263,"column":28,"nodeType":"242","messageId":"243","endLine":1263,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":1290,"column":28,"nodeType":"242","messageId":"243","endLine":1290,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":1325,"column":28,"nodeType":"242","messageId":"243","endLine":1325,"endColumn":30},{"ruleId":"226","severity":1,"message":"270","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"226","severity":1,"message":"320","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":17},{"ruleId":"226","severity":1,"message":"271","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"226","severity":1,"message":"234","line":16,"column":22,"nodeType":"228","messageId":"229","endLine":16,"endColumn":33},{"ruleId":"226","severity":1,"message":"255","line":49,"column":12,"nodeType":"228","messageId":"229","endLine":49,"endColumn":19},{"ruleId":"226","severity":1,"message":"321","line":114,"column":9,"nodeType":"228","messageId":"229","endLine":114,"endColumn":29},{"ruleId":"226","severity":1,"message":"284","line":963,"column":20,"nodeType":"228","messageId":"229","endLine":963,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":1190,"column":28,"nodeType":"242","messageId":"243","endLine":1190,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":1212,"column":28,"nodeType":"242","messageId":"243","endLine":1212,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":1245,"column":28,"nodeType":"242","messageId":"243","endLine":1245,"endColumn":30},{"ruleId":"226","severity":1,"message":"270","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":13},{"ruleId":"226","severity":1,"message":"320","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":17},{"ruleId":"226","severity":1,"message":"271","line":6,"column":10,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"226","severity":1,"message":"233","line":14,"column":20,"nodeType":"228","messageId":"229","endLine":14,"endColumn":29},{"ruleId":"226","severity":1,"message":"234","line":15,"column":22,"nodeType":"228","messageId":"229","endLine":15,"endColumn":33},{"ruleId":"226","severity":1,"message":"295","line":16,"column":12,"nodeType":"228","messageId":"229","endLine":16,"endColumn":16},{"ruleId":"226","severity":1,"message":"235","line":16,"column":18,"nodeType":"228","messageId":"229","endLine":16,"endColumn":25},{"ruleId":"226","severity":1,"message":"255","line":52,"column":12,"nodeType":"228","messageId":"229","endLine":52,"endColumn":19},{"ruleId":"226","severity":1,"message":"322","line":56,"column":12,"nodeType":"228","messageId":"229","endLine":56,"endColumn":22},{"ruleId":"226","severity":1,"message":"323","line":57,"column":11,"nodeType":"228","messageId":"229","endLine":57,"endColumn":28},{"ruleId":"226","severity":1,"message":"324","line":58,"column":11,"nodeType":"228","messageId":"229","endLine":58,"endColumn":27},{"ruleId":"226","severity":1,"message":"238","line":89,"column":13,"nodeType":"228","messageId":"229","endLine":89,"endColumn":21},{"ruleId":"286","severity":1,"message":"287","line":713,"column":17,"nodeType":"228","messageId":"288","endLine":713,"endColumn":20},{"ruleId":"226","severity":1,"message":"289","line":713,"column":17,"nodeType":"228","messageId":"229","endLine":713,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'view' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'setLastSend' is assigned a value but never used.","'setTime' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'hadlerDisable' is assigned a value but never used.","'interval' is assigned a value but never used.","'disableField' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'resSend' is assigned a value but never used.","'ownplatform' is assigned a value but never used.","'setOwnplatform' is assigned a value but never used.","'info' is assigned a value but never used.","'setInfo' is assigned a value but never used.","'btnStartInfo' is assigned a value but never used.","'btnStopInfo' is assigned a value but never used.","'setStopInfo' is assigned a value but never used.","'statusData' is assigned a value but never used.","'setTrackNumber' is assigned a value but never used.","'environment' is assigned a value but never used.","'message' is assigned a value but never used.","'resData' is assigned a value but never used.","'resConfig' is assigned a value but never used.","'resSaveAndSend' is assigned a value but never used.","'resJson2' is assigned a value but never used.","'resStart' is assigned a value but never used.","'resStop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTrackMode'. Either include it or remove the dependency array.","ArrayExpression",["325"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'axios' is defined but never used.","'Alert' is defined but never used.","'useWebSocket' is defined but never used.","'RadarDataClone' is assigned a value but never used.","'setRadarDataClone' is assigned a value but never used.","'RadarUpdate' is assigned a value but never used.","'idChecked' is assigned a value but never used.","'connected' is assigned a value but never used.","'setConnected' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'handlerSetCheckedTrack' is assigned a value but never used.","'name' is assigned a value but never used.","'checked' is assigned a value but never used.","'getIdSend' is defined but never used.","no-redeclare","'now' is already defined.","redeclared","'now' is assigned a value but never used.","'ownplatformData' is assigned a value but never used.","'RadarData' is assigned a value but never used.","'setRadarData' is assigned a value but never used.","'setRadarUpdate' is assigned a value but never used.","'setStatusRadio' is assigned a value but never used.","'time' is assigned a value but never used.","'bearing' is assigned a value but never used.","'setBearing' is assigned a value but never used.","'mode1code' is assigned a value but never used.","'setMode1Code' is assigned a value but never used.","'mode2code' is assigned a value but never used.","'setMode2Code' is assigned a value but never used.","'trackInput' is assigned a value but never used.","'setTrackInput' is assigned a value but never used.","'distance' is assigned a value but never used.","'setDistance' is assigned a value but never used.","'mode3code' is assigned a value but never used.","'setMode3Code' is assigned a value but never used.","'mode4code' is assigned a value but never used.","'setMode4Code' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'mode5code' is assigned a value but never used.","'setMode5Code' is assigned a value but never used.","'checkIdSend' is assigned a value but never used.","'checkIdDelete' is assigned a value but never used.","'checkIdStop' is assigned a value but never used.","'setEdit' is assigned a value but never used.","'getTrackMode' is assigned a value but never used.","'handleDeleteOwnPlatform' is assigned a value but never used.","'DataTable' is defined but never used.","'handlerValidasiInput' is assigned a value but never used.","'showDelete' is assigned a value but never used.","'handleCloseDelete' is assigned a value but never used.","'handleShowDelete' is assigned a value but never used.",{"desc":"326","fix":"327"},"Update the dependencies array to be: [getTrackMode]",{"range":"328","text":"329"},[12150,12152],"[getTrackMode]"]